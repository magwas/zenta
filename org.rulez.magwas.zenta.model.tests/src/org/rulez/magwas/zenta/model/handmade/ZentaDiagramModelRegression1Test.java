package org.rulez.magwas.zenta.model.handmade;

import org.junit.Test;

public class ZentaDiagramModelRegression1Test {

	public static boolean debug = false;

	@Test
	public void test0501() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0501"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EObject eObject9 = zentaDiagramModel0
				.eContainer();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel10 = zentaDiagramModel0
				.getDiagramModel();
		zentaDiagramModel0.setDocumentation("");
		zentaDiagramModel0.setId("hi!");
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNull(eObject9);
		org.junit.Assert.assertNotNull(iDiagramModel10);
	}

	@Test
	public void test0502() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0502"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature5 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		int int9 = zentaDiagramModel6.eContainerFeatureID();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel6
				.eStore();
		zentaDiagramModel6.eSetDeliver(true);
		boolean boolean13 = zentaDiagramModel6.hasDiagramReferences();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSet(eStructuralFeature5, boolean13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
	}

	@Test
	public void test0503() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0503"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor3 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EOperation eOperation4 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		java.lang.Object obj9 = zentaDiagramModel5.getAdapter(0L);
		int int10 = zentaDiagramModel5.getLineWidth();
		java.lang.String str11 = zentaDiagramModel5.getId();
		java.lang.String str12 = zentaDiagramModel5.getDocumentation();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel5
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj14 = zentaDiagramModel0
					.eInvoke(eOperation4, adapterList13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(eObjectItor3);
		org.junit.Assert.assertNull(obj9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertNull(str11);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNotNull(adapterList13);
	}

	@Test
	public void test0504() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0504"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor6 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.common.util.URI uRI7 = zentaDiagramModel0.eProxyURI();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain10 = zentaDiagramModel0
				.eSetResource(internal8, notificationChain9);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore14 = zentaDiagramModel11
				.eStore();
		org.eclipse.emf.common.notify.Notification notification15 = null;
		zentaDiagramModel11.eNotify(notification15);
		int int17 = zentaDiagramModel11.getViewpoint();
		int int18 = zentaDiagramModel11.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		int int22 = zentaDiagramModel19.eContainerFeatureID();
		java.lang.String str23 = zentaDiagramModel19.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel24 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel24.setDocumentation("hi!");
		int int27 = zentaDiagramModel24.eContainerFeatureID();
		java.lang.String str28 = zentaDiagramModel24.getName();
		zentaDiagramModel19.setAdapter(zentaDiagramModel24, 1L);
		java.lang.String str31 = zentaDiagramModel24.getId();
		int int32 = zentaDiagramModel24.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel33 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel33.setDocumentation("hi!");
		int int36 = zentaDiagramModel33.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal37 = zentaDiagramModel33
				.eInternalResource();
		java.lang.String str38 = zentaDiagramModel33.getDocumentation();
		boolean boolean39 = zentaDiagramModel33.isChecked();
		zentaDiagramModel33.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel42 = zentaDiagramModel33
				.findDiagramModel();
		zentaDiagramModel11
				.setAdapter(zentaDiagramModel24, zentaDiagramModel33);
		org.rulez.magwas.zenta.model.UndoState undoState44 = zentaDiagramModel24
				.prepareDelete();
		org.rulez.magwas.zenta.model.UndoState undoState45 = zentaDiagramModel0
				.delete(undoState44);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(eObjectItor6);
		org.junit.Assert.assertNull(uRI7);
		org.junit.Assert.assertNull(notificationChain10);
		org.junit.Assert.assertNull(eStore14);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
		org.junit.Assert
				.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
		org.junit.Assert
				.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
		org.junit.Assert
				.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
		org.junit.Assert.assertNull(str31);
		org.junit.Assert
				.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
		org.junit.Assert
				.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
		org.junit.Assert.assertNull(internal37);
		org.junit.Assert.assertEquals(
				"'" + str38 + "' != '" + "hi!" + "'", str38, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean39 + "' != '" + false + "'", boolean39 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel42);
		org.junit.Assert.assertNotNull(undoState44);
	}

	@Test
	public void test0505() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0505"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean7 = zentaDiagramModel0.eVirtualIsSet(97);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
	}

	@Test
	public void test0506() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0506"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean9 = zentaDiagramModel0
					.eDynamicIsSet(eStructuralFeature8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
	}

	@Test
	public void test0507() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0507"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.UndoState undoState7 = zentaDiagramModel0
				.delete();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
	}

	@Test
	public void test0508() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0508"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList4 = zentaDiagramModel0
				.eAdapters();
		java.lang.String str5 = zentaDiagramModel0.getId();
		org.eclipse.emf.ecore.EReference eReference6 = zentaDiagramModel0
				.eContainmentFeature();
		java.lang.Class<?> wildcardClass7 = zentaDiagramModel0.getClass();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNotNull(adapterList4);
		org.junit.Assert.assertNull(str5);
		org.junit.Assert.assertNull(eReference6);
		org.junit.Assert.assertNotNull(wildcardClass7);
	}

	@Test
	public void test0509() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0509"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.URI uRI4 = null;
		zentaDiagramModel0.eSetProxyURI(uRI4);
		zentaDiagramModel0.checkDocumentation("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj10 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature8, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
	}

	@Test
	public void test0510() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0510"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList22 = zentaDiagramModel13
				.getProperties();
		java.lang.Object obj23 = zentaDiagramModel0.getAdapter(iPropertyList22);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList24 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature25 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature25);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert.assertNotNull(iPropertyList22);
		org.junit.Assert.assertNull(obj23);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList24);
	}

	@Test
	public void test0511() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0511"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		int int5 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.EReference eReference6 = zentaDiagramModel0
				.eContainmentFeature();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList7 = zentaDiagramModel0
				.getProperties();
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(eReference6);
		org.junit.Assert.assertNotNull(iPropertyList7);
	}

	@Test
	public void test0512() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0512"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel0
				.getDiagramModel();
		boolean boolean10 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSetStore(eStore11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel9);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
	}

	@Test
	public void test0513() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0513"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		boolean boolean5 = zentaDiagramModel0.eIsProxy();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean7 = zentaDiagramModel0.eVirtualIsSet(52);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
	}

	@Test
	public void test0514() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0514"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.ecore.EReference eReference5 = zentaDiagramModel0
				.eContainmentFeature();
		// The following exception was thrown during execution in test
		// generation
		try {
// flaky:             zentaDiagramModel0.eUnset((int) 'a');
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eReference5);
	}

	@Test
	public void test0515() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0515"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		java.lang.String str6 = zentaDiagramModel0.getLineColor();
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain8 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(str6);
	}

	@Test
	public void test0516() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0516"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject8 = zentaDiagramModel0
					.eObjectForURIFragmentSegment("");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
	}

	@Test
	public void test0517() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0517"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor6 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.eSetDeliver(false);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore13 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel10.eNotify(notification14);
		int int16 = zentaDiagramModel10.getViewpoint();
		int int17 = zentaDiagramModel10.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		int int21 = zentaDiagramModel18.eContainerFeatureID();
		java.lang.String str22 = zentaDiagramModel18.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel23 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel23.setDocumentation("hi!");
		int int26 = zentaDiagramModel23.eContainerFeatureID();
		java.lang.String str27 = zentaDiagramModel23.getName();
		zentaDiagramModel18.setAdapter(zentaDiagramModel23, 1L);
		java.lang.String str30 = zentaDiagramModel23.getId();
		int int31 = zentaDiagramModel23.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel32 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel32.setDocumentation("hi!");
		int int35 = zentaDiagramModel32.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal36 = zentaDiagramModel32
				.eInternalResource();
		java.lang.String str37 = zentaDiagramModel32.getDocumentation();
		boolean boolean38 = zentaDiagramModel32.isChecked();
		zentaDiagramModel32.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel41 = zentaDiagramModel32
				.findDiagramModel();
		zentaDiagramModel10
				.setAdapter(zentaDiagramModel23, zentaDiagramModel32);
		org.eclipse.emf.ecore.resource.Resource resource43 = zentaDiagramModel32
				.eResource();
		zentaDiagramModel32.setDocumentation("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel47 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel47.setDocumentation("hi!");
		java.lang.Object obj51 = zentaDiagramModel47.getAdapter(0L);
		int int52 = zentaDiagramModel47.getLineWidth();
		java.lang.String str53 = zentaDiagramModel47.getDocumentation();
		org.eclipse.emf.ecore.EObject eObject54 = zentaDiagramModel47.getCopy();
		int int55 = zentaDiagramModel47.eContainerFeatureID();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList56 = zentaDiagramModel47
				.eAdapters();
		java.lang.Object obj57 = zentaDiagramModel32.eInvoke(0, adapterList56);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj58 = zentaDiagramModel0
					.eDynamicInvoke(0, adapterList56);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: No InvocationDelegate registered to provide an eInvoke implementation for getAdapter"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(eObjectItor6);
		org.junit.Assert.assertNull(eStore13);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
		org.junit.Assert
				.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
		org.junit.Assert
				.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
		org.junit.Assert.assertNull(str30);
		org.junit.Assert
				.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
		org.junit.Assert
				.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
		org.junit.Assert.assertNull(internal36);
		org.junit.Assert.assertEquals(
				"'" + str37 + "' != '" + "hi!" + "'", str37, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean38 + "' != '" + false + "'", boolean38 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel41);
		org.junit.Assert.assertNull(resource43);
		org.junit.Assert.assertNull(obj51);
		org.junit.Assert
				.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
		org.junit.Assert.assertEquals(
				"'" + str53 + "' != '" + "hi!" + "'", str53, "hi!"
		);
		org.junit.Assert.assertNotNull(eObject54);
		org.junit.Assert
				.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
		org.junit.Assert.assertNotNull(adapterList56);
		org.junit.Assert.assertNotNull(obj57);
	}

	@Test
	public void test0518() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0518"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		java.lang.Object obj9 = zentaDiagramModel5.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject10 = zentaDiagramModel5
				.eInternalContainer();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList11 = zentaDiagramModel5
				.eContents();
		java.lang.Object obj12 = zentaDiagramModel0.getAdapter(eObjectList11);
		zentaDiagramModel0.setViewpoint((short) 100);
		zentaDiagramModel0.checkId("");
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(obj9);
		org.junit.Assert.assertNull(internalEObject10);
		org.junit.Assert.assertNotNull(eObjectList11);
		org.junit.Assert.assertNull(obj12);
	}

	@Test
	public void test0519() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0519"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setLineColor("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		java.lang.Object obj9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicSet(eStructuralFeature8, obj9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
	}

	@Test
	public void test0520() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0520"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineColor("");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		java.lang.Object obj9 = zentaDiagramModel5.getAdapter(0L);
		int int10 = zentaDiagramModel5.getLineWidth();
		java.lang.String str11 = zentaDiagramModel5.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal12 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = zentaDiagramModel5
				.eSetResource(internal12, notificationChain13);
		java.lang.Object obj18 = zentaDiagramModel5.eGet(2, false, false);
		java.lang.Object obj19 = zentaDiagramModel0.getAdapter(false);
		zentaDiagramModel0.eSetDeliver(false);
		zentaDiagramModel0.setChecked(true);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel24 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel24.setDocumentation("hi!");
		java.lang.Object obj28 = zentaDiagramModel24.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList29 = zentaDiagramModel24
				.getChildren();
		zentaDiagramModel24.setLineColor("hi!");
		boolean boolean32 = zentaDiagramModel24.isDeleted();
		zentaDiagramModel24.setDocumentation("");
		org.rulez.magwas.zenta.model.UndoState undoState35 = zentaDiagramModel24
				.prepareDelete();
		org.rulez.magwas.zenta.model.UndoState undoState36 = zentaDiagramModel0
				.delete(undoState35);
		org.junit.Assert.assertNull(obj9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertEquals(
				"'" + str11 + "' != '" + "hi!" + "'", str11, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain14);
		org.junit.Assert.assertNull(obj18);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNull(obj28);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList29);
		org.junit.Assert.assertTrue(
				"'" + boolean32 + "' != '" + true + "'", boolean32 == true
		);
		org.junit.Assert.assertNotNull(undoState35);
	}

	@Test
	public void test0521() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0521"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList4 = zentaDiagramModel0
				.eAdapters();
		boolean boolean5 = zentaDiagramModel0.eDeliver();
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel0.eClass();
		org.eclipse.emf.ecore.resource.Resource resource7 = zentaDiagramModel0
				.eResource();
		zentaDiagramModel0.setDocumentation("");
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList10 = zentaDiagramModel0
				.getProperties();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNotNull(adapterList4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + true + "'", boolean5 == true
		);
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert.assertNull(resource7);
		org.junit.Assert.assertNotNull(iPropertyList10);
	}

	@Test
	public void test0522() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0522"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass3 = zentaDiagramModel0.eClass();
		boolean boolean4 = zentaDiagramModel0.eDeliver();
		zentaDiagramModel0.setDocumentation("");
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		zentaDiagramModel0.setLineWidth(0);
		org.junit.Assert.assertNotNull(eClass3);
		org.junit.Assert.assertTrue(
				"'" + boolean4 + "' != '" + true + "'", boolean4 == true
		);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
	}

	@Test
	public void test0523() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0523"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor6 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.eSetDeliver(false);
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setLineWidth((byte) -1);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(eObjectItor6);
		org.junit.Assert.assertNull(internal9);
	}

	@Test
	public void test0524() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0524"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor17 = zentaDiagramModel0
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor24 = zentaDiagramModel18
				.eAllContents();
		zentaDiagramModel18.eSetDeliver(false);
		org.rulez.magwas.zenta.model.UndoState undoState27 = zentaDiagramModel18
				.prepareDelete();
		org.rulez.magwas.zenta.model.UndoState undoState28 = zentaDiagramModel0
				.delete(undoState27);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertNotNull(eObjectItor17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertNotNull(eObjectItor24);
		org.junit.Assert.assertNotNull(undoState27);
	}

	@Test
	public void test0525() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0525"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		zentaDiagramModel0.setId("");
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = zentaDiagramModel0
				.eDirectResource();
		boolean boolean8 = zentaDiagramModel0.isTemplate();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel9
				.eAdapters();
		boolean boolean14 = zentaDiagramModel9.eDeliver();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel9.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature17 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore21 = zentaDiagramModel18
				.eStore();
		org.eclipse.emf.common.notify.Notification notification22 = null;
		zentaDiagramModel18.eNotify(notification22);
		java.lang.String str24 = zentaDiagramModel18.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel25 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel25.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore28 = zentaDiagramModel25
				.eStore();
		org.eclipse.emf.common.notify.Notification notification29 = null;
		zentaDiagramModel25.eNotify(notification29);
		zentaDiagramModel25.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel33 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel33.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore36 = zentaDiagramModel33
				.eStore();
		zentaDiagramModel18
				.setAdapter(zentaDiagramModel25, zentaDiagramModel33);
		boolean boolean38 = zentaDiagramModel33.eDeliver();
		zentaDiagramModel33.setLineWidth('#');
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature41 = zentaDiagramModel33
				.eContainingFeature();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str42 = zentaDiagramModel0.eURIFragmentSegment(
					eStructuralFeature17, zentaDiagramModel33
			);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(internal7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert.assertNotNull(adapterList13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertNull(eStore21);
		org.junit.Assert.assertNull(str24);
		org.junit.Assert.assertNull(eStore28);
		org.junit.Assert.assertNull(eStore36);
		org.junit.Assert.assertTrue(
				"'" + boolean38 + "' != '" + true + "'", boolean38 == true
		);
		org.junit.Assert.assertNull(eStructuralFeature41);
	}

	@Test
	public void test0526() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0526"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.ecore.InternalEObject internalEObject23 = zentaDiagramModel6
				.eInternalContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature24 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel25 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel25.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel28 = zentaDiagramModel25
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass29 = zentaDiagramModel25.eClass();
		int int30 = zentaDiagramModel25.getConnectionRouterType();
		org.eclipse.emf.ecore.EReference eReference31 = zentaDiagramModel25
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel32 = zentaDiagramModel25
				.getDiagramModel();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str33 = zentaDiagramModel6
					.eURIFragmentSegment(eStructuralFeature24, iDiagramModel32);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNull(internalEObject23);
		org.junit.Assert.assertNotNull(iDiagramModel28);
		org.junit.Assert.assertNotNull(eClass29);
		org.junit.Assert
				.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
		org.junit.Assert.assertNull(eReference31);
		org.junit.Assert.assertNotNull(iDiagramModel32);
	}

	@Test
	public void test0527() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0527"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean14 = zentaDiagramModel0.isDeleted();
		boolean boolean15 = zentaDiagramModel0.isTemplate();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.rulez.magwas.zenta.model.IZentaModel iZentaModel16 = zentaDiagramModel0
					.getZentaModel();
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean15 + "' != '" + false + "'", boolean15 == false
		);
	}

	@Test
	public void test0528() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0528"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		int int10 = zentaDiagramModel0.getLineWidth();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		java.lang.Object obj16 = zentaDiagramModel12.getAdapter(0L);
		int int17 = zentaDiagramModel12.getLineWidth();
		java.lang.String str18 = zentaDiagramModel12.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal19 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain21 = zentaDiagramModel12
				.eSetResource(internal19, notificationChain20);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor22 = zentaDiagramModel12
				.eAllContents();
		org.eclipse.emf.ecore.EReference eReference23 = zentaDiagramModel12
				.eContainmentFeature();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj24 = zentaDiagramModel0
					.eVirtualGet(4, eReference23);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertNull(obj16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
		org.junit.Assert.assertEquals(
				"'" + str18 + "' != '" + "hi!" + "'", str18, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain21);
		org.junit.Assert.assertNotNull(eObjectItor22);
		org.junit.Assert.assertNull(eReference23);
	}

	@Test
	public void test0529() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0529"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.common.notify.NotificationChain notificationChain3 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain4 = zentaDiagramModel0
					.eBasicRemoveFromContainer(notificationChain3);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
	}

	@Test
	public void test0530() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0530"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		java.lang.Object obj13 = zentaDiagramModel0.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel0.eNotify(notification14);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature16 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList17 = zentaDiagramModel0
				.getProperties();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel18
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel18.getId();
		zentaDiagramModel18.checkDocumentation("");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList25 = zentaDiagramModel18
				.eContents();
		zentaDiagramModel18.setConnectionRouterType((byte) 100);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel28 = zentaDiagramModel18
				.getDiagramModel();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel29 = zentaDiagramModel18
				.getDiagramModel();
		org.eclipse.emf.common.notify.NotificationChain notificationChain31 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain32 = zentaDiagramModel0
					.eInverseRemove(
							zentaDiagramModel18, (byte) 100, notificationChain31
					);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert.assertNull(eStructuralFeature16);
		org.junit.Assert.assertNotNull(iPropertyList17);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertNull(str22);
		org.junit.Assert.assertNotNull(eObjectList25);
		org.junit.Assert.assertNotNull(iDiagramModel28);
		org.junit.Assert.assertNotNull(iDiagramModel29);
	}

	@Test
	public void test0531() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0531"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		int int5 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore16 = zentaDiagramModel13
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel13
				.eAdapters();
		boolean boolean18 = zentaDiagramModel13.eDeliver();
		java.lang.Object obj19 = zentaDiagramModel6
				.getAdapter(zentaDiagramModel13);
		org.eclipse.emf.ecore.EClass eClass20 = zentaDiagramModel13.eClass();
		boolean boolean21 = zentaDiagramModel0.eContains(zentaDiagramModel13);
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean23 = zentaDiagramModel13.eVirtualIsSet(1);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertNull(str12);
		org.junit.Assert.assertNull(eStore16);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertTrue(
				"'" + boolean18 + "' != '" + true + "'", boolean18 == true
		);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eClass20);
		org.junit.Assert.assertTrue(
				"'" + boolean21 + "' != '" + false + "'", boolean21 == false
		);
	}

	@Test
	public void test0532() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0532"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		java.lang.String str7 = zentaDiagramModel0.getId();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eOpenUnset(eStructuralFeature8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNull(str7);
	}

	@Test
	public void test0533() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0533"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.setId("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		int int17 = zentaDiagramModel14.eContainerFeatureID();
		java.lang.String str18 = zentaDiagramModel14.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		int int22 = zentaDiagramModel19.eContainerFeatureID();
		java.lang.String str23 = zentaDiagramModel19.getName();
		zentaDiagramModel14.setAdapter(zentaDiagramModel19, 1L);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList26 = zentaDiagramModel19
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj27 = zentaDiagramModel0
					.eDynamicInvoke('#', adapterList26);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
		org.junit.Assert
				.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
		org.junit.Assert.assertNotNull(adapterList26);
	}

	@Test
	public void test0534() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0534"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.ecore.resource.Resource.Internal internal23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel0
				.eSetResource(internal23, notificationChain24);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal30 = zentaDiagramModel26
				.eInternalResource();
		java.lang.Object obj31 = zentaDiagramModel0
				.getAdapter(zentaDiagramModel26);
		org.rulez.magwas.zenta.model.IFolder iFolder32 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder33 = null;
		// The following exception was thrown during execution in test
		// generation
		zentaDiagramModel26.move(iFolder32, iFolder33);
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNull(notificationChain25);
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNull(internal30);
		org.junit.Assert.assertNull(obj31);
	}

	@Test
	public void test0535() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0535"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineColor("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature5 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting6 = zentaDiagramModel0
					.eSetting(eStructuralFeature5);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
	}

	@Test
	public void test0536() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0536"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		zentaDiagramModel5.setLineWidth(0);
		zentaDiagramModel5.setLineColor("");
		org.eclipse.emf.ecore.resource.Resource.Internal internal21 = zentaDiagramModel5
				.eDirectResource();
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain23 = zentaDiagramModel5
					.eBasicRemoveFromContainerFeature(notificationChain22);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertNull(internal21);
	}

	@Test
	public void test0537() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0537"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature6 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj8 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature6, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
	}

	@Test
	public void test0538() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0538"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel4 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.common.notify.Notification notification5 = null;
		zentaDiagramModel0.eNotify(notification5);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI8 = null;
		zentaDiagramModel7.eSetProxyURI(uRI8);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass13 = zentaDiagramModel10.eClass();
		zentaDiagramModel7.eSetClass(eClass13);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		int int18 = zentaDiagramModel15.eContainerFeatureID();
		boolean boolean19 = zentaDiagramModel15.eNotificationRequired();
		org.eclipse.emf.common.notify.NotificationChain notificationChain21 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = zentaDiagramModel7
				.eBasicSetContainer(
						zentaDiagramModel15, (short) 0, notificationChain21
				);
		boolean boolean23 = zentaDiagramModel15.eNotificationRequired();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList24 = zentaDiagramModel15
				.getChildren();
		org.eclipse.emf.ecore.EReference eReference25 = zentaDiagramModel15
				.eContainmentFeature();
		org.eclipse.emf.ecore.EObject eObject26 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel15);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature27 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj29 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature27, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel4);
		org.junit.Assert.assertNotNull(eClass13);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean19 + "' != '" + false + "'", boolean19 == false
		);
		org.junit.Assert.assertNull(notificationChain22);
		org.junit.Assert.assertTrue(
				"'" + boolean23 + "' != '" + false + "'", boolean23 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList24);
		org.junit.Assert.assertNull(eReference25);
		org.junit.Assert.assertNotNull(eObject26);
	}

	@Test
	public void test0539() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0539"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		java.lang.String str14 = zentaDiagramModel5.getName();
		zentaDiagramModel5.setDocumentation("hi!");
		org.eclipse.emf.ecore.EReference eReference17 = zentaDiagramModel5
				.eContainmentFeature();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj20 = zentaDiagramModel5
					.eDynamicGet(eStructuralFeature18, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert
				.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
		org.junit.Assert.assertNull(eReference17);
	}

	@Test
	public void test0540() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0540"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean9 = zentaDiagramModel0.eIsSet(4);
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertTrue(
				"'" + boolean9 + "' != '" + false + "'", boolean9 == false
		);
	}

	@Test
	public void test0541() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0541"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		int int10 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj13 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature11, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
	}

	@Test
	public void test0542() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0542"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		java.lang.String str26 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore27 = zentaDiagramModel8
				.eStore();
		boolean boolean29 = zentaDiagramModel8.eIsSet((short) 10);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature30 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj33 = zentaDiagramModel8
					.eGet(eStructuralFeature30, true, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertEquals(
				"'" + str26 + "' != '" + "hi!" + "'", str26, "hi!"
		);
		org.junit.Assert.assertNull(eStore27);
		org.junit.Assert.assertTrue(
				"'" + boolean29 + "' != '" + false + "'", boolean29 == false
		);
	}

	@Test
	public void test0543() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0543"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor6 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.common.util.URI uRI7 = zentaDiagramModel0.eProxyURI();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain10 = zentaDiagramModel0
				.eSetResource(internal8, notificationChain9);
		org.eclipse.emf.ecore.resource.Resource.Internal internal11 = zentaDiagramModel0
				.eDirectResource();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(eObjectItor6);
		org.junit.Assert.assertNull(uRI7);
		org.junit.Assert.assertNull(notificationChain10);
		org.junit.Assert.assertNull(internal11);
	}

	@Test
	public void test0544() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0544"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		java.lang.Class<?> wildcardClass8 = zentaDiagramModel0.getClass();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNotNull(wildcardClass8);
	}

	@Test
	public void test0545() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0545"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.EObject eObject8 = zentaDiagramModel0
				.eContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		java.lang.Object obj14 = zentaDiagramModel10.getAdapter(0L);
		int int15 = zentaDiagramModel10.getLineWidth();
		java.lang.String str16 = zentaDiagramModel10.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal17 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = zentaDiagramModel10
				.eSetResource(internal17, notificationChain18);
		org.rulez.magwas.zenta.model.UndoState undoState20 = zentaDiagramModel10
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel21
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass25 = zentaDiagramModel21.eClass();
		zentaDiagramModel10.eSetClass(eClass25);
		boolean boolean27 = zentaDiagramModel10.eDeliver();
		zentaDiagramModel10.setChecked(false);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicSet((short) 100, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(eObject8);
		org.junit.Assert.assertNull(obj14);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
		org.junit.Assert.assertEquals(
				"'" + str16 + "' != '" + "hi!" + "'", str16, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain19);
		org.junit.Assert.assertNotNull(undoState20);
		org.junit.Assert.assertNotNull(iDiagramModel24);
		org.junit.Assert.assertNotNull(eClass25);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + true + "'", boolean27 == true
		);
	}

	@Test
	public void test0546() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0546"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.initId();
		boolean boolean15 = zentaDiagramModel0.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setDocumentation("hi!");
		int int19 = zentaDiagramModel16.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal20 = zentaDiagramModel16
				.eInternalResource();
		java.lang.String str21 = zentaDiagramModel16.getDocumentation();
		boolean boolean22 = zentaDiagramModel16.isChecked();
		zentaDiagramModel16.setName("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature25 = zentaDiagramModel16
				.eContainingFeature();
		org.eclipse.emf.common.util.URI uRI26 = zentaDiagramModel16.eProxyURI();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList27 = zentaDiagramModel16
				.getProperties();
		org.rulez.magwas.zenta.model.UndoState undoState28 = zentaDiagramModel16
				.prepareDelete();
		org.eclipse.emf.common.notify.NotificationChain notificationChain30 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain31 = zentaDiagramModel0
					.eInverseAdd(zentaDiagramModel16, '#', notificationChain30);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean15 + "' != '" + true + "'", boolean15 == true
		);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
		org.junit.Assert.assertNull(internal20);
		org.junit.Assert.assertEquals(
				"'" + str21 + "' != '" + "hi!" + "'", str21, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean22 + "' != '" + false + "'", boolean22 == false
		);
		org.junit.Assert.assertNull(eStructuralFeature25);
		org.junit.Assert.assertNull(uRI26);
		org.junit.Assert.assertNotNull(iPropertyList27);
		org.junit.Assert.assertNotNull(undoState28);
	}

	@Test
	public void test0547() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0547"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean8 = zentaDiagramModel0.eDeliver();
		zentaDiagramModel0.setConnectionRouterType(0);
		org.eclipse.emf.ecore.EReference eReference11 = zentaDiagramModel0
				.eContainmentFeature();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
		org.junit.Assert.assertNull(eReference11);
	}

	@Test
	public void test0548() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0548"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		java.lang.String str8 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj11 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature9, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
	}

	@Test
	public void test0549() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0549"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass3 = zentaDiagramModel0.eClass();
		org.eclipse.emf.common.notify.NotificationChain notificationChain4 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain5 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain4);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(eClass3);
	}

	@Test
	public void test0550() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0550"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.ecore.EObject eObject5 = zentaDiagramModel0
				.eContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel6
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass10 = zentaDiagramModel6.eClass();
		boolean boolean11 = zentaDiagramModel6.eIsProxy();
		org.eclipse.emf.common.notify.NotificationChain notificationChain13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain14 = zentaDiagramModel0
					.eInverseAdd(zentaDiagramModel6, 97, notificationChain13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eObject5);
		org.junit.Assert.assertNotNull(iDiagramModel9);
		org.junit.Assert.assertNotNull(eClass10);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + false + "'", boolean11 == false
		);
	}

	@Test
	public void test0551() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0551"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.EObject eObject5 = zentaDiagramModel0.getCopy();
		org.eclipse.emf.common.notify.Notification notification6 = null;
		zentaDiagramModel0.eNotify(notification6);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(eObject5);
	}

	@Test
	public void test0552() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0552"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass3 = zentaDiagramModel0.eClass();
		boolean boolean4 = zentaDiagramModel0.eIsProxy();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature5 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj8 = zentaDiagramModel0
					.eGet(eStructuralFeature5, true, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(eClass3);
		org.junit.Assert.assertTrue(
				"'" + boolean4 + "' != '" + false + "'", boolean4 == false
		);
	}

	@Test
	public void test0553() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0553"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		boolean boolean3 = zentaDiagramModel0.hasDiagramReferences();
		zentaDiagramModel0.eUnset(1);
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertTrue(
				"'" + boolean3 + "' != '" + false + "'", boolean3 == false
		);
	}

	@Test
	public void test0554() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0554"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setId("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList13 = zentaDiagramModel0
				.eContents();
		zentaDiagramModel0.setConnectionRouterType(0);
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(eObjectList13);
	}

	@Test
	public void test0555() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0555"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		zentaDiagramModel5.setLineWidth(0);
		zentaDiagramModel5.setLineColor("");
		boolean boolean21 = zentaDiagramModel5.hasDiagramReferences();
		java.lang.String str22 = zentaDiagramModel5.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel24 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel24.setDocumentation("hi!");
		java.lang.Object obj28 = zentaDiagramModel24.getAdapter(0L);
		int int29 = zentaDiagramModel24.getLineWidth();
		java.lang.String str30 = zentaDiagramModel24.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal31 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain32 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain33 = zentaDiagramModel24
				.eSetResource(internal31, notificationChain32);
		org.rulez.magwas.zenta.model.UndoState undoState34 = zentaDiagramModel24
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel38 = zentaDiagramModel35
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass39 = zentaDiagramModel35.eClass();
		zentaDiagramModel24.eSetClass(eClass39);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor41 = zentaDiagramModel24
				.eAllContents();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel5.eDynamicSet(0, zentaDiagramModel24);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'zentaModel' is not a valid changeable feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertTrue(
				"'" + boolean21 + "' != '" + false + "'", boolean21 == false
		);
		org.junit.Assert
				.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
		org.junit.Assert.assertNull(obj28);
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
		org.junit.Assert.assertEquals(
				"'" + str30 + "' != '" + "hi!" + "'", str30, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain33);
		org.junit.Assert.assertNotNull(undoState34);
		org.junit.Assert.assertNotNull(iDiagramModel38);
		org.junit.Assert.assertNotNull(eClass39);
		org.junit.Assert.assertNotNull(eObjectItor41);
	}

	@Test
	public void test0556() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0556"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj2 = zentaDiagramModel0.eVirtualGet((short) 10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
	}

	@Test
	public void test0557() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0557"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		boolean boolean17 = zentaDiagramModel0.eDeliver();
		zentaDiagramModel0.setChecked(false);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = zentaDiagramModel0
				.eContainingFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.EClass eClass26 = zentaDiagramModel22.eClass();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSet((-1), zentaDiagramModel22);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature ID-1 is not a valid feature ID"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + true + "'", boolean17 == true
		);
		org.junit.Assert.assertNull(eStructuralFeature20);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNotNull(eClass26);
	}

	@Test
	public void test0558() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0558"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EObject eObject9 = zentaDiagramModel0
				.eContainer();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel10 = zentaDiagramModel0
				.getDiagramModel();
		zentaDiagramModel0.setDocumentation("");
		org.eclipse.emf.common.notify.NotificationChain notificationChain13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain14 = zentaDiagramModel0
					.eBasicRemoveFromContainer(notificationChain13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNull(eObject9);
		org.junit.Assert.assertNotNull(iDiagramModel10);
	}

	@Test
	public void test0559() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0559"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		int int17 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.common.util.URI uRI18 = zentaDiagramModel12.eProxyURI();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature19 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj21 = zentaDiagramModel12
					.eDynamicGet(eStructuralFeature19, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert.assertNull(uRI18);
	}

	@Test
	public void test0560() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0560"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.EOperation eOperation33 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int34 = zentaDiagramModel22.eDerivedOperationID(eOperation33);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
	}

	@Test
	public void test0561() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0561"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.resource.Resource.Internal internal6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = zentaDiagramModel0
				.eSetResource(internal6, notificationChain7);
		zentaDiagramModel0.setLineWidth((-1));
		int int11 = zentaDiagramModel0.getLineWidth();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.rulez.magwas.zenta.model.IZentaModel iZentaModel12 = zentaDiagramModel0
					.getZentaModel();
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertNull(notificationChain8);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
	}

	@Test
	public void test0562() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0562"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		boolean boolean3 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj7 = zentaDiagramModel0
					.eGet(eStructuralFeature4, true, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean3 + "' != '" + false + "'", boolean3 == false
		);
	}

	@Test
	public void test0563() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0563"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("");
		java.lang.String str15 = zentaDiagramModel0.toString();
		zentaDiagramModel0.eSetDeliver(false);
		org.eclipse.emf.common.notify.NotificationChain notificationChain18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain19 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain18);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
	}

	@Test
	public void test0564() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0564"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor17 = zentaDiagramModel0
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		int int21 = zentaDiagramModel18.eContainerFeatureID();
		java.lang.String str22 = zentaDiagramModel18.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel23 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel23.setDocumentation("hi!");
		int int26 = zentaDiagramModel23.eContainerFeatureID();
		java.lang.String str27 = zentaDiagramModel23.getName();
		zentaDiagramModel18.setAdapter(zentaDiagramModel23, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel30 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel30.setDocumentation("hi!");
		int int33 = zentaDiagramModel30.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel23
				.eResolveProxy(zentaDiagramModel30);
		java.lang.String str35 = zentaDiagramModel30.getName();
		org.eclipse.emf.ecore.EObject eObject36 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel30);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature37 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eOpenUnset(eStructuralFeature37);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertNotNull(eObjectItor17);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
		org.junit.Assert
				.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
		org.junit.Assert
				.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
		org.junit.Assert.assertNotNull(eObject36);
	}

	@Test
	public void test0565() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0565"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		zentaDiagramModel0.setConnectionRouterType('4');
		int int8 = zentaDiagramModel0.getViewpoint();
		boolean boolean9 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.common.notify.Notification notification10 = null;
		zentaDiagramModel0.eNotify(notification10);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature12 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean13 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature12);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean9 + "' != '" + false + "'", boolean9 == false
		);
	}

	@Test
	public void test0566() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0566"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		boolean boolean5 = zentaDiagramModel0.eNotificationRequired();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel6
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass10 = zentaDiagramModel6.eClass();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI12 = null;
		zentaDiagramModel11.eSetProxyURI(uRI12);
		zentaDiagramModel11.setLineWidth((short) -1);
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel11
				.eContainer();
		zentaDiagramModel0.setAdapter(eClass10, eObject16);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor18 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.setLineColor("");
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel9);
		org.junit.Assert.assertNotNull(eClass10);
		org.junit.Assert.assertNull(eObject16);
		org.junit.Assert.assertNotNull(eObjectItor18);
	}

	@Test
	public void test0567() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0567"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.ecore.InternalEObject internalEObject7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain10 = zentaDiagramModel0
				.eBasicSetContainer(
						internalEObject7, (short) 1, notificationChain9
				);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj14 = zentaDiagramModel0
					.eDynamicGet(0, true, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNull(notificationChain10);
	}

	@Test
	public void test0568() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0568"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		java.lang.Object obj13 = zentaDiagramModel0.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel0.eNotify(notification14);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature16 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList17 = zentaDiagramModel0
				.getChildren();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert.assertNull(eStructuralFeature16);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList17);
	}

	@Test
	public void test0569() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0569"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel12 = zentaDiagramModel0
				.findDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		int int17 = zentaDiagramModel14.eContainerFeatureID();
		java.lang.String str18 = zentaDiagramModel14.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		int int22 = zentaDiagramModel19.eContainerFeatureID();
		java.lang.String str23 = zentaDiagramModel19.getName();
		zentaDiagramModel14.setAdapter(zentaDiagramModel19, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject30 = zentaDiagramModel19
				.eResolveProxy(zentaDiagramModel26);
		org.eclipse.emf.common.util.URI uRI31 = null;
		zentaDiagramModel19.eSetProxyURI(uRI31);
		zentaDiagramModel0.eSet((short) 1, uRI31);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList34 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.common.notify.NotificationChain notificationChain35 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain36 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain35);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(iDiagramModel12);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
		org.junit.Assert
				.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNotNull(eObject30);
		org.junit.Assert.assertNotNull(eObjectList34);
	}

	@Test
	public void test0570() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0570"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature5 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature5);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
	}

	@Test
	public void test0571() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0571"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.ecore.InternalEObject internalEObject7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain10 = zentaDiagramModel0
				.eBasicSetContainer(
						internalEObject7, (short) 1, notificationChain9
				);
		int int11 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.ecore.EOperation eOperation12 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore16 = zentaDiagramModel13
				.eStore();
		org.eclipse.emf.common.notify.Notification notification17 = null;
		zentaDiagramModel13.eNotify(notification17);
		zentaDiagramModel13.setName("hi!");
		int int21 = zentaDiagramModel13.getViewpoint();
		zentaDiagramModel13.setName("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList24 = zentaDiagramModel13
				.eContents();
		org.eclipse.emf.common.util.URI uRI25 = null;
		zentaDiagramModel13.eSetProxyURI(uRI25);
		int int27 = zentaDiagramModel13.eContainerFeatureID();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList28 = zentaDiagramModel13
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj29 = zentaDiagramModel0
					.eInvoke(eOperation12, adapterList28);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNull(notificationChain10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertNull(eStore16);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert.assertNotNull(eObjectList24);
		org.junit.Assert
				.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
		org.junit.Assert.assertNotNull(adapterList28);
	}

	@Test
	public void test0572() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0572"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel4 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.common.notify.Notification notification5 = null;
		zentaDiagramModel0.eNotify(notification5);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI8 = null;
		zentaDiagramModel7.eSetProxyURI(uRI8);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass13 = zentaDiagramModel10.eClass();
		zentaDiagramModel7.eSetClass(eClass13);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		int int18 = zentaDiagramModel15.eContainerFeatureID();
		boolean boolean19 = zentaDiagramModel15.eNotificationRequired();
		org.eclipse.emf.common.notify.NotificationChain notificationChain21 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = zentaDiagramModel7
				.eBasicSetContainer(
						zentaDiagramModel15, (short) 0, notificationChain21
				);
		boolean boolean23 = zentaDiagramModel15.eNotificationRequired();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList24 = zentaDiagramModel15
				.getChildren();
		org.eclipse.emf.ecore.EReference eReference25 = zentaDiagramModel15
				.eContainmentFeature();
		org.eclipse.emf.ecore.EObject eObject26 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel15);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.check();
			org.junit.Assert.fail(
					"Expected exception of type org.rulez.magwas.zenta.model.ModelConsistencyException; message: id cannot be null: org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel@3c1d42fd (name: , id: null, lineWidth: 0, lineColor: null, documentation: , connectionRouterType: 0) (viewpoint: 0)"
			);
		} catch (org.rulez.magwas.zenta.model.ModelConsistencyException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel4);
		org.junit.Assert.assertNotNull(eClass13);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean19 + "' != '" + false + "'", boolean19 == false
		);
		org.junit.Assert.assertNull(notificationChain22);
		org.junit.Assert.assertTrue(
				"'" + boolean23 + "' != '" + false + "'", boolean23 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList24);
		org.junit.Assert.assertNull(eReference25);
		org.junit.Assert.assertNotNull(eObject26);
	}

	@Test
	public void test0573() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0573"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.common.util.URI uRI10 = zentaDiagramModel0.eProxyURI();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList11 = zentaDiagramModel0
				.getProperties();
		org.rulez.magwas.zenta.model.UndoState undoState12 = zentaDiagramModel0
				.prepareDelete();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean14 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNull(eStructuralFeature9);
		org.junit.Assert.assertNull(uRI10);
		org.junit.Assert.assertNotNull(iPropertyList11);
		org.junit.Assert.assertNotNull(undoState12);
	}

	@Test
	public void test0574() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0574"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		zentaDiagramModel5.checkId("hi!");
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
	}

	@Test
	public void test0575() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0575"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EReference eReference11 = zentaDiagramModel0
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		java.lang.Object obj16 = zentaDiagramModel12.getAdapter(0L);
		int int17 = zentaDiagramModel12.getLineWidth();
		java.lang.String str18 = zentaDiagramModel12.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore22 = zentaDiagramModel19
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList23 = zentaDiagramModel19
				.eAdapters();
		boolean boolean24 = zentaDiagramModel19.eDeliver();
		java.lang.Object obj25 = zentaDiagramModel12
				.getAdapter(zentaDiagramModel19);
		org.eclipse.emf.ecore.EClass eClass26 = zentaDiagramModel19.eClass();
		zentaDiagramModel0.eSetClass(eClass26);
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean29 = zentaDiagramModel0.eDynamicIsSet((byte) 0);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
		org.junit.Assert.assertNull(eReference11);
		org.junit.Assert.assertNull(obj16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
		org.junit.Assert.assertNull(str18);
		org.junit.Assert.assertNull(eStore22);
		org.junit.Assert.assertNotNull(adapterList23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNull(obj25);
		org.junit.Assert.assertNotNull(eClass26);
	}

	@Test
	public void test0576() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0576"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification8 = null;
		zentaDiagramModel0.eNotify(notification8);
		zentaDiagramModel0.setName("hi!");
		int int12 = zentaDiagramModel0.eContainerFeatureID();
		zentaDiagramModel0.checkDocumentation("");
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean16 = false; // flaky:
										// zentaDiagramModel0.eIsSet((-1));
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
	}

	@Test
	public void test0577() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0577"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setId("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList13 = zentaDiagramModel0
				.eContents();
		java.lang.Class<?> wildcardClass14 = eObjectList13.getClass();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(eObjectList13);
		org.junit.Assert.assertNotNull(wildcardClass14);
	}

	@Test
	public void test0578() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0578"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		boolean boolean27 = zentaDiagramModel8.eIsSet(1);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + false + "'", boolean27 == false
		);
	}

	@Test
	public void test0579() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0579"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj4 = zentaDiagramModel0.eVirtualUnset(4);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
	}

	@Test
	public void test0580() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0580"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.EObject eObject8 = zentaDiagramModel0
				.eContainer();
		zentaDiagramModel0.setId("hi!");
		java.lang.Object obj12 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj13 = zentaDiagramModel0
					.eVirtualGet((byte) 1, obj12);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(eObject8);
	}

	@Test
	public void test0581() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0581"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setId("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.getDiagramModel();
		zentaDiagramModel0.eSetDeliver(false);
		boolean boolean16 = zentaDiagramModel0.eNotificationRequired();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean16 + "' != '" + false + "'", boolean16 == false
		);
	}

	@Test
	public void test0582() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0582"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		java.lang.String str5 = zentaDiagramModel0.getName();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
	}

	@Test
	public void test0583() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0583"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		boolean boolean7 = zentaDiagramModel0.isTemplate();
		java.lang.String str8 = zentaDiagramModel0.getId();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + false + "'", boolean7 == false
		);
		org.junit.Assert.assertNull(str8);
	}

	@Test
	public void test0584() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0584"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.resource.Resource.Internal internal6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = zentaDiagramModel0
				.eSetResource(internal6, notificationChain7);
		zentaDiagramModel0.setLineWidth((-1));
		int int11 = zentaDiagramModel0.getLineWidth();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel16 = zentaDiagramModel13
				.findDiagramModel();
		java.lang.String str17 = zentaDiagramModel13.getId();
		zentaDiagramModel13.checkDocumentation("");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList20 = zentaDiagramModel13
				.eContents();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicSet((byte) -1, eObjectList20);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertNull(notificationChain8);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
		org.junit.Assert.assertNotNull(iDiagramModel16);
		org.junit.Assert.assertNull(str17);
		org.junit.Assert.assertNotNull(eObjectList20);
	}

	@Test
	public void test0585() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0585"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		org.rulez.magwas.zenta.model.IFolder iFolder11 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder12 = null;
		zentaDiagramModel0.move(iFolder11, iFolder12);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
	}

	@Test
	public void test0586() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0586"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.EOperation eOperation3 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		java.lang.String str8 = zentaDiagramModel4.getName();
		int int9 = zentaDiagramModel4.getViewpoint();
		org.eclipse.emf.common.util.URI uRI10 = zentaDiagramModel4.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		java.lang.Object obj16 = zentaDiagramModel12.getAdapter(0L);
		int int17 = zentaDiagramModel12.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList18 = zentaDiagramModel12
				.eAdapters();
		java.lang.Object obj19 = zentaDiagramModel4.eInvoke(0, adapterList18);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj20 = zentaDiagramModel0
					.eInvoke(eOperation3, adapterList18);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
		org.junit.Assert.assertNull(uRI10);
		org.junit.Assert.assertNull(obj16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
		org.junit.Assert.assertNotNull(adapterList18);
		org.junit.Assert.assertNotNull(obj19);
	}

	@Test
	public void test0587() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0587"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("");
		int int15 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel0
				.eContainer();
		zentaDiagramModel0.checkDocumentation("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature19 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj21 = zentaDiagramModel0
					.eOpenGet(eStructuralFeature19, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNull(eObject16);
	}

	@Test
	public void test0588() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0588"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		boolean boolean17 = zentaDiagramModel0.eDeliver();
		zentaDiagramModel0.setChecked(false);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSetStore(eStore21);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + true + "'", boolean17 == true
		);
		org.junit.Assert.assertNull(eStructuralFeature20);
	}

	@Test
	public void test0589() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0589"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel20 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel20.setDocumentation("hi!");
		int int23 = zentaDiagramModel20.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject24 = zentaDiagramModel13
				.eResolveProxy(zentaDiagramModel20);
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel20, '4', notificationChain26
				);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel29 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel29.setDocumentation("hi!");
		int int32 = zentaDiagramModel29.eContainerFeatureID();
		java.lang.String str33 = zentaDiagramModel29.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel34 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel34.setDocumentation("hi!");
		int int37 = zentaDiagramModel34.eContainerFeatureID();
		java.lang.String str38 = zentaDiagramModel34.getName();
		zentaDiagramModel29.setAdapter(zentaDiagramModel34, 1L);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList41 = zentaDiagramModel34
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj42 = zentaDiagramModel0
					.eInvoke(100, adapterList41);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
		org.junit.Assert.assertNotNull(eObject24);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert
				.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
		org.junit.Assert
				.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
		org.junit.Assert
				.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
		org.junit.Assert
				.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
		org.junit.Assert.assertNotNull(adapterList41);
	}

	@Test
	public void test0590() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0590"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = zentaDiagramModel0
				.eDirectResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList9 = zentaDiagramModel0
				.getProperties();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting11 = zentaDiagramModel0
					.eSetting(eStructuralFeature10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(internal7);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert.assertNotNull(iPropertyList9);
	}

	@Test
	public void test0591() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0591"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EReference eReference11 = zentaDiagramModel0
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		java.lang.Object obj16 = zentaDiagramModel12.getAdapter(0L);
		int int17 = zentaDiagramModel12.getLineWidth();
		java.lang.String str18 = zentaDiagramModel12.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore22 = zentaDiagramModel19
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList23 = zentaDiagramModel19
				.eAdapters();
		boolean boolean24 = zentaDiagramModel19.eDeliver();
		java.lang.Object obj25 = zentaDiagramModel12
				.getAdapter(zentaDiagramModel19);
		org.eclipse.emf.ecore.EClass eClass26 = zentaDiagramModel19.eClass();
		zentaDiagramModel0.eSetClass(eClass26);
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject29 = zentaDiagramModel0
					.eObjectForURIFragmentSegment("hi!");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'i!' is not a valid feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
		org.junit.Assert.assertNull(eReference11);
		org.junit.Assert.assertNull(obj16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
		org.junit.Assert.assertNull(str18);
		org.junit.Assert.assertNull(eStore22);
		org.junit.Assert.assertNotNull(adapterList23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNull(obj25);
		org.junit.Assert.assertNotNull(eClass26);
	}

	@Test
	public void test0592() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0592"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		java.lang.Object obj13 = zentaDiagramModel0.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel0.eNotify(notification14);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel16 = zentaDiagramModel0
				.findDiagramModel();
		iDiagramModel16.checkId("");
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert.assertNotNull(iDiagramModel16);
	}

	@Test
	public void test0593() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0593"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		boolean boolean4 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor5 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean4 + "' != '" + false + "'", boolean4 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor5);
		org.junit.Assert.assertNull(uRI6);
	}

	@Test
	public void test0594() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0594"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList6 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.common.util.URI uRI7 = null;
		zentaDiagramModel0.eSetProxyURI(uRI7);
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eDirectResource();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset(eStructuralFeature10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNotNull(eObjectList6);
		org.junit.Assert.assertNull(internal9);
	}

	@Test
	public void test0595() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0595"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor7 = zentaDiagramModel0
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel9
				.eAdapters();
		java.lang.Object obj14 = zentaDiagramModel0
				.eInvoke((short) 0, adapterList13);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList15 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature16 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor7);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert.assertNotNull(adapterList13);
		org.junit.Assert.assertNotNull(obj14);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList15);
	}

	@Test
	public void test0596() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0596"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		java.lang.String str4 = zentaDiagramModel0.getId();
		zentaDiagramModel0.checkDocumentation("");
		boolean boolean7 = zentaDiagramModel0.isDeleted();
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNull(str4);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + true + "'", boolean7 == true
		);
	}

	@Test
	public void test0597() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0597"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.resource.Resource.Internal internal6 = zentaDiagramModel0
				.eInternalResource();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(internal6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
	}

	@Test
	public void test0598() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0598"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject11 = zentaDiagramModel6
				.eInternalContainer();
		boolean boolean12 = zentaDiagramModel6.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor13 = zentaDiagramModel6
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList19 = zentaDiagramModel15
				.eAdapters();
		java.lang.Object obj20 = zentaDiagramModel6
				.eInvoke((short) 0, adapterList19);
		org.eclipse.emf.common.notify.Notification notification21 = null;
		zentaDiagramModel6.eNotify(notification21);
		boolean boolean24 = zentaDiagramModel6.eIsSet((byte) 1);
		org.eclipse.emf.common.util.URI uRI25 = null;
		zentaDiagramModel6.eSetProxyURI(uRI25);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj27 = zentaDiagramModel0.eVirtualGet(0, uRI25);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert.assertNull(internalEObject11);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor13);
		org.junit.Assert.assertNull(eStore18);
		org.junit.Assert.assertNotNull(adapterList19);
		org.junit.Assert.assertNotNull(obj20);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + false + "'", boolean24 == false
		);
	}

	@Test
	public void test0599() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0599"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.ecore.resource.Resource resource8 = zentaDiagramModel0
				.eResource();
		int int9 = zentaDiagramModel0.eContainerFeatureID();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(resource8);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
	}

	@Test
	public void test0600() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0600"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel12.eSetProxyURI(uRI13);
		zentaDiagramModel12.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel12
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		java.lang.String str24 = zentaDiagramModel18.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel18
				.eSetResource(internal25, notificationChain26);
		java.lang.Object obj31 = zentaDiagramModel18.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel18.eNotify(notification32);
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel12
				.eResolveProxy(zentaDiagramModel18);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		int int44 = zentaDiagramModel35.getConnectionRouterType();
		zentaDiagramModel0.setAdapter(zentaDiagramModel18, zentaDiagramModel35);
		java.lang.String str46 = zentaDiagramModel0.getLineColor();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj48 = zentaDiagramModel0.eVirtualGet((byte) 10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertEquals(
				"'" + str24 + "' != '" + "hi!" + "'", str24, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
		org.junit.Assert.assertNull(str46);
	}

	@Test
	public void test0601() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0601"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor7 = zentaDiagramModel0
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel9
				.eAdapters();
		java.lang.Object obj14 = zentaDiagramModel0
				.eInvoke((short) 0, adapterList13);
		org.eclipse.emf.common.notify.Notification notification15 = null;
		zentaDiagramModel0.eNotify(notification15);
		boolean boolean18 = zentaDiagramModel0.eIsSet((byte) 1);
		org.eclipse.emf.ecore.InternalEObject internalEObject19 = zentaDiagramModel0
				.eInternalContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean21 = zentaDiagramModel0.eIsSet(eStructuralFeature20);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor7);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert.assertNotNull(adapterList13);
		org.junit.Assert.assertNotNull(obj14);
		org.junit.Assert.assertTrue(
				"'" + boolean18 + "' != '" + false + "'", boolean18 == false
		);
		org.junit.Assert.assertNull(internalEObject19);
	}

	@Test
	public void test0602() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0602"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel3.eClass();
		zentaDiagramModel0.eSetClass(eClass6);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		boolean boolean12 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel8, (short) 0, notificationChain14
				);
		boolean boolean16 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList17 = zentaDiagramModel8
				.getChildren();
		org.eclipse.emf.ecore.EReference eReference18 = zentaDiagramModel8
				.eContainmentFeature();
		zentaDiagramModel8.setLineWidth(100);
		org.rulez.magwas.zenta.model.UndoState undoState21 = zentaDiagramModel8
				.delete();
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertTrue(
				"'" + boolean16 + "' != '" + false + "'", boolean16 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList17);
		org.junit.Assert.assertNull(eReference18);
	}

	@Test
	public void test0603() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0603"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.setChecked(false);
		org.eclipse.emf.common.notify.NotificationChain notificationChain13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain14 = zentaDiagramModel0
					.eBasicRemoveFromContainer(notificationChain13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
	}

	@Test
	public void test0604() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0604"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore4 = zentaDiagramModel0
				.eStore();
		zentaDiagramModel0.checkDocumentation("");
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList7 = zentaDiagramModel0
				.getProperties();
		int int8 = zentaDiagramModel0.getLineWidth();
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNull(eStore4);
		org.junit.Assert.assertNotNull(iPropertyList7);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
	}

	@Test
	public void test0605() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0605"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.InternalEObject internalEObject6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eBasicSetContainer(internalEObject6, '#', notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eDirectResource();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
	}

	@Test
	public void test0606() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0606"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		int int4 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		int int9 = zentaDiagramModel6.eContainerFeatureID();
		java.lang.String str10 = zentaDiagramModel6.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList11 = zentaDiagramModel6
				.eContents();
		int int12 = zentaDiagramModel6.getViewpoint();
		zentaDiagramModel6.checkId("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj15 = zentaDiagramModel0
					.eVirtualGet((short) 10, zentaDiagramModel6);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
		org.junit.Assert
				.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
		org.junit.Assert.assertNotNull(eObjectList11);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
	}

	@Test
	public void test0607() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0607"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean10 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.common.notify.NotificationChain notificationChain11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain12 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel9);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + true + "'", boolean10 == true
		);
	}

	@Test
	public void test0608() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0608"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel12 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int14 = zentaDiagramModel0
					.eDerivedStructuralFeatureID(eStructuralFeature13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(iDiagramModel12);
	}

	@Test
	public void test0609() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0609"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean8 = zentaDiagramModel0.eDeliver();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(' ');
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
	}

	@Test
	public void test0610() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0610"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature5 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList11 = zentaDiagramModel6
				.getChildren();
		zentaDiagramModel6.checkName("");
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicSet(eStructuralFeature5, "");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList11);
	}

	@Test
	public void test0611() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0611"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("");
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel0.eClass();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature16 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting17 = zentaDiagramModel0
					.eSetting(eStructuralFeature16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(eClass15);
	}

	@Test
	public void test0612() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0612"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		zentaDiagramModel5.eUnset((byte) 10);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		int int17 = zentaDiagramModel14.eContainerFeatureID();
		java.lang.String str18 = zentaDiagramModel14.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		int int22 = zentaDiagramModel19.eContainerFeatureID();
		java.lang.String str23 = zentaDiagramModel19.getName();
		zentaDiagramModel14.setAdapter(zentaDiagramModel19, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject30 = zentaDiagramModel19
				.eResolveProxy(zentaDiagramModel26);
		java.lang.String str31 = zentaDiagramModel26.getName();
		org.eclipse.emf.ecore.EObject eObject32 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel26);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel33 = zentaDiagramModel26
				.getDiagramModel();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature34 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj36 = zentaDiagramModel26
					.eGet(eStructuralFeature34, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
		org.junit.Assert
				.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNotNull(eObject30);
		org.junit.Assert
				.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
		org.junit.Assert.assertNotNull(eObject32);
		org.junit.Assert.assertNotNull(iDiagramModel33);
	}

	@Test
	public void test0613() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0613"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList11 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.common.util.URI uRI12 = null;
		zentaDiagramModel0.eSetProxyURI(uRI12);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		java.lang.Object obj19 = zentaDiagramModel15.getAdapter(0L);
		int int20 = zentaDiagramModel15.getLineWidth();
		java.lang.String str21 = zentaDiagramModel15.getDocumentation();
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel15.getCopy();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0
					.eDynamicSet(eStructuralFeature14, zentaDiagramModel15);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(eObjectList11);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert
				.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
		org.junit.Assert.assertEquals(
				"'" + str21 + "' != '" + "hi!" + "'", str21, "hi!"
		);
		org.junit.Assert.assertNotNull(eObject22);
	}

	@Test
	public void test0614() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0614"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		zentaDiagramModel0.setId("");
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = zentaDiagramModel0
				.eDirectResource();
		boolean boolean8 = zentaDiagramModel0.isTemplate();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel9
				.eAdapters();
		boolean boolean14 = zentaDiagramModel9.eDeliver();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel9.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		boolean boolean17 = zentaDiagramModel0.eNotificationRequired();
		org.rulez.magwas.zenta.model.IFolder iFolder18 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder19 = null;
		zentaDiagramModel0.move(iFolder18, iFolder19);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(internal7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert.assertNotNull(adapterList13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + false + "'", boolean17 == false
		);
	}

	@Test
	public void test0615() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0615"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean8 = zentaDiagramModel0.eDeliver();
		zentaDiagramModel0.setConnectionRouterType(0);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore14 = zentaDiagramModel11
				.eStore();
		org.eclipse.emf.common.notify.Notification notification15 = null;
		zentaDiagramModel11.eNotify(notification15);
		int int17 = zentaDiagramModel11.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel18
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass22 = zentaDiagramModel18.eClass();
		boolean boolean24 = zentaDiagramModel18.eIsSet((short) 10);
		boolean boolean25 = zentaDiagramModel18.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		java.lang.Object obj30 = zentaDiagramModel26.getAdapter(0L);
		int int31 = zentaDiagramModel26.getLineWidth();
		java.lang.String str32 = zentaDiagramModel26.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList33 = zentaDiagramModel26
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel34 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel34.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass37 = zentaDiagramModel34.eClass();
		zentaDiagramModel26.eSetClass(eClass37);
		zentaDiagramModel18.eSetClass(eClass37);
		zentaDiagramModel11.eSetClass(eClass37);
		zentaDiagramModel0.eSetClass(eClass37);
		org.eclipse.emf.ecore.EObject eObject42 = zentaDiagramModel0.getCopy();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature43 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean44 = zentaDiagramModel0.eIsSet(eStructuralFeature43);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
		org.junit.Assert.assertNull(eStore14);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertNotNull(eClass22);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + false + "'", boolean24 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean25 + "' != '" + true + "'", boolean25 == true
		);
		org.junit.Assert.assertNull(obj30);
		org.junit.Assert
				.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
		org.junit.Assert.assertEquals(
				"'" + str32 + "' != '" + "hi!" + "'", str32, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList33);
		org.junit.Assert.assertNotNull(eClass37);
		org.junit.Assert.assertNotNull(eObject42);
	}

	@Test
	public void test0616() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0616"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.common.util.URI uRI10 = zentaDiagramModel0.eProxyURI();
		zentaDiagramModel0.setLineWidth((byte) 10);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNull(eStructuralFeature9);
		org.junit.Assert.assertNull(uRI10);
	}

	@Test
	public void test0617() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0617"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		org.eclipse.emf.common.notify.NotificationChain notificationChain10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain11 = zentaDiagramModel0
					.eBasicRemoveFromContainer(notificationChain10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
	}

	@Test
	public void test0618() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0618"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.EClass eClass33 = zentaDiagramModel0.eClass();
		java.lang.String str34 = zentaDiagramModel0.toString();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature35 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean36 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature35);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNotNull(eClass33);
	}

	@Test
	public void test0619() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0619"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		zentaDiagramModel0.setId("");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSetStore(eStore7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
	}

	@Test
	public void test0620() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0620"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		boolean boolean8 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		int int14 = zentaDiagramModel11.eContainerFeatureID();
		java.lang.String str15 = zentaDiagramModel11.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setDocumentation("hi!");
		int int19 = zentaDiagramModel16.eContainerFeatureID();
		java.lang.String str20 = zentaDiagramModel16.getName();
		zentaDiagramModel11.setAdapter(zentaDiagramModel16, 1L);
		int int23 = zentaDiagramModel11.eContainerFeatureID();
		boolean boolean24 = zentaDiagramModel11.eIsProxy();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSet(eStructuralFeature10, zentaDiagramModel11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert
				.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
		org.junit.Assert
				.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
		org.junit.Assert
				.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + false + "'", boolean24 == false
		);
	}

	@Test
	public void test0621() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0621"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain8 = zentaDiagramModel0
					.eBasicRemoveFromContainer(notificationChain7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(uRI6);
	}

	@Test
	public void test0622() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0622"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EReference eReference11 = zentaDiagramModel0
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore16 = zentaDiagramModel13
				.eStore();
		org.eclipse.emf.common.notify.Notification notification17 = null;
		zentaDiagramModel13.eNotify(notification17);
		zentaDiagramModel13.setName("hi!");
		int int21 = zentaDiagramModel13.getViewpoint();
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel13
				.eContainer();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore23 = zentaDiagramModel13
				.eStore();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSet((byte) 1, zentaDiagramModel13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.ClassCastException; message: class org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel cannot be cast to class java.lang.String (org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')"
			);
		} catch (java.lang.ClassCastException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
		org.junit.Assert.assertNull(eReference11);
		org.junit.Assert.assertNull(eStore16);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert.assertNull(eObject22);
		org.junit.Assert.assertNull(eStore23);
	}

	@Test
	public void test0623() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0623"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EReference eReference11 = zentaDiagramModel0
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		java.lang.Object obj16 = zentaDiagramModel12.getAdapter(0L);
		int int17 = zentaDiagramModel12.getLineWidth();
		java.lang.String str18 = zentaDiagramModel12.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore22 = zentaDiagramModel19
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList23 = zentaDiagramModel19
				.eAdapters();
		boolean boolean24 = zentaDiagramModel19.eDeliver();
		java.lang.Object obj25 = zentaDiagramModel12
				.getAdapter(zentaDiagramModel19);
		org.eclipse.emf.ecore.EClass eClass26 = zentaDiagramModel19.eClass();
		zentaDiagramModel0.eSetClass(eClass26);
		zentaDiagramModel0.setLineWidth(52);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
		org.junit.Assert.assertNull(eReference11);
		org.junit.Assert.assertNull(obj16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
		org.junit.Assert.assertNull(str18);
		org.junit.Assert.assertNull(eStore22);
		org.junit.Assert.assertNotNull(adapterList23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNull(obj25);
		org.junit.Assert.assertNotNull(eClass26);
	}

	@Test
	public void test0624() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0624"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		zentaDiagramModel0.setConnectionRouterType('4');
		zentaDiagramModel0.setConnectionRouterType(100);
		zentaDiagramModel0.setLineColor("");
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
	}

	@Test
	public void test0625() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0625"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		zentaDiagramModel0.eSetDeliver(true);
		zentaDiagramModel0.setChecked(false);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
	}

	@Test
	public void test0626() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0626"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = zentaDiagramModel0
				.eDirectResource();
		org.eclipse.emf.ecore.EObject eObject8 = zentaDiagramModel0
				.eContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj11 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature9, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(internal7);
		org.junit.Assert.assertNull(eObject8);
	}

	@Test
	public void test0627() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0627"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.EObject eObject8 = zentaDiagramModel0
				.eContainer();
		zentaDiagramModel0.setId("hi!");
		zentaDiagramModel0.setLineColor("hi!");
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(eObject8);
	}

	@Test
	public void test0628() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0628"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList5 = zentaDiagramModel0
				.eContents();
		int int6 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.checkId("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		java.lang.Object obj14 = zentaDiagramModel10.getAdapter(0L);
		int int15 = zentaDiagramModel10.getLineWidth();
		java.lang.String str16 = zentaDiagramModel10.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal17 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = zentaDiagramModel10
				.eSetResource(internal17, notificationChain18);
		java.lang.Object obj23 = zentaDiagramModel10.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification24 = null;
		zentaDiagramModel10.eNotify(notification24);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature26 = zentaDiagramModel10
				.eContainingFeature();
		zentaDiagramModel10.setDocumentation("");
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eOpenSet(eStructuralFeature9, "");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNotNull(eObjectList5);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertNull(obj14);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
		org.junit.Assert.assertEquals(
				"'" + str16 + "' != '" + "hi!" + "'", str16, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain19);
		org.junit.Assert.assertNull(obj23);
		org.junit.Assert.assertNull(eStructuralFeature26);
	}

	@Test
	public void test0629() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0629"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj12 = zentaDiagramModel0
					.eGet(eStructuralFeature10, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel9);
	}

	@Test
	public void test0630() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0630"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore4 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.ecore.EObject eObject5 = zentaDiagramModel0.getCopy();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean7 = zentaDiagramModel0.eVirtualIsSet(0);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStore4);
		org.junit.Assert.assertNotNull(eObject5);
	}

	@Test
	public void test0631() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0631"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		boolean boolean5 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.EObject eObject6 = zentaDiagramModel0
				.eContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList14 = zentaDiagramModel8
				.eAdapters();
		int int15 = zentaDiagramModel8.getViewpoint();
		org.eclipse.emf.ecore.EReference eReference16 = zentaDiagramModel8
				.eContainmentFeature();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature17 = zentaDiagramModel8
				.eContainingFeature();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSet(0, zentaDiagramModel8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'zentaModel' is not a valid changeable feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNull(eObject6);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertNotNull(adapterList14);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNull(eReference16);
		org.junit.Assert.assertNull(eStructuralFeature17);
	}

	@Test
	public void test0632() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0632"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		java.lang.String str6 = zentaDiagramModel0.getLineColor();
		org.rulez.magwas.zenta.model.IFolder iFolder7 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder8 = null;
		zentaDiagramModel0.move(iFolder7, iFolder8);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertNull(str6);
	}

	@Test
	public void test0633() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0633"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.hasDiagramReferences();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass10 = zentaDiagramModel7.eClass();
		boolean boolean11 = zentaDiagramModel7.eDeliver();
		boolean boolean12 = zentaDiagramModel0.eContains(zentaDiagramModel7);
		int int13 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean15 = zentaDiagramModel0.eIsSet(eStructuralFeature14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eClass10);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
	}

	@Test
	public void test0634() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0634"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.notify.Notification notification11 = null;
		zentaDiagramModel7.eNotify(notification11);
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, zentaDiagramModel15);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean21 = zentaDiagramModel7
					.eDynamicIsSet(eStructuralFeature20);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNull(eStore18);
	}

	@Test
	public void test0635() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0635"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel34 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel34.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore37 = zentaDiagramModel34
				.eStore();
		org.eclipse.emf.common.notify.Notification notification38 = null;
		zentaDiagramModel34.eNotify(notification38);
		zentaDiagramModel34.setName("hi!");
		int int42 = zentaDiagramModel34.getViewpoint();
		zentaDiagramModel34.setName("hi!");
		zentaDiagramModel34.setId("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList47 = zentaDiagramModel34
				.eContents();
		zentaDiagramModel34.setConnectionRouterType(0);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel22.eDynamicSet((-1), zentaDiagramModel34);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNull(eStore37);
		org.junit.Assert
				.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
		org.junit.Assert.assertNotNull(eObjectList47);
	}

	@Test
	public void test0636() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0636"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		boolean boolean8 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore13 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel10.eNotify(notification14);
		zentaDiagramModel10.setName("hi!");
		int int18 = zentaDiagramModel10.getViewpoint();
		org.eclipse.emf.ecore.EObject eObject19 = zentaDiagramModel10
				.eContainer();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore20 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain23 = zentaDiagramModel0
				.eBasicSetContainer(zentaDiagramModel10, 2, notificationChain22);
		zentaDiagramModel10.checkDocumentation("");
		org.eclipse.emf.ecore.EObject eObject26 = zentaDiagramModel10
				.eContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature27 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int28 = zentaDiagramModel10
					.eDerivedStructuralFeatureID(eStructuralFeature27);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert.assertNull(eStore13);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert.assertNull(eObject19);
		org.junit.Assert.assertNull(eStore20);
		org.junit.Assert.assertNull(notificationChain23);
		org.junit.Assert.assertNull(eObject26);
	}

	@Test
	public void test0637() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0637"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		java.lang.Object obj9 = zentaDiagramModel5.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject10 = zentaDiagramModel5
				.eInternalContainer();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList11 = zentaDiagramModel5
				.eContents();
		java.lang.Object obj12 = zentaDiagramModel0.getAdapter(eObjectList11);
		java.lang.String str13 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.URI uRI14 = null;
		zentaDiagramModel0.eSetProxyURI(uRI14);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel17 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel17.setDocumentation("hi!");
		int int20 = zentaDiagramModel17.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI23 = null;
		zentaDiagramModel22.eSetProxyURI(uRI23);
		zentaDiagramModel22.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList27 = zentaDiagramModel22
				.eAdapters();
		java.lang.Object obj28 = zentaDiagramModel17.eInvoke(4, adapterList27);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj29 = zentaDiagramModel0
					.eInvoke(97, adapterList27);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(obj9);
		org.junit.Assert.assertNull(internalEObject10);
		org.junit.Assert.assertNotNull(eObjectList11);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert.assertEquals(
				"'" + str13 + "' != '" + "hi!" + "'", str13, "hi!"
		);
		org.junit.Assert
				.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
		org.junit.Assert.assertNotNull(adapterList27);
		org.junit.Assert.assertNull(obj28);
	}

	@Test
	public void test0638() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0638"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.setDocumentation("");
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel9);
	}

	@Test
	public void test0639() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0639"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList6 = zentaDiagramModel0
				.eContents();
		boolean boolean7 = zentaDiagramModel0.isTemplate();
		zentaDiagramModel0.eSetDeliver(true);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertNotNull(eObjectList6);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + false + "'", boolean7 == false
		);
	}

	@Test
	public void test0640() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0640"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore15 = zentaDiagramModel12
				.eStore();
		org.eclipse.emf.common.notify.Notification notification16 = null;
		zentaDiagramModel12.eNotify(notification16);
		int int18 = zentaDiagramModel12.getViewpoint();
		int int19 = zentaDiagramModel12.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel20 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel20.setDocumentation("hi!");
		int int23 = zentaDiagramModel20.eContainerFeatureID();
		java.lang.String str24 = zentaDiagramModel20.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel25 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel25.setDocumentation("hi!");
		int int28 = zentaDiagramModel25.eContainerFeatureID();
		java.lang.String str29 = zentaDiagramModel25.getName();
		zentaDiagramModel20.setAdapter(zentaDiagramModel25, 1L);
		java.lang.String str32 = zentaDiagramModel25.getId();
		int int33 = zentaDiagramModel25.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel34 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel34.setDocumentation("hi!");
		int int37 = zentaDiagramModel34.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal38 = zentaDiagramModel34
				.eInternalResource();
		java.lang.String str39 = zentaDiagramModel34.getDocumentation();
		boolean boolean40 = zentaDiagramModel34.isChecked();
		zentaDiagramModel34.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel43 = zentaDiagramModel34
				.findDiagramModel();
		zentaDiagramModel12
				.setAdapter(zentaDiagramModel25, zentaDiagramModel34);
		org.rulez.magwas.zenta.model.UndoState undoState45 = zentaDiagramModel25
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel46 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel46.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass49 = zentaDiagramModel46.eClass();
		zentaDiagramModel25.eSetClass(eClass49);
		org.eclipse.emf.common.notify.NotificationChain notificationChain52 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain53 = zentaDiagramModel0
					.eInverseAdd(
							zentaDiagramModel25, (byte) 0, notificationChain52
					);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -11 out of bounds for length 0"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(eStore15);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
		org.junit.Assert
				.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
		org.junit.Assert
				.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
		org.junit.Assert
				.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
		org.junit.Assert.assertNull(str32);
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
		org.junit.Assert
				.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
		org.junit.Assert.assertNull(internal38);
		org.junit.Assert.assertEquals(
				"'" + str39 + "' != '" + "hi!" + "'", str39, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean40 + "' != '" + false + "'", boolean40 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel43);
		org.junit.Assert.assertNotNull(undoState45);
		org.junit.Assert.assertNotNull(eClass49);
	}

	@Test
	public void test0641() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0641"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.initId();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj9 = zentaDiagramModel0.eVirtualGet('#');
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
	}

	@Test
	public void test0642() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0642"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setDocumentation("hi!");
		java.lang.Object obj7 = zentaDiagramModel3.getAdapter(0L);
		int int8 = zentaDiagramModel3.getLineWidth();
		java.lang.String str9 = zentaDiagramModel3.getId();
		java.lang.String str10 = zentaDiagramModel3.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		java.lang.Object obj15 = zentaDiagramModel11.getAdapter(0L);
		int int16 = zentaDiagramModel11.getLineWidth();
		java.lang.String str17 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = zentaDiagramModel11
				.eSetResource(internal18, notificationChain19);
		org.eclipse.emf.ecore.resource.Resource.Internal internal21 = zentaDiagramModel11
				.eInternalResource();
		zentaDiagramModel11.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel11
				.findDiagramModel();
		java.lang.String str25 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature26 = zentaDiagramModel11
				.eContainingFeature();
		boolean boolean27 = zentaDiagramModel11.isDeleted();
		org.eclipse.emf.ecore.EObject eObject28 = zentaDiagramModel3
				.eResolveProxy(zentaDiagramModel11);
		zentaDiagramModel11.setLineColor("hi!");
		org.eclipse.emf.ecore.EObject eObject31 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel11);
		zentaDiagramModel11.setLineColor("");
		// The following exception was thrown during execution in test
		// generation
		try {
			org.rulez.magwas.zenta.model.IFolder iFolder34 = zentaDiagramModel11
					.getParentFolder();
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertNull(obj7);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
		org.junit.Assert.assertNull(str9);
		org.junit.Assert.assertEquals(
				"'" + str10 + "' != '" + "hi!" + "'", str10, "hi!"
		);
		org.junit.Assert.assertNull(obj15);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
		org.junit.Assert.assertEquals(
				"'" + str17 + "' != '" + "hi!" + "'", str17, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain20);
		org.junit.Assert.assertNull(internal21);
		org.junit.Assert.assertNotNull(iDiagramModel24);
		org.junit.Assert.assertEquals(
				"'" + str25 + "' != '" + "hi!" + "'", str25, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature26);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + true + "'", boolean27 == true
		);
		org.junit.Assert.assertNotNull(eObject28);
		org.junit.Assert.assertNotNull(eObject31);
	}

	@Test
	public void test0643() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0643"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		int int4 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature5 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean6 = zentaDiagramModel0.eIsSet(eStructuralFeature5);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
	}

	@Test
	public void test0644() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0644"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		zentaDiagramModel5.setName("");
		org.eclipse.emf.ecore.EOperation eOperation19 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel20 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel20.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel23 = zentaDiagramModel20
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass24 = zentaDiagramModel20.eClass();
		int int25 = zentaDiagramModel20.getConnectionRouterType();
		org.eclipse.emf.ecore.EReference eReference26 = zentaDiagramModel20
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel27 = zentaDiagramModel20
				.getDiagramModel();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList28 = zentaDiagramModel20
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj29 = zentaDiagramModel5
					.eInvoke(eOperation19, adapterList28);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertNotNull(iDiagramModel23);
		org.junit.Assert.assertNotNull(eClass24);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(eReference26);
		org.junit.Assert.assertNotNull(iDiagramModel27);
		org.junit.Assert.assertNotNull(adapterList28);
	}

	@Test
	public void test0645() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0645"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification8 = null;
		zentaDiagramModel0.eNotify(notification8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		java.lang.String str11 = zentaDiagramModel0.getDocumentation();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean13 = zentaDiagramModel0.eVirtualIsSet(2);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertEquals(
				"'" + str11 + "' != '" + "hi!" + "'", str11, "hi!"
		);
	}

	@Test
	public void test0646() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0646"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		zentaDiagramModel0.checkId("");
		int int9 = zentaDiagramModel0.getConnectionRouterType();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
	}

	@Test
	public void test0647() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0647"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature5 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj7 = zentaDiagramModel0
					.eOpenGet(eStructuralFeature5, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
	}

	@Test
	public void test0648() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0648"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.Object obj12 = null;
		java.lang.Object obj13 = zentaDiagramModel0.getAdapter(obj12);
		java.lang.String str14 = zentaDiagramModel0.getName();
		java.lang.String str15 = zentaDiagramModel0.getName();
		zentaDiagramModel0.setConnectionRouterType((short) 10);
		org.eclipse.emf.ecore.EObject eObject18 = zentaDiagramModel0
				.eContainer();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj20 = zentaDiagramModel0.eVirtualUnset('a');
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert
				.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
		org.junit.Assert
				.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
		org.junit.Assert.assertNull(eObject18);
	}

	@Test
	public void test0649() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0649"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification8 = null;
		zentaDiagramModel0.eNotify(notification8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.eclipse.emf.common.notify.NotificationChain notificationChain11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain12 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNotNull(undoState10);
	}

	@Test
	public void test0650() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0650"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean14 = zentaDiagramModel0.isDeleted();
		zentaDiagramModel0.checkName("");
		boolean boolean17 = zentaDiagramModel0.eIsProxy();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj20 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature18, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + false + "'", boolean17 == false
		);
	}

	@Test
	public void test0651() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0651"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj18 = zentaDiagramModel5.eVirtualGet((short) -1);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
	}

	@Test
	public void test0652() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0652"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		java.lang.String str8 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EOperation eOperation9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int10 = zentaDiagramModel0.eDerivedOperationID(eOperation9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
	}

	@Test
	public void test0653() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0653"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		zentaDiagramModel0.setConnectionRouterType('4');
		int int8 = zentaDiagramModel0.getViewpoint();
		boolean boolean9 = zentaDiagramModel0.eNotificationRequired();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI11 = null;
		zentaDiagramModel10.eSetProxyURI(uRI11);
		zentaDiagramModel10.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList15 = zentaDiagramModel10
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setDocumentation("hi!");
		java.lang.Object obj20 = zentaDiagramModel16.getAdapter(0L);
		int int21 = zentaDiagramModel16.getLineWidth();
		java.lang.String str22 = zentaDiagramModel16.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel16
				.eSetResource(internal23, notificationChain24);
		java.lang.Object obj29 = zentaDiagramModel16.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification30 = null;
		zentaDiagramModel16.eNotify(notification30);
		org.eclipse.emf.ecore.EObject eObject32 = zentaDiagramModel10
				.eResolveProxy(zentaDiagramModel16);
		org.eclipse.emf.ecore.EObject eObject33 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel16);
		zentaDiagramModel0.eSetDeliver(false);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel37 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel37.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource40 = zentaDiagramModel37
				.eResource();
		org.eclipse.emf.ecore.EObject eObject41 = zentaDiagramModel37
				.eContainer();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj42 = zentaDiagramModel0
					.eVirtualSet((short) 10, eObject41);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean9 + "' != '" + false + "'", boolean9 == false
		);
		org.junit.Assert.assertNotNull(adapterList15);
		org.junit.Assert.assertNull(obj20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain25);
		org.junit.Assert.assertNull(obj29);
		org.junit.Assert.assertNotNull(eObject32);
		org.junit.Assert.assertNotNull(eObject33);
		org.junit.Assert.assertNull(resource40);
		org.junit.Assert.assertNull(eObject41);
	}

	@Test
	public void test0654() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0654"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel12.eSetProxyURI(uRI13);
		zentaDiagramModel12.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel12
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		java.lang.String str24 = zentaDiagramModel18.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel18
				.eSetResource(internal25, notificationChain26);
		java.lang.Object obj31 = zentaDiagramModel18.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel18.eNotify(notification32);
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel12
				.eResolveProxy(zentaDiagramModel18);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		int int44 = zentaDiagramModel35.getConnectionRouterType();
		zentaDiagramModel0.setAdapter(zentaDiagramModel18, zentaDiagramModel35);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel46 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel46.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass49 = zentaDiagramModel46.eClass();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList50 = zentaDiagramModel46
				.getProperties();
		java.lang.Object obj54 = zentaDiagramModel46
				.eGet((short) 1, false, true);
		boolean boolean55 = zentaDiagramModel35.eContains(zentaDiagramModel46);
		org.eclipse.emf.ecore.resource.Resource.Internal internal56 = zentaDiagramModel35
				.eDirectResource();
		org.rulez.magwas.zenta.model.UndoState undoState57 = zentaDiagramModel35
				.delete();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertEquals(
				"'" + str24 + "' != '" + "hi!" + "'", str24, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
		org.junit.Assert.assertNotNull(eClass49);
		org.junit.Assert.assertNotNull(iPropertyList50);
		org.junit.Assert
				.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
		org.junit.Assert.assertTrue(
				"'" + boolean55 + "' != '" + false + "'", boolean55 == false
		);
		org.junit.Assert.assertNull(internal56);
	}

	@Test
	public void test0655() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0655"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.common.notify.NotificationChain notificationChain33 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain34 = zentaDiagramModel22
					.eDynamicBasicRemoveFromContainer(notificationChain33);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
	}

	@Test
	public void test0656() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0656"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList14 = zentaDiagramModel5
				.getProperties();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel5.eClass();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature16 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj17 = zentaDiagramModel5
					.eGet(eStructuralFeature16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNotNull(iPropertyList14);
		org.junit.Assert.assertNotNull(eClass15);
	}

	@Test
	public void test0657() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0657"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		java.lang.String str17 = zentaDiagramModel0.toString();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting19 = zentaDiagramModel0
					.eSetting(eStructuralFeature18);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
	}

	@Test
	public void test0658() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0658"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.Object obj12 = null;
		java.lang.Object obj13 = zentaDiagramModel0.getAdapter(obj12);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.ecore.EOperation eOperation15 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setDocumentation("hi!");
		int int19 = zentaDiagramModel16.eContainerFeatureID();
		java.lang.String str20 = zentaDiagramModel16.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setDocumentation("hi!");
		int int24 = zentaDiagramModel21.eContainerFeatureID();
		java.lang.String str25 = zentaDiagramModel21.getName();
		zentaDiagramModel16.setAdapter(zentaDiagramModel21, 1L);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList28 = zentaDiagramModel21
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj29 = zentaDiagramModel0
					.eInvoke(eOperation15, adapterList28);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert.assertNull(eStructuralFeature14);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
		org.junit.Assert
				.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
		org.junit.Assert
				.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
		org.junit.Assert
				.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
		org.junit.Assert.assertNotNull(adapterList28);
	}

	@Test
	public void test0659() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0659"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		boolean boolean17 = zentaDiagramModel0.eDeliver();
		zentaDiagramModel0.setChecked(false);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int21 = zentaDiagramModel0
					.eDerivedStructuralFeatureID(eStructuralFeature20);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + true + "'", boolean17 == true
		);
	}

	@Test
	public void test0660() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0660"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.ecore.InternalEObject internalEObject23 = zentaDiagramModel6
				.eInternalContainer();
		java.lang.String str24 = zentaDiagramModel6.toString();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature25 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean26 = zentaDiagramModel6.eIsSet(eStructuralFeature25);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNull(internalEObject23);
	}

	@Test
	public void test0661() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0661"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel12.eSetProxyURI(uRI13);
		zentaDiagramModel12.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel12
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		java.lang.String str24 = zentaDiagramModel18.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel18
				.eSetResource(internal25, notificationChain26);
		java.lang.Object obj31 = zentaDiagramModel18.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel18.eNotify(notification32);
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel12
				.eResolveProxy(zentaDiagramModel18);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		int int44 = zentaDiagramModel35.getConnectionRouterType();
		zentaDiagramModel0.setAdapter(zentaDiagramModel18, zentaDiagramModel35);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel46 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel46.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass49 = zentaDiagramModel46.eClass();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList50 = zentaDiagramModel46
				.getProperties();
		java.lang.Object obj54 = zentaDiagramModel46
				.eGet((short) 1, false, true);
		boolean boolean55 = zentaDiagramModel35.eContains(zentaDiagramModel46);
		org.eclipse.emf.ecore.resource.Resource.Internal internal56 = zentaDiagramModel35
				.eDirectResource();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList57 = zentaDiagramModel35
				.eContents();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertEquals(
				"'" + str24 + "' != '" + "hi!" + "'", str24, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
		org.junit.Assert.assertNotNull(eClass49);
		org.junit.Assert.assertNotNull(iPropertyList50);
		org.junit.Assert
				.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
		org.junit.Assert.assertTrue(
				"'" + boolean55 + "' != '" + false + "'", boolean55 == false
		);
		org.junit.Assert.assertNull(internal56);
		org.junit.Assert.assertNotNull(eObjectList57);
	}

	@Test
	public void test0662() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0662"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		zentaDiagramModel5.eUnset((byte) 10);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		int int17 = zentaDiagramModel14.eContainerFeatureID();
		java.lang.String str18 = zentaDiagramModel14.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		int int22 = zentaDiagramModel19.eContainerFeatureID();
		java.lang.String str23 = zentaDiagramModel19.getName();
		zentaDiagramModel14.setAdapter(zentaDiagramModel19, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject30 = zentaDiagramModel19
				.eResolveProxy(zentaDiagramModel26);
		java.lang.String str31 = zentaDiagramModel26.getName();
		org.eclipse.emf.ecore.EObject eObject32 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel26);
		zentaDiagramModel26.eUnset(10);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
		org.junit.Assert
				.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNotNull(eObject30);
		org.junit.Assert
				.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
		org.junit.Assert.assertNotNull(eObject32);
	}

	@Test
	public void test0663() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0663"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification8 = null;
		zentaDiagramModel0.eNotify(notification8);
		zentaDiagramModel0.setName("hi!");
		int int12 = zentaDiagramModel0.eContainerFeatureID();
		zentaDiagramModel0.checkDocumentation("");
		org.rulez.magwas.zenta.model.UndoState undoState15 = zentaDiagramModel0
				.prepareDelete();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
		org.junit.Assert.assertNotNull(undoState15);
	}

	@Test
	public void test0664() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0664"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EOperation eOperation4 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore8 = zentaDiagramModel5
				.eStore();
		org.eclipse.emf.common.notify.Notification notification9 = null;
		zentaDiagramModel5.eNotify(notification9);
		int int11 = zentaDiagramModel5.getViewpoint();
		int int12 = zentaDiagramModel5.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		int int21 = zentaDiagramModel18.eContainerFeatureID();
		java.lang.String str22 = zentaDiagramModel18.getName();
		zentaDiagramModel13.setAdapter(zentaDiagramModel18, 1L);
		java.lang.String str25 = zentaDiagramModel18.getId();
		int int26 = zentaDiagramModel18.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel27 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel27.setDocumentation("hi!");
		int int30 = zentaDiagramModel27.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal31 = zentaDiagramModel27
				.eInternalResource();
		java.lang.String str32 = zentaDiagramModel27.getDocumentation();
		boolean boolean33 = zentaDiagramModel27.isChecked();
		zentaDiagramModel27.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel36 = zentaDiagramModel27
				.findDiagramModel();
		zentaDiagramModel5.setAdapter(zentaDiagramModel18, zentaDiagramModel27);
		org.eclipse.emf.ecore.resource.Resource resource38 = zentaDiagramModel27
				.eResource();
		zentaDiagramModel27.setDocumentation("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel42 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel42.setDocumentation("hi!");
		java.lang.Object obj46 = zentaDiagramModel42.getAdapter(0L);
		int int47 = zentaDiagramModel42.getLineWidth();
		java.lang.String str48 = zentaDiagramModel42.getDocumentation();
		org.eclipse.emf.ecore.EObject eObject49 = zentaDiagramModel42.getCopy();
		int int50 = zentaDiagramModel42.eContainerFeatureID();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList51 = zentaDiagramModel42
				.eAdapters();
		java.lang.Object obj52 = zentaDiagramModel27.eInvoke(0, adapterList51);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj53 = zentaDiagramModel0
					.eInvoke(eOperation4, adapterList51);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStore8);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
		org.junit.Assert.assertNull(str25);
		org.junit.Assert
				.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
		org.junit.Assert
				.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
		org.junit.Assert.assertNull(internal31);
		org.junit.Assert.assertEquals(
				"'" + str32 + "' != '" + "hi!" + "'", str32, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean33 + "' != '" + false + "'", boolean33 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel36);
		org.junit.Assert.assertNull(resource38);
		org.junit.Assert.assertNull(obj46);
		org.junit.Assert
				.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
		org.junit.Assert.assertEquals(
				"'" + str48 + "' != '" + "hi!" + "'", str48, "hi!"
		);
		org.junit.Assert.assertNotNull(eObject49);
		org.junit.Assert
				.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
		org.junit.Assert.assertNotNull(adapterList51);
		org.junit.Assert.assertNotNull(obj52);
	}

	@Test
	public void test0665() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0665"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EObject eObject9 = zentaDiagramModel0
				.eContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean11 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNull(eObject9);
	}

	@Test
	public void test0666() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0666"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		int int17 = zentaDiagramModel12.eContainerFeatureID();
		zentaDiagramModel12.setLineWidth(0);
		boolean boolean20 = zentaDiagramModel12.hasDiagramReferences();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj22 = zentaDiagramModel12
					.eVirtualUnset((short) -1);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean20 + "' != '" + false + "'", boolean20 == false
		);
	}

	@Test
	public void test0667() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0667"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.initId();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = zentaDiagramModel0
				.eContainingFeature();
		java.lang.String str16 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature17 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eOpenUnset(eStructuralFeature17);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertNull(eStructuralFeature15);
		org.junit.Assert.assertEquals(
				"'" + str16 + "' != '" + "hi!" + "'", str16, "hi!"
		);
	}

	@Test
	public void test0668() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0668"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.setId("hi!");
		zentaDiagramModel0.check();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean15 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
	}

	@Test
	public void test0669() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0669"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		int int33 = zentaDiagramModel22.getViewpoint();
		org.eclipse.emf.ecore.EOperation eOperation34 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		java.lang.String str39 = zentaDiagramModel35.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList40 = zentaDiagramModel35
				.eContents();
		int int41 = zentaDiagramModel35.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel42 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel42.setDocumentation("hi!");
		java.lang.Object obj46 = zentaDiagramModel42.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject47 = zentaDiagramModel42
				.eInternalContainer();
		boolean boolean48 = zentaDiagramModel42.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor49 = zentaDiagramModel42
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel51 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel51.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore54 = zentaDiagramModel51
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList55 = zentaDiagramModel51
				.eAdapters();
		java.lang.Object obj56 = zentaDiagramModel42
				.eInvoke((short) 0, adapterList55);
		java.lang.Object obj57 = zentaDiagramModel35.getAdapter(adapterList55);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj58 = zentaDiagramModel22
					.eInvoke(eOperation34, adapterList55);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert
				.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
		org.junit.Assert.assertNotNull(eObjectList40);
		org.junit.Assert
				.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
		org.junit.Assert.assertNull(obj46);
		org.junit.Assert.assertNull(internalEObject47);
		org.junit.Assert.assertTrue(
				"'" + boolean48 + "' != '" + false + "'", boolean48 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor49);
		org.junit.Assert.assertNull(eStore54);
		org.junit.Assert.assertNotNull(adapterList55);
		org.junit.Assert.assertNotNull(obj56);
		org.junit.Assert.assertNull(obj57);
	}

	@Test
	public void test0670() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0670"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel4 = zentaDiagramModel0
				.findDiagramModel();
		java.lang.Class<?> wildcardClass5 = zentaDiagramModel0.getClass();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNotNull(iDiagramModel4);
		org.junit.Assert.assertNotNull(wildcardClass5);
	}

	@Test
	public void test0671() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0671"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.ecore.resource.Resource.Internal internal23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel0
				.eSetResource(internal23, notificationChain24);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal30 = zentaDiagramModel26
				.eInternalResource();
		java.lang.Object obj31 = zentaDiagramModel0
				.getAdapter(zentaDiagramModel26);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel0.eNotify(notification32);
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean35 = false; // flaky: zentaDiagramModel0.eIsSet((int)
										// (short) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNull(notificationChain25);
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNull(internal30);
		org.junit.Assert.assertNull(obj31);
	}

	@Test
	public void test0672() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0672"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		int int10 = zentaDiagramModel0.getLineWidth();
		boolean boolean11 = zentaDiagramModel0.eNotificationRequired();
		java.lang.String str12 = zentaDiagramModel0.getDocumentation();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + false + "'", boolean11 == false
		);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
	}

	@Test
	public void test0673() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0673"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor7 = zentaDiagramModel0
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel9
				.eAdapters();
		java.lang.Object obj14 = zentaDiagramModel0
				.eInvoke((short) 0, adapterList13);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj16 = zentaDiagramModel0
					.eGet(eStructuralFeature15);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor7);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert.assertNotNull(adapterList13);
		org.junit.Assert.assertNotNull(obj14);
	}

	@Test
	public void test0674() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0674"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.resource.Resource resource33 = zentaDiagramModel22
				.eResource();
		zentaDiagramModel22.setDocumentation("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel37 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel37.setDocumentation("hi!");
		java.lang.Object obj41 = zentaDiagramModel37.getAdapter(0L);
		int int42 = zentaDiagramModel37.getLineWidth();
		java.lang.String str43 = zentaDiagramModel37.getDocumentation();
		org.eclipse.emf.ecore.EObject eObject44 = zentaDiagramModel37.getCopy();
		int int45 = zentaDiagramModel37.eContainerFeatureID();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList46 = zentaDiagramModel37
				.eAdapters();
		java.lang.Object obj47 = zentaDiagramModel22.eInvoke(0, adapterList46);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel22.eDynamicUnset(35);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNull(resource33);
		org.junit.Assert.assertNull(obj41);
		org.junit.Assert
				.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
		org.junit.Assert.assertEquals(
				"'" + str43 + "' != '" + "hi!" + "'", str43, "hi!"
		);
		org.junit.Assert.assertNotNull(eObject44);
		org.junit.Assert
				.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
		org.junit.Assert.assertNotNull(adapterList46);
		org.junit.Assert.assertNotNull(obj47);
	}

	@Test
	public void test0675() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0675"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore4 = zentaDiagramModel0
				.eStore();
		zentaDiagramModel0.eSetDeliver(true);
		boolean boolean7 = zentaDiagramModel0.hasDiagramReferences();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj10 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature8, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStore4);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + false + "'", boolean7 == false
		);
	}

	@Test
	public void test0676() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0676"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		int int10 = zentaDiagramModel7.eContainerFeatureID();
		java.lang.String str11 = zentaDiagramModel7.getName();
		int int12 = zentaDiagramModel7.getViewpoint();
		zentaDiagramModel7.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification15 = null;
		zentaDiagramModel7.eNotify(notification15);
		org.rulez.magwas.zenta.model.UndoState undoState17 = zentaDiagramModel7
				.prepareDelete();
		org.rulez.magwas.zenta.model.UndoState undoState18 = zentaDiagramModel0
				.delete(undoState17);
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
		org.junit.Assert
				.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
		org.junit.Assert.assertNotNull(undoState17);
	}

	@Test
	public void test0677() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0677"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.checkName("");
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
	}

	@Test
	public void test0678() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0678"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource9 = zentaDiagramModel6
				.eResource();
		org.eclipse.emf.ecore.EObject eObject10 = zentaDiagramModel6
				.eContainer();
		org.eclipse.emf.ecore.EObject eObject11 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		boolean boolean12 = zentaDiagramModel0.isChecked();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertNull(resource9);
		org.junit.Assert.assertNull(eObject10);
		org.junit.Assert.assertNotNull(eObject11);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
	}

	@Test
	public void test0679() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0679"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		int int10 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(false);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.getDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI16 = null;
		zentaDiagramModel15.eSetProxyURI(uRI16);
		org.eclipse.emf.common.notify.Notification notification18 = null;
		zentaDiagramModel15.eNotify(notification18);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj20 = zentaDiagramModel0
					.eVirtualSet((short) 0, zentaDiagramModel15);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel13);
	}

	@Test
	public void test0680() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0680"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(true);
		int int8 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel9
				.eAdapters();
		java.lang.Object obj14 = zentaDiagramModel0
				.getAdapter(zentaDiagramModel9);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj17 = zentaDiagramModel0
					.eGet(eStructuralFeature15, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert.assertNotNull(adapterList13);
		org.junit.Assert.assertNull(obj14);
	}

	@Test
	public void test0681() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0681"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean14 = zentaDiagramModel0.isDeleted();
		boolean boolean15 = zentaDiagramModel0.isTemplate();
		java.lang.String str16 = zentaDiagramModel0.getDocumentation();
		int int17 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature18 = zentaDiagramModel0
				.eContainingFeature();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset((byte) 0);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'zentaModel' is not a valid changeable feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean15 + "' != '" + false + "'", boolean15 == false
		);
		org.junit.Assert.assertEquals(
				"'" + str16 + "' != '" + "hi!" + "'", str16, "hi!"
		);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
		org.junit.Assert.assertNull(eStructuralFeature18);
	}

	@Test
	public void test0682() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0682"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		java.lang.Object obj13 = zentaDiagramModel0.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel0.eNotify(notification14);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature16 = zentaDiagramModel0
				.eContainingFeature();
		boolean boolean17 = zentaDiagramModel0.eNotificationRequired();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert.assertNull(eStructuralFeature16);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + false + "'", boolean17 == false
		);
	}

	@Test
	public void test0683() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0683"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		int int33 = zentaDiagramModel22.getViewpoint();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature34 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj37 = zentaDiagramModel22
					.eGet(eStructuralFeature34, true, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
	}

	@Test
	public void test0684() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0684"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList14 = zentaDiagramModel5
				.getProperties();
		org.eclipse.emf.ecore.EReference eReference15 = zentaDiagramModel5
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI17 = null;
		zentaDiagramModel16.eSetProxyURI(uRI17);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass22 = zentaDiagramModel19.eClass();
		zentaDiagramModel16.eSetClass(eClass22);
		zentaDiagramModel5.eSetClass(eClass22);
		org.eclipse.emf.ecore.InternalEObject internalEObject25 = zentaDiagramModel5
				.eInternalContainer();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNotNull(iPropertyList14);
		org.junit.Assert.assertNull(eReference15);
		org.junit.Assert.assertNotNull(eClass22);
		org.junit.Assert.assertNull(internalEObject25);
	}

	@Test
	public void test0685() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0685"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		int int13 = zentaDiagramModel10.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = zentaDiagramModel10
				.eContainingFeature();
		zentaDiagramModel10.setId("");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore17 = zentaDiagramModel10
				.eStore();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj18 = zentaDiagramModel0
					.eVirtualSet('#', eStore17);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNull(eStructuralFeature14);
		org.junit.Assert.assertNull(eStore17);
	}

	@Test
	public void test0686() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0686"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		boolean boolean4 = zentaDiagramModel0.eNotificationRequired();
		boolean boolean5 = zentaDiagramModel0.isChecked();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		int int10 = zentaDiagramModel7.eContainerFeatureID();
		java.lang.String str11 = zentaDiagramModel7.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList12 = zentaDiagramModel7
				.eContents();
		int int13 = zentaDiagramModel7.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		java.lang.Object obj18 = zentaDiagramModel14.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject19 = zentaDiagramModel14
				.eInternalContainer();
		boolean boolean20 = zentaDiagramModel14.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor21 = zentaDiagramModel14
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel23 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel23.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore26 = zentaDiagramModel23
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList27 = zentaDiagramModel23
				.eAdapters();
		java.lang.Object obj28 = zentaDiagramModel14
				.eInvoke((short) 0, adapterList27);
		java.lang.Object obj29 = zentaDiagramModel7.getAdapter(adapterList27);
		java.lang.Object obj30 = zentaDiagramModel0
				.eInvoke((short) 1, adapterList27);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature31 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj33 = zentaDiagramModel0
					.eOpenGet(eStructuralFeature31, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean4 + "' != '" + false + "'", boolean4 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
		org.junit.Assert
				.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
		org.junit.Assert.assertNotNull(eObjectList12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNull(obj18);
		org.junit.Assert.assertNull(internalEObject19);
		org.junit.Assert.assertTrue(
				"'" + boolean20 + "' != '" + false + "'", boolean20 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor21);
		org.junit.Assert.assertNull(eStore26);
		org.junit.Assert.assertNotNull(adapterList27);
		org.junit.Assert.assertNotNull(obj28);
		org.junit.Assert.assertNull(obj29);
		org.junit.Assert.assertEquals(
				"'" + obj30 + "' != '" + false + "'", obj30, false
		);
	}

	@Test
	public void test0687() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0687"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel12.eSetProxyURI(uRI13);
		zentaDiagramModel12.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel12
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		java.lang.String str24 = zentaDiagramModel18.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel18
				.eSetResource(internal25, notificationChain26);
		java.lang.Object obj31 = zentaDiagramModel18.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel18.eNotify(notification32);
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel12
				.eResolveProxy(zentaDiagramModel18);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		int int44 = zentaDiagramModel35.getConnectionRouterType();
		zentaDiagramModel0.setAdapter(zentaDiagramModel18, zentaDiagramModel35);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel46 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel46.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass49 = zentaDiagramModel46.eClass();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList50 = zentaDiagramModel46
				.getProperties();
		java.lang.Object obj54 = zentaDiagramModel46
				.eGet((short) 1, false, true);
		boolean boolean55 = zentaDiagramModel35.eContains(zentaDiagramModel46);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj57 = zentaDiagramModel46.eVirtualGet((-1));
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertEquals(
				"'" + str24 + "' != '" + "hi!" + "'", str24, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
		org.junit.Assert.assertNotNull(eClass49);
		org.junit.Assert.assertNotNull(iPropertyList50);
		org.junit.Assert
				.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
		org.junit.Assert.assertTrue(
				"'" + boolean55 + "' != '" + false + "'", boolean55 == false
		);
	}

	@Test
	public void test0688() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0688"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel2 = zentaDiagramModel0
				.findDiagramModel();
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(iDiagramModel2);
	}

	@Test
	public void test0689() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0689"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		boolean boolean3 = zentaDiagramModel0.hasDiagramReferences();
		int int4 = zentaDiagramModel0.getLineWidth();
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertTrue(
				"'" + boolean3 + "' != '" + false + "'", boolean3 == false
		);
		org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
	}

	@Test
	public void test0690() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0690"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList4 = zentaDiagramModel0
				.eAdapters();
		boolean boolean5 = zentaDiagramModel0.isTemplate();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		java.lang.Object obj17 = zentaDiagramModel13.getAdapter(0L);
		int int18 = zentaDiagramModel13.getLineWidth();
		java.lang.String str19 = zentaDiagramModel13.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList20 = zentaDiagramModel13
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass24 = zentaDiagramModel21.eClass();
		zentaDiagramModel13.eSetClass(eClass24);
		zentaDiagramModel6.eSetClass(eClass24);
		zentaDiagramModel0.eSetClass(eClass24);
		zentaDiagramModel0.setConnectionRouterType((byte) 1);
		zentaDiagramModel0.setLineWidth(2);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature32 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel33 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel33.setDocumentation("hi!");
		java.lang.Object obj37 = zentaDiagramModel33.getAdapter(0L);
		int int38 = zentaDiagramModel33.getLineWidth();
		java.lang.Class<?> wildcardClass39 = zentaDiagramModel33.getClass();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSet(eStructuralFeature32, wildcardClass39);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNotNull(adapterList4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(obj17);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
		org.junit.Assert.assertEquals(
				"'" + str19 + "' != '" + "hi!" + "'", str19, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList20);
		org.junit.Assert.assertNotNull(eClass24);
		org.junit.Assert.assertNull(obj37);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
		org.junit.Assert.assertNotNull(wildcardClass39);
	}

	@Test
	public void test0691() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0691"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList6 = zentaDiagramModel0
				.eAdapters();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EReference eReference8 = zentaDiagramModel0
				.eContainmentFeature();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = zentaDiagramModel0
				.eContainingFeature();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel10 = zentaDiagramModel0
				.getDiagramModel();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(adapterList6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(eReference8);
		org.junit.Assert.assertNull(eStructuralFeature9);
		org.junit.Assert.assertNotNull(iDiagramModel10);
	}

	@Test
	public void test0692() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0692"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel20 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel20.setDocumentation("hi!");
		int int23 = zentaDiagramModel20.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject24 = zentaDiagramModel13
				.eResolveProxy(zentaDiagramModel20);
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel20, '4', notificationChain26
				);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature28 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature28);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
		org.junit.Assert.assertNotNull(eObject24);
		org.junit.Assert.assertNull(notificationChain27);
	}

	@Test
	public void test0693() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0693"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EObject eObject7 = zentaDiagramModel0.getCopy();
		int int8 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EOperation eOperation9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int10 = zentaDiagramModel0.eDerivedOperationID(eOperation9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(eObject7);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
	}

	@Test
	public void test0694() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0694"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		boolean boolean6 = zentaDiagramModel0.eIsSet((short) 10);
		boolean boolean7 = zentaDiagramModel0.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList15 = zentaDiagramModel8
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass19 = zentaDiagramModel16.eClass();
		zentaDiagramModel8.eSetClass(eClass19);
		zentaDiagramModel0.eSetClass(eClass19);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel23 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI24 = null;
		zentaDiagramModel23.eSetProxyURI(uRI24);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass29 = zentaDiagramModel26.eClass();
		zentaDiagramModel23.eSetClass(eClass29);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel31 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel31.setDocumentation("hi!");
		int int34 = zentaDiagramModel31.eContainerFeatureID();
		boolean boolean35 = zentaDiagramModel31.eNotificationRequired();
		org.eclipse.emf.common.notify.NotificationChain notificationChain37 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain38 = zentaDiagramModel23
				.eBasicSetContainer(
						zentaDiagramModel31, (short) 0, notificationChain37
				);
		// The following exception was thrown during execution in test
		// generation
		try {
// flaky:             zentaDiagramModel0.eSet(35, (java.lang.Object) notificationChain38);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + true + "'", boolean7 == true
		);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList15);
		org.junit.Assert.assertNotNull(eClass19);
		org.junit.Assert.assertNotNull(eClass29);
		org.junit.Assert
				.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean35 + "' != '" + false + "'", boolean35 == false
		);
		org.junit.Assert.assertNull(notificationChain38);
	}

	@Test
	public void test0695() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0695"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList14 = zentaDiagramModel8
				.eAdapters();
		java.lang.Object obj15 = zentaDiagramModel0.eInvoke(0, adapterList14);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel19 = zentaDiagramModel16
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass20 = zentaDiagramModel16.eClass();
		zentaDiagramModel0.eSetClass(eClass20);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI23 = null;
		zentaDiagramModel22.eSetProxyURI(uRI23);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel25 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel25.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass28 = zentaDiagramModel25.eClass();
		zentaDiagramModel22.eSetClass(eClass28);
		boolean boolean30 = zentaDiagramModel0.eContains(zentaDiagramModel22);
		java.lang.Object obj31 = null;
		java.lang.Object obj32 = zentaDiagramModel22.getAdapter(obj31);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature33 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel22.eDynamicUnset(eStructuralFeature33);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(uRI6);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertNotNull(adapterList14);
		org.junit.Assert.assertNotNull(obj15);
		org.junit.Assert.assertNotNull(iDiagramModel19);
		org.junit.Assert.assertNotNull(eClass20);
		org.junit.Assert.assertNotNull(eClass28);
		org.junit.Assert.assertTrue(
				"'" + boolean30 + "' != '" + false + "'", boolean30 == false
		);
		org.junit.Assert.assertNull(obj32);
	}

	@Test
	public void test0696() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0696"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineColor("");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		java.lang.Object obj9 = zentaDiagramModel5.getAdapter(0L);
		int int10 = zentaDiagramModel5.getLineWidth();
		java.lang.String str11 = zentaDiagramModel5.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal12 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = zentaDiagramModel5
				.eSetResource(internal12, notificationChain13);
		java.lang.Object obj18 = zentaDiagramModel5.eGet(2, false, false);
		java.lang.Object obj19 = zentaDiagramModel0.getAdapter(false);
		zentaDiagramModel0.eSetDeliver(false);
		zentaDiagramModel0.setChecked(true);
		zentaDiagramModel0.setViewpoint((byte) -1);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.check();
			org.junit.Assert.fail(
					"Expected exception of type org.rulez.magwas.zenta.model.ModelConsistencyException; message: id cannot be null: org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel@74346e31 (name: , id: null, lineWidth: 1, lineColor: , documentation: , connectionRouterType: 0) (viewpoint: -1)"
			);
		} catch (org.rulez.magwas.zenta.model.ModelConsistencyException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertEquals(
				"'" + str11 + "' != '" + "hi!" + "'", str11, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain14);
		org.junit.Assert.assertNull(obj18);
		org.junit.Assert.assertNull(obj19);
	}

	@Test
	public void test0697() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0697"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.ecore.resource.Resource.Internal internal23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel0
				.eSetResource(internal23, notificationChain24);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal30 = zentaDiagramModel26
				.eInternalResource();
		java.lang.Object obj31 = zentaDiagramModel0
				.getAdapter(zentaDiagramModel26);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset('4');
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNull(notificationChain25);
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNull(internal30);
		org.junit.Assert.assertNull(obj31);
	}

	@Test
	public void test0698() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0698"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		int int5 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore16 = zentaDiagramModel13
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel13
				.eAdapters();
		boolean boolean18 = zentaDiagramModel13.eDeliver();
		java.lang.Object obj19 = zentaDiagramModel6
				.getAdapter(zentaDiagramModel13);
		org.eclipse.emf.ecore.EClass eClass20 = zentaDiagramModel13.eClass();
		boolean boolean21 = zentaDiagramModel0.eContains(zentaDiagramModel13);
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain23 = zentaDiagramModel13
					.eBasicRemoveFromContainerFeature(notificationChain22);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertNull(str12);
		org.junit.Assert.assertNull(eStore16);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertTrue(
				"'" + boolean18 + "' != '" + true + "'", boolean18 == true
		);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eClass20);
		org.junit.Assert.assertTrue(
				"'" + boolean21 + "' != '" + false + "'", boolean21 == false
		);
	}

	@Test
	public void test0699() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0699"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature6 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature6);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
	}

	@Test
	public void test0700() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0700"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel0
				.getDiagramModel();
		boolean boolean10 = zentaDiagramModel0.eNotificationRequired();
		int int11 = zentaDiagramModel0.getConnectionRouterType();
		boolean boolean12 = zentaDiagramModel0.hasDiagramReferences();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList13 = zentaDiagramModel0
				.eContents();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel9);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNotNull(eObjectList13);
	}

	@Test
	public void test0701() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0701"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.hasDiagramReferences();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass10 = zentaDiagramModel7.eClass();
		boolean boolean11 = zentaDiagramModel7.eDeliver();
		boolean boolean12 = zentaDiagramModel0.eContains(zentaDiagramModel7);
		zentaDiagramModel7.setId("");
		boolean boolean15 = zentaDiagramModel7.isChecked();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj17 = zentaDiagramModel7.eVirtualGet('#');
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eClass10);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean15 + "' != '" + false + "'", boolean15 == false
		);
	}

	@Test
	public void test0702() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0702"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature5 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj6 = zentaDiagramModel0
					.eGet(eStructuralFeature5);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
	}

	@Test
	public void test0703() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0703"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification8 = null;
		zentaDiagramModel0.eNotify(notification8);
		zentaDiagramModel0.setName("hi!");
		java.lang.String str12 = zentaDiagramModel0.getName();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean14 = zentaDiagramModel0.eIsSet(eStructuralFeature13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
	}

	@Test
	public void test0704() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0704"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		boolean boolean4 = zentaDiagramModel0.eNotificationRequired();
		zentaDiagramModel0.setViewpoint('4');
		java.lang.String str7 = zentaDiagramModel0.getName();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean4 + "' != '" + false + "'", boolean4 == false
		);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
	}

	@Test
	public void test0705() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0705"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		java.lang.Object obj11 = zentaDiagramModel7.getAdapter(0L);
		int int12 = zentaDiagramModel7.getLineWidth();
		java.lang.String str13 = zentaDiagramModel7.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList14 = zentaDiagramModel7
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass18 = zentaDiagramModel15.eClass();
		zentaDiagramModel7.eSetClass(eClass18);
		zentaDiagramModel0.eSetClass(eClass18);
		java.lang.String str21 = zentaDiagramModel0.toString();
		zentaDiagramModel0.setDocumentation("");
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(obj11);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
		org.junit.Assert.assertEquals(
				"'" + str13 + "' != '" + "hi!" + "'", str13, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList14);
		org.junit.Assert.assertNotNull(eClass18);
	}

	@Test
	public void test0706() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0706"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("");
		int int15 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.Class<?> wildcardClass16 = zentaDiagramModel0.getClass();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(wildcardClass16);
	}

	@Test
	public void test0707() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0707"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList14 = zentaDiagramModel8
				.eAdapters();
		java.lang.Object obj15 = zentaDiagramModel0.eInvoke(0, adapterList14);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel19 = zentaDiagramModel16
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass20 = zentaDiagramModel16.eClass();
		zentaDiagramModel0.eSetClass(eClass20);
		zentaDiagramModel0.checkDocumentation("hi!");
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain24);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(uRI6);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertNotNull(adapterList14);
		org.junit.Assert.assertNotNull(obj15);
		org.junit.Assert.assertNotNull(iDiagramModel19);
		org.junit.Assert.assertNotNull(eClass20);
	}

	@Test
	public void test0708() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0708"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList11 = zentaDiagramModel7
				.eAdapters();
		boolean boolean12 = zentaDiagramModel7.eDeliver();
		java.lang.Object obj13 = zentaDiagramModel0
				.getAdapter(zentaDiagramModel7);
		zentaDiagramModel0.setViewpoint((short) 10);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature16 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean17 = zentaDiagramModel0.eIsSet(eStructuralFeature16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNotNull(adapterList11);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + true + "'", boolean12 == true
		);
		org.junit.Assert.assertNull(obj13);
	}

	@Test
	public void test0709() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0709"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean15 = zentaDiagramModel5
					.eOpenIsSet(eStructuralFeature14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
	}

	@Test
	public void test0710() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0710"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor11 = zentaDiagramModel4
				.eAllContents();
		java.lang.String str12 = zentaDiagramModel4.getDocumentation();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel4
				.getDiagramModel();
		java.lang.Class<?> wildcardClass14 = zentaDiagramModel4.getClass();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor11);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertNotNull(wildcardClass14);
	}

	@Test
	public void test0711() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0711"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj10 = zentaDiagramModel0
					.eGet(eStructuralFeature7, false, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
	}

	@Test
	public void test0712() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0712"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		org.eclipse.emf.ecore.InternalEObject internalEObject17 = zentaDiagramModel12
				.eInternalContainer();
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel12
				.eDirectResource();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature19 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel12.eDynamicUnset(eStructuralFeature19);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertNull(internalEObject17);
		org.junit.Assert.assertNull(internal18);
	}

	@Test
	public void test0713() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0713"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setId("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.getDiagramModel();
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel13);
	}

	@Test
	public void test0714() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0714"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList10 = zentaDiagramModel0
				.eAdapters();
		zentaDiagramModel0.setLineWidth(10);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList13 = zentaDiagramModel0
				.getProperties();
		zentaDiagramModel0.eSetDeliver(false);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(adapterList10);
		org.junit.Assert.assertNotNull(iPropertyList13);
	}

	@Test
	public void test0715() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0715"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.eclipse.emf.ecore.EOperation eOperation12 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore16 = zentaDiagramModel13
				.eStore();
		org.eclipse.emf.common.notify.Notification notification17 = null;
		zentaDiagramModel13.eNotify(notification17);
		int int19 = zentaDiagramModel13.getViewpoint();
		int int20 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setDocumentation("hi!");
		int int24 = zentaDiagramModel21.eContainerFeatureID();
		java.lang.String str25 = zentaDiagramModel21.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		java.lang.String str30 = zentaDiagramModel26.getName();
		zentaDiagramModel21.setAdapter(zentaDiagramModel26, 1L);
		java.lang.String str33 = zentaDiagramModel26.getId();
		int int34 = zentaDiagramModel26.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel44 = zentaDiagramModel35
				.findDiagramModel();
		zentaDiagramModel13
				.setAdapter(zentaDiagramModel26, zentaDiagramModel35);
		org.eclipse.emf.ecore.resource.Resource resource46 = zentaDiagramModel35
				.eResource();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel48 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel48.setDocumentation("hi!");
		java.lang.Object obj52 = zentaDiagramModel48.getAdapter(0L);
		int int53 = zentaDiagramModel48.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList54 = zentaDiagramModel48
				.eAdapters();
		java.lang.Object obj55 = zentaDiagramModel35.eInvoke(0, adapterList54);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj56 = zentaDiagramModel5
					.eInvoke(eOperation12, adapterList54);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(eStore16);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
		org.junit.Assert
				.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
		org.junit.Assert
				.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
		org.junit.Assert
				.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert
				.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
		org.junit.Assert.assertNull(str33);
		org.junit.Assert
				.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel44);
		org.junit.Assert.assertNull(resource46);
		org.junit.Assert.assertNull(obj52);
		org.junit.Assert
				.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
		org.junit.Assert.assertNotNull(adapterList54);
		org.junit.Assert.assertNotNull(obj55);
	}

	@Test
	public void test0716() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0716"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EObject eObject7 = zentaDiagramModel0.getCopy();
		int int8 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EOperation eOperation9 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI11 = null;
		zentaDiagramModel10.eSetProxyURI(uRI11);
		zentaDiagramModel10.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList15 = zentaDiagramModel10
				.eAdapters();
		java.lang.String str16 = zentaDiagramModel10.getLineColor();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel10
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj18 = zentaDiagramModel0
					.eInvoke(eOperation9, adapterList17);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(eObject7);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(adapterList15);
		org.junit.Assert.assertNull(str16);
		org.junit.Assert.assertNotNull(adapterList17);
	}

	@Test
	public void test0717() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0717"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		boolean boolean17 = zentaDiagramModel12.eIsProxy();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean19 = zentaDiagramModel12
					.eDynamicIsSet(eStructuralFeature18);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + false + "'", boolean17 == false
		);
	}

	@Test
	public void test0718() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0718"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.hasDiagramReferences();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel8 = zentaDiagramModel0
				.getDiagramModel();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel0
				.findDiagramModel();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel8);
		org.junit.Assert.assertNotNull(iDiagramModel9);
	}

	@Test
	public void test0719() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0719"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList6 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.common.util.URI uRI7 = null;
		zentaDiagramModel0.eSetProxyURI(uRI7);
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eDirectResource();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI12 = null;
		zentaDiagramModel11.eSetProxyURI(uRI12);
		zentaDiagramModel11.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList16 = zentaDiagramModel11
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj17 = zentaDiagramModel0
					.eDynamicInvoke((byte) 10, adapterList16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNotNull(eObjectList6);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert.assertNotNull(adapterList16);
	}

	@Test
	public void test0720() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0720"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		zentaDiagramModel0.checkName("");
		boolean boolean8 = zentaDiagramModel0.isDeleted();
		zentaDiagramModel0.checkDocumentation("hi!");
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
	}

	@Test
	public void test0721() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0721"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.initId();
		int int15 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
	}

	@Test
	public void test0722() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0722"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList5 = zentaDiagramModel0
				.eContents();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel6 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.InternalEObject internalEObject7 = zentaDiagramModel0
				.eInternalContainer();
		java.lang.String str8 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean10 = zentaDiagramModel0
					.eDynamicIsSet(eStructuralFeature9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNotNull(eObjectList5);
		org.junit.Assert.assertNotNull(iDiagramModel6);
		org.junit.Assert.assertNull(internalEObject7);
		org.junit.Assert
				.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
	}

	@Test
	public void test0723() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0723"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList23 = zentaDiagramModel6
				.eContents();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean25 = zentaDiagramModel6.eDynamicIsSet('#');
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNotNull(eObjectList23);
	}

	@Test
	public void test0724() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0724"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		java.lang.String str17 = zentaDiagramModel12.getName();
		zentaDiagramModel12.checkId("");
		zentaDiagramModel12.setId("hi!");
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor22 = zentaDiagramModel12
				.eAllContents();
		boolean boolean23 = zentaDiagramModel12.isTemplate();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel12
				.getDiagramModel();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject26 = zentaDiagramModel12
					.eObjectForURIFragmentSegment("hi!");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'i!' is not a valid feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNotNull(eObjectItor22);
		org.junit.Assert.assertTrue(
				"'" + boolean23 + "' != '" + false + "'", boolean23 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel24);
	}

	@Test
	public void test0725() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0725"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		zentaDiagramModel0.setChecked(true);
		org.eclipse.emf.ecore.InternalEObject.EStore eStore5 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSetStore(eStore5);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
	}

	@Test
	public void test0726() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0726"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		int int5 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.EReference eReference6 = zentaDiagramModel0
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.getDiagramModel();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList8 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		int int12 = zentaDiagramModel9.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = zentaDiagramModel9
				.eInternalResource();
		java.lang.String str14 = zentaDiagramModel9.getDocumentation();
		boolean boolean15 = zentaDiagramModel9.isChecked();
		zentaDiagramModel9.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel18 = zentaDiagramModel9
				.getDiagramModel();
		zentaDiagramModel9.initId();
		org.eclipse.emf.ecore.resource.Resource.Internal internal20 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain21 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = zentaDiagramModel9
				.eSetResource(internal20, notificationChain21);
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel0
					.eInverseAdd(zentaDiagramModel9, 4, notificationChain24);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(eReference6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertNotNull(adapterList8);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
		org.junit.Assert.assertNull(internal13);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean15 + "' != '" + false + "'", boolean15 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel18);
		org.junit.Assert.assertNull(notificationChain22);
	}

	@Test
	public void test0727() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0727"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		zentaDiagramModel0.setConnectionRouterType((-1));
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList9 = zentaDiagramModel0
				.getChildren();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(uRI6);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList9);
	}

	@Test
	public void test0728() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0728"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		zentaDiagramModel0.setName("hi!");
		boolean boolean12 = zentaDiagramModel0.eIsProxy();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int14 = zentaDiagramModel0
					.eDerivedStructuralFeatureID(eStructuralFeature13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
	}

	@Test
	public void test0729() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0729"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel3.eClass();
		zentaDiagramModel0.eSetClass(eClass6);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		boolean boolean12 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel8, (short) 0, notificationChain14
				);
		boolean boolean16 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList17 = zentaDiagramModel8
				.getChildren();
		org.eclipse.emf.ecore.EReference eReference18 = zentaDiagramModel8
				.eContainmentFeature();
		boolean boolean19 = zentaDiagramModel8.hasDiagramReferences();
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertTrue(
				"'" + boolean16 + "' != '" + false + "'", boolean16 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList17);
		org.junit.Assert.assertNull(eReference18);
		org.junit.Assert.assertTrue(
				"'" + boolean19 + "' != '" + false + "'", boolean19 == false
		);
	}

	@Test
	public void test0730() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0730"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		boolean boolean6 = zentaDiagramModel0.eIsSet((short) 10);
		boolean boolean7 = zentaDiagramModel0.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList15 = zentaDiagramModel8
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass19 = zentaDiagramModel16.eClass();
		zentaDiagramModel8.eSetClass(eClass19);
		zentaDiagramModel0.eSetClass(eClass19);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel22 = zentaDiagramModel0
				.findDiagramModel();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject24 = zentaDiagramModel0
					.eObjectForURIFragmentSegment("");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + true + "'", boolean7 == true
		);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList15);
		org.junit.Assert.assertNotNull(eClass19);
		org.junit.Assert.assertNotNull(iDiagramModel22);
	}

	@Test
	public void test0731() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0731"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.resource.Resource resource33 = zentaDiagramModel22
				.eResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal34 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain35 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain36 = zentaDiagramModel22
				.eSetResource(internal34, notificationChain35);
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNull(resource33);
		org.junit.Assert.assertNull(notificationChain36);
	}

	@Test
	public void test0732() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0732"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel0.eSetProxyURI(uRI13);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.check();
			org.junit.Assert.fail(
					"Expected exception of type org.rulez.magwas.zenta.model.ModelConsistencyException; message: id cannot be null: org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel@3735502 (name: , id: null, lineWidth: 1, lineColor: null, documentation: hi!, connectionRouterType: 0) (viewpoint: 0)"
			);
		} catch (org.rulez.magwas.zenta.model.ModelConsistencyException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
	}

	@Test
	public void test0733() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0733"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		boolean boolean5 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel0.eClass();
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain8 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNotNull(eClass6);
	}

	@Test
	public void test0734() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0734"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.notify.Notification notification11 = null;
		zentaDiagramModel7.eNotify(notification11);
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, zentaDiagramModel15);
		java.lang.String str20 = zentaDiagramModel15.toString();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean22 = zentaDiagramModel15.eDynamicIsSet(4);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNull(eStore18);
	}

	@Test
	public void test0735() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0735"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.setChecked(false);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.check();
			org.junit.Assert.fail(
					"Expected exception of type org.rulez.magwas.zenta.model.ModelConsistencyException; message: id cannot be null: org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel@59e8285f (name: , id: null, lineWidth: 1, lineColor: null, documentation: hi!, connectionRouterType: 0) (viewpoint: 0)"
			);
		} catch (org.rulez.magwas.zenta.model.ModelConsistencyException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
	}

	@Test
	public void test0736() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0736"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor6 = zentaDiagramModel0
				.eAllContents();
		boolean boolean7 = zentaDiagramModel0.isTemplate();
		java.lang.Class<?> wildcardClass8 = zentaDiagramModel0.getClass();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(eObjectItor6);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + false + "'", boolean7 == false
		);
		org.junit.Assert.assertNotNull(wildcardClass8);
	}

	@Test
	public void test0737() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0737"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		boolean boolean3 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore4 = zentaDiagramModel0
				.eStore();
		zentaDiagramModel0.setName("hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean3 + "' != '" + false + "'", boolean3 == false
		);
		org.junit.Assert.assertNull(eStore4);
	}

	@Test
	public void test0738() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0738"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList5 = zentaDiagramModel0
				.eContents();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel6 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.setName("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj10 = zentaDiagramModel0.eVirtualUnset(0);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNotNull(eObjectList5);
		org.junit.Assert.assertNotNull(iDiagramModel6);
	}

	@Test
	public void test0739() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0739"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource3 = zentaDiagramModel0
				.eResource();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		org.eclipse.emf.ecore.EObject eObject6 = zentaDiagramModel0.getCopy();
		zentaDiagramModel0.checkId("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean10 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(resource3);
		org.junit.Assert.assertNotNull(eObject6);
	}

	@Test
	public void test0740() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0740"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		zentaDiagramModel0.checkDocumentation("hi!");
		boolean boolean6 = zentaDiagramModel0.eNotificationRequired();
		zentaDiagramModel0.setLineWidth((byte) 1);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj10 = zentaDiagramModel0.eVirtualUnset(97);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
	}

	@Test
	public void test0741() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0741"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		boolean boolean3 = zentaDiagramModel0.hasDiagramReferences();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset(eStructuralFeature4);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertTrue(
				"'" + boolean3 + "' != '" + false + "'", boolean3 == false
		);
	}

	@Test
	public void test0742() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0742"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EReference eReference8 = zentaDiagramModel0
				.eContainmentFeature();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean10 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertNull(eReference8);
	}

	@Test
	public void test0743() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0743"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.getDiagramModel();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eOpenUnset(eStructuralFeature8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
	}

	@Test
	public void test0744() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0744"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature11 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel15 = zentaDiagramModel12
				.findDiagramModel();
		java.lang.String str16 = zentaDiagramModel12.getId();
		zentaDiagramModel12.checkDocumentation("");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList19 = zentaDiagramModel12
				.eContents();
		zentaDiagramModel12.setConnectionRouterType((byte) 100);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel22 = zentaDiagramModel12
				.getDiagramModel();
		boolean boolean23 = zentaDiagramModel12.isChecked();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str24 = zentaDiagramModel0.eURIFragmentSegment(
					eStructuralFeature11, zentaDiagramModel12
			);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNull(eStructuralFeature9);
		org.junit.Assert.assertNull(eStructuralFeature10);
		org.junit.Assert.assertNotNull(iDiagramModel15);
		org.junit.Assert.assertNull(str16);
		org.junit.Assert.assertNotNull(eObjectList19);
		org.junit.Assert.assertNotNull(iDiagramModel22);
		org.junit.Assert.assertTrue(
				"'" + boolean23 + "' != '" + false + "'", boolean23 == false
		);
	}

	@Test
	public void test0745() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0745"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		boolean boolean5 = zentaDiagramModel0.eIsProxy();
		java.lang.String str6 = zentaDiagramModel0.getLineColor();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature7 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal12 = zentaDiagramModel8
				.eInternalResource();
		boolean boolean13 = zentaDiagramModel8.eIsProxy();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicSet(eStructuralFeature7, boolean13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert.assertNull(internal12);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
	}

	@Test
	public void test0746() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0746"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList5 = zentaDiagramModel0
				.eContents();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel6 = zentaDiagramModel0
				.findDiagramModel();
		java.lang.String str7 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
					.eBasicRemoveFromContainer(notificationChain8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNotNull(eObjectList5);
		org.junit.Assert.assertNotNull(iDiagramModel6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
	}

	@Test
	public void test0747() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0747"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.InternalEObject internalEObject6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eBasicSetContainer(internalEObject6, '#', notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eDirectResource();
		zentaDiagramModel0.setLineColor("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj16 = zentaDiagramModel0
					.eGet(eStructuralFeature13, true, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
	}

	@Test
	public void test0748() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0748"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean14 = zentaDiagramModel0.isDeleted();
		zentaDiagramModel0.checkName("");
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList17 = zentaDiagramModel0
				.getChildren();
		org.rulez.magwas.zenta.model.UndoState undoState18 = zentaDiagramModel0
				.delete();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList17);
	}

	@Test
	public void test0749() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0749"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList4 = zentaDiagramModel0
				.eAdapters();
		boolean boolean5 = zentaDiagramModel0.eDeliver();
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel0.eClass();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj9 = zentaDiagramModel0
					.eOpenGet(eStructuralFeature7, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNotNull(adapterList4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + true + "'", boolean5 == true
		);
		org.junit.Assert.assertNotNull(eClass6);
	}

	@Test
	public void test0750() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0750"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean14 = zentaDiagramModel0.isDeleted();
		zentaDiagramModel0.checkName("");
		org.eclipse.emf.ecore.InternalEObject internalEObject17 = zentaDiagramModel0
				.eInternalContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean19 = zentaDiagramModel0.eIsSet(eStructuralFeature18);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNull(internalEObject17);
	}

	@Test
	public void test0751() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0751"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		org.eclipse.emf.ecore.InternalEObject.EStore eStore17 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel12.eSetStore(eStore17);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
	}

	@Test
	public void test0752() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0752"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.notify.Notification notification11 = null;
		zentaDiagramModel7.eNotify(notification11);
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, zentaDiagramModel15);
		boolean boolean20 = zentaDiagramModel15.eDeliver();
		zentaDiagramModel15.setLineWidth('#');
		java.lang.Class<?> wildcardClass23 = zentaDiagramModel15.getClass();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNull(eStore18);
		org.junit.Assert.assertTrue(
				"'" + boolean20 + "' != '" + true + "'", boolean20 == true
		);
		org.junit.Assert.assertNotNull(wildcardClass23);
	}

	@Test
	public void test0753() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0753"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EOperation eOperation7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int8 = zentaDiagramModel0.eDerivedOperationID(eOperation7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
	}

	@Test
	public void test0754() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0754"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		int int12 = zentaDiagramModel0.eContainerFeatureID();
		boolean boolean13 = zentaDiagramModel0.eIsProxy();
		org.eclipse.emf.ecore.resource.Resource.Internal internal14 = zentaDiagramModel0
				.eDirectResource();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList15 = zentaDiagramModel0
				.getChildren();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
		org.junit.Assert.assertNull(internal14);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList15);
	}

	@Test
	public void test0755() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0755"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		zentaDiagramModel8.setLineColor("hi!");
		zentaDiagramModel8.setLineWidth('a');
		boolean boolean30 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature31 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel8.eOpenUnset(eStructuralFeature31);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertTrue(
				"'" + boolean30 + "' != '" + false + "'", boolean30 == false
		);
	}

	@Test
	public void test0756() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0756"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		java.lang.String str17 = zentaDiagramModel0.toString();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj20 = zentaDiagramModel0
					.eGet(eStructuralFeature18, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
	}

	@Test
	public void test0757() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0757"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel3.eClass();
		zentaDiagramModel0.eSetClass(eClass6);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		boolean boolean12 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel8, (short) 0, notificationChain14
				);
		boolean boolean16 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList17 = zentaDiagramModel8
				.getChildren();
		zentaDiagramModel8.setChecked(false);
		zentaDiagramModel8.checkName("hi!");
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertTrue(
				"'" + boolean16 + "' != '" + false + "'", boolean16 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList17);
	}

	@Test
	public void test0758() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0758"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource3 = zentaDiagramModel0
				.eResource();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.check();
			org.junit.Assert.fail(
					"Expected exception of type org.rulez.magwas.zenta.model.ModelConsistencyException; message: id cannot be null: org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel@bea320e (name: , id: null, lineWidth: 1, lineColor: null, documentation: hi!, connectionRouterType: 0) (viewpoint: 0)"
			);
		} catch (org.rulez.magwas.zenta.model.ModelConsistencyException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(resource3);
	}

	@Test
	public void test0759() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0759"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList5 = zentaDiagramModel0
				.eContents();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel6 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.setName("");
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor9 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset(eStructuralFeature10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNotNull(eObjectList5);
		org.junit.Assert.assertNotNull(iDiagramModel6);
		org.junit.Assert.assertNotNull(eObjectItor9);
	}

	@Test
	public void test0760() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0760"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel20 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel20.setDocumentation("hi!");
		int int23 = zentaDiagramModel20.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject24 = zentaDiagramModel13
				.eResolveProxy(zentaDiagramModel20);
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel20, '4', notificationChain26
				);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature28 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel20.eUnset(eStructuralFeature28);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
		org.junit.Assert.assertNotNull(eObject24);
		org.junit.Assert.assertNull(notificationChain27);
	}

	@Test
	public void test0761() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0761"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore16 = zentaDiagramModel13
				.eStore();
		org.eclipse.emf.common.notify.Notification notification17 = null;
		zentaDiagramModel13.eNotify(notification17);
		int int19 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel20 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel20.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel23 = zentaDiagramModel20
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass24 = zentaDiagramModel20.eClass();
		boolean boolean26 = zentaDiagramModel20.eIsSet((short) 10);
		boolean boolean27 = zentaDiagramModel20.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel28 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel28.setDocumentation("hi!");
		java.lang.Object obj32 = zentaDiagramModel28.getAdapter(0L);
		int int33 = zentaDiagramModel28.getLineWidth();
		java.lang.String str34 = zentaDiagramModel28.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList35 = zentaDiagramModel28
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel36 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel36.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass39 = zentaDiagramModel36.eClass();
		zentaDiagramModel28.eSetClass(eClass39);
		zentaDiagramModel20.eSetClass(eClass39);
		zentaDiagramModel13.eSetClass(eClass39);
		boolean boolean43 = zentaDiagramModel13.isChecked();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj44 = zentaDiagramModel0
					.eVirtualSet(10, zentaDiagramModel13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(eStore16);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel23);
		org.junit.Assert.assertNotNull(eClass24);
		org.junit.Assert.assertTrue(
				"'" + boolean26 + "' != '" + false + "'", boolean26 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + true + "'", boolean27 == true
		);
		org.junit.Assert.assertNull(obj32);
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
		org.junit.Assert.assertEquals(
				"'" + str34 + "' != '" + "hi!" + "'", str34, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList35);
		org.junit.Assert.assertNotNull(eClass39);
		org.junit.Assert.assertTrue(
				"'" + boolean43 + "' != '" + false + "'", boolean43 == false
		);
	}

	@Test
	public void test0762() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0762"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		int int5 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.EReference eReference6 = zentaDiagramModel0
				.eContainmentFeature();
		zentaDiagramModel0.setDocumentation("hi!");
		zentaDiagramModel0.setLineColor("");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		java.lang.Object obj15 = zentaDiagramModel11.getAdapter(0L);
		int int16 = zentaDiagramModel11.getLineWidth();
		java.lang.String str17 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = zentaDiagramModel11
				.eSetResource(internal18, notificationChain19);
		org.eclipse.emf.ecore.resource.Resource.Internal internal21 = zentaDiagramModel11
				.eInternalResource();
		zentaDiagramModel11.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel11
				.findDiagramModel();
		boolean boolean25 = zentaDiagramModel11.isDeleted();
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain28 = zentaDiagramModel0
					.eInverseAdd(zentaDiagramModel11, 'a', notificationChain27);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(eReference6);
		org.junit.Assert.assertNull(obj15);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
		org.junit.Assert.assertEquals(
				"'" + str17 + "' != '" + "hi!" + "'", str17, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain20);
		org.junit.Assert.assertNull(internal21);
		org.junit.Assert.assertNotNull(iDiagramModel24);
		org.junit.Assert.assertTrue(
				"'" + boolean25 + "' != '" + true + "'", boolean25 == true
		);
	}

	@Test
	public void test0763() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0763"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		java.lang.String str4 = zentaDiagramModel0.toString();
		zentaDiagramModel0.setId("hi!");
		org.junit.Assert.assertNotNull(iDiagramModel3);
	}

	@Test
	public void test0764() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0764"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("");
		int int15 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel0
				.eContainer();
		org.eclipse.emf.ecore.EObject eObject17 = zentaDiagramModel0.getCopy();
		org.rulez.magwas.zenta.model.IFolder iFolder18 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder19 = null;
		zentaDiagramModel0.move(iFolder18, iFolder19);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNull(eObject16);
		org.junit.Assert.assertNotNull(eObject17);
	}

	@Test
	public void test0765() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0765"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		java.lang.String str17 = zentaDiagramModel0.toString();
		java.lang.String str18 = zentaDiagramModel0.getName();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert
				.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
	}

	@Test
	public void test0766() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0766"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList6 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.common.util.URI uRI7 = null;
		zentaDiagramModel0.eSetProxyURI(uRI7);
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eDirectResource();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean11 = zentaDiagramModel0.eDynamicIsSet(100);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNotNull(eObjectList6);
		org.junit.Assert.assertNull(internal9);
	}

	@Test
	public void test0767() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0767"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.ecore.resource.Resource.Internal internal23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel0
				.eSetResource(internal23, notificationChain24);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature26 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel27 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel27.setDocumentation("hi!");
		int int30 = zentaDiagramModel27.eContainerFeatureID();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore31 = zentaDiagramModel27
				.eStore();
		boolean boolean32 = zentaDiagramModel27.hasDiagramReferences();
		zentaDiagramModel27.setDocumentation("");
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicSet(eStructuralFeature26, "");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNull(notificationChain25);
		org.junit.Assert
				.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
		org.junit.Assert.assertNull(eStore31);
		org.junit.Assert.assertTrue(
				"'" + boolean32 + "' != '" + false + "'", boolean32 == false
		);
	}

	@Test
	public void test0768() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0768"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.eContainerFeatureID();
		zentaDiagramModel0.setName("");
		// The following exception was thrown during execution in test
		// generation
		try {
// flaky:             zentaDiagramModel0.eUnset((int) '#');
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
	}

	@Test
	public void test0769() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0769"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.rulez.magwas.zenta.model.UndoState undoState33 = zentaDiagramModel13
				.prepareDelete();
		org.eclipse.emf.ecore.resource.Resource resource34 = zentaDiagramModel13
				.eResource();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject36 = zentaDiagramModel13
					.eObjectForURIFragmentSegment("");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNotNull(undoState33);
		org.junit.Assert.assertNull(resource34);
	}

	@Test
	public void test0770() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0770"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		int int9 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		java.lang.Object obj14 = zentaDiagramModel10.getAdapter(0L);
		int int15 = zentaDiagramModel10.getLineWidth();
		java.lang.String str16 = zentaDiagramModel10.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal17 = zentaDiagramModel10
				.eDirectResource();
		org.eclipse.emf.ecore.EObject eObject18 = zentaDiagramModel10
				.eContainer();
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain21 = zentaDiagramModel0
					.eInverseAdd(
							zentaDiagramModel10, (byte) 100, notificationChain20
					);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
		org.junit.Assert.assertNull(obj14);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
		org.junit.Assert.assertEquals(
				"'" + str16 + "' != '" + "hi!" + "'", str16, "hi!"
		);
		org.junit.Assert.assertNull(internal17);
		org.junit.Assert.assertNull(eObject18);
	}

	@Test
	public void test0771() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0771"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset(eStructuralFeature15);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
	}

	@Test
	public void test0772() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0772"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		boolean boolean4 = zentaDiagramModel0.eNotificationRequired();
		boolean boolean5 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.EObject eObject6 = zentaDiagramModel0.getCopy();
		boolean boolean7 = zentaDiagramModel0.eDeliver();
		boolean boolean8 = zentaDiagramModel0.isTemplate();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean4 + "' != '" + false + "'", boolean4 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNotNull(eObject6);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + true + "'", boolean7 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
	}

	@Test
	public void test0773() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0773"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		java.lang.String str4 = zentaDiagramModel0.getId();
		zentaDiagramModel0.checkDocumentation("");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList7 = zentaDiagramModel0
				.eContents();
		zentaDiagramModel0.setConnectionRouterType((byte) 100);
		org.eclipse.emf.common.notify.Notification notification10 = null;
		zentaDiagramModel0.eNotify(notification10);
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNull(str4);
		org.junit.Assert.assertNotNull(eObjectList7);
	}

	@Test
	public void test0774() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0774"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean8 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel12 = zentaDiagramModel9
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass13 = zentaDiagramModel9.eClass();
		boolean boolean15 = zentaDiagramModel9.eIsSet((short) 10);
		boolean boolean16 = zentaDiagramModel9.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel17 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel17.setDocumentation("hi!");
		java.lang.Object obj21 = zentaDiagramModel17.getAdapter(0L);
		int int22 = zentaDiagramModel17.getLineWidth();
		java.lang.String str23 = zentaDiagramModel17.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList24 = zentaDiagramModel17
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel25 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel25.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass28 = zentaDiagramModel25.eClass();
		zentaDiagramModel17.eSetClass(eClass28);
		zentaDiagramModel9.eSetClass(eClass28);
		zentaDiagramModel0.eSetClass(eClass28);
		org.eclipse.emf.common.notify.NotificationChain notificationChain32 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain33 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain32);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
		org.junit.Assert.assertNotNull(iDiagramModel12);
		org.junit.Assert.assertNotNull(eClass13);
		org.junit.Assert.assertTrue(
				"'" + boolean15 + "' != '" + false + "'", boolean15 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean16 + "' != '" + true + "'", boolean16 == true
		);
		org.junit.Assert.assertNull(obj21);
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
		org.junit.Assert.assertEquals(
				"'" + str23 + "' != '" + "hi!" + "'", str23, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList24);
		org.junit.Assert.assertNotNull(eClass28);
	}

	@Test
	public void test0775() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0775"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.eContainerFeatureID();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.delete();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
	}

	@Test
	public void test0776() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0776"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		java.lang.String str4 = zentaDiagramModel0.getId();
		zentaDiagramModel0.checkDocumentation("");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList7 = zentaDiagramModel0
				.eContents();
		zentaDiagramModel0.setConnectionRouterType((byte) 100);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel10 = zentaDiagramModel0
				.getDiagramModel();
		boolean boolean11 = zentaDiagramModel0.isChecked();
		boolean boolean12 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore13 = zentaDiagramModel0
				.eStore();
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNull(str4);
		org.junit.Assert.assertNotNull(eObjectList7);
		org.junit.Assert.assertNotNull(iDiagramModel10);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + false + "'", boolean11 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + true + "'", boolean12 == true
		);
		org.junit.Assert.assertNull(eStore13);
	}

	@Test
	public void test0777() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0777"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList4 = zentaDiagramModel0
				.eAdapters();
		java.lang.String str5 = zentaDiagramModel0.getId();
		org.eclipse.emf.ecore.EReference eReference6 = zentaDiagramModel0
				.eContainmentFeature();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNotNull(adapterList4);
		org.junit.Assert.assertNull(str5);
		org.junit.Assert.assertNull(eReference6);
		org.junit.Assert.assertNull(notificationChain9);
	}

	@Test
	public void test0778() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0778"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		zentaDiagramModel5.setLineWidth(0);
		zentaDiagramModel5.setLineColor("");
		zentaDiagramModel5.checkDocumentation("");
		java.lang.String str23 = zentaDiagramModel5.getDocumentation();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertEquals(
				"'" + str23 + "' != '" + "hi!" + "'", str23, "hi!"
		);
	}

	@Test
	public void test0779() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0779"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setId("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList13 = zentaDiagramModel0
				.eContents();
		zentaDiagramModel0.setConnectionRouterType(0);
		java.lang.String str16 = zentaDiagramModel0.toString();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(eObjectList13);
	}

	@Test
	public void test0780() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0780"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.hasDiagramReferences();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSetStore(eStore7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
	}

	@Test
	public void test0781() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0781"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel12.eSetProxyURI(uRI13);
		zentaDiagramModel12.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel12
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		java.lang.String str24 = zentaDiagramModel18.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel18
				.eSetResource(internal25, notificationChain26);
		java.lang.Object obj31 = zentaDiagramModel18.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel18.eNotify(notification32);
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel12
				.eResolveProxy(zentaDiagramModel18);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		int int44 = zentaDiagramModel35.getConnectionRouterType();
		zentaDiagramModel0.setAdapter(zentaDiagramModel18, zentaDiagramModel35);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel46 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel46.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass49 = zentaDiagramModel46.eClass();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList50 = zentaDiagramModel46
				.getProperties();
		java.lang.Object obj54 = zentaDiagramModel46
				.eGet((short) 1, false, true);
		boolean boolean55 = zentaDiagramModel35.eContains(zentaDiagramModel46);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature56 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj58 = zentaDiagramModel46
					.eDynamicGet(eStructuralFeature56, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertEquals(
				"'" + str24 + "' != '" + "hi!" + "'", str24, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
		org.junit.Assert.assertNotNull(eClass49);
		org.junit.Assert.assertNotNull(iPropertyList50);
		org.junit.Assert
				.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
		org.junit.Assert.assertTrue(
				"'" + boolean55 + "' != '" + false + "'", boolean55 == false
		);
	}

	@Test
	public void test0782() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0782"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		zentaDiagramModel5.eUnset((byte) 10);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList14 = zentaDiagramModel5
				.getProperties();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj17 = zentaDiagramModel5
					.eGet(eStructuralFeature15, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNotNull(iPropertyList14);
	}

	@Test
	public void test0783() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0783"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor3 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj6 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature4, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(eObjectItor3);
	}

	@Test
	public void test0784() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0784"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		zentaDiagramModel0.checkId("");
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject10 = zentaDiagramModel0
					.eObjectForURIFragmentSegment("hi!");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'i!' is not a valid feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
	}

	@Test
	public void test0785() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0785"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.UndoState undoState13 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel0
				.getDiagramModel();
		org.eclipse.emf.common.util.URI uRI15 = null;
		zentaDiagramModel0.eSetProxyURI(uRI15);
		boolean boolean17 = zentaDiagramModel0.isDeleted();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNotNull(undoState13);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + true + "'", boolean17 == true
		);
	}

	@Test
	public void test0786() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0786"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.UndoState undoState13 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel0
				.getDiagramModel();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature15);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNotNull(undoState13);
		org.junit.Assert.assertNotNull(iDiagramModel14);
	}

	@Test
	public void test0787() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0787"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.junit.Assert.assertNotNull(iDiagramModel3);
	}

	@Test
	public void test0788() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0788"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.resource.Resource resource33 = zentaDiagramModel22
				.eResource();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor34 = zentaDiagramModel22
				.eAllContents();
		zentaDiagramModel22.setName("");
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNull(resource33);
		org.junit.Assert.assertNotNull(eObjectItor34);
	}

	@Test
	public void test0789() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0789"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel0
				.getDiagramModel();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList10 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.ecore.resource.Resource.Internal internal11 = zentaDiagramModel0
				.eDirectResource();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel9);
		org.junit.Assert.assertNotNull(eObjectList10);
		org.junit.Assert.assertNull(internal11);
	}

	@Test
	public void test0790() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0790"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean8 = zentaDiagramModel0.eDeliver();
		zentaDiagramModel0.setConnectionRouterType(0);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore14 = zentaDiagramModel11
				.eStore();
		org.eclipse.emf.common.notify.Notification notification15 = null;
		zentaDiagramModel11.eNotify(notification15);
		int int17 = zentaDiagramModel11.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel18
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass22 = zentaDiagramModel18.eClass();
		boolean boolean24 = zentaDiagramModel18.eIsSet((short) 10);
		boolean boolean25 = zentaDiagramModel18.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		java.lang.Object obj30 = zentaDiagramModel26.getAdapter(0L);
		int int31 = zentaDiagramModel26.getLineWidth();
		java.lang.String str32 = zentaDiagramModel26.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList33 = zentaDiagramModel26
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel34 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel34.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass37 = zentaDiagramModel34.eClass();
		zentaDiagramModel26.eSetClass(eClass37);
		zentaDiagramModel18.eSetClass(eClass37);
		zentaDiagramModel11.eSetClass(eClass37);
		zentaDiagramModel0.eSetClass(eClass37);
		zentaDiagramModel0.checkDocumentation("");
		// The following exception was thrown during execution in test
		// generation
		try {
			org.rulez.magwas.zenta.model.IZentaModel iZentaModel44 = zentaDiagramModel0
					.getZentaModel();
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
		org.junit.Assert.assertNull(eStore14);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertNotNull(eClass22);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + false + "'", boolean24 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean25 + "' != '" + true + "'", boolean25 == true
		);
		org.junit.Assert.assertNull(obj30);
		org.junit.Assert
				.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
		org.junit.Assert.assertEquals(
				"'" + str32 + "' != '" + "hi!" + "'", str32, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList33);
		org.junit.Assert.assertNotNull(eClass37);
	}

	@Test
	public void test0791() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0791"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel26 = zentaDiagramModel8
				.findDiagramModel();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertNotNull(iDiagramModel26);
	}

	@Test
	public void test0792() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0792"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList10 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.common.notify.NotificationChain notificationChain11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain12 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(adapterList10);
	}

	@Test
	public void test0793() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0793"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		zentaDiagramModel0.checkId("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eOpenUnset(eStructuralFeature9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
	}

	@Test
	public void test0794() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0794"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setId("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.getDiagramModel();
		zentaDiagramModel0.eSetDeliver(false);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel16 = zentaDiagramModel0
				.getDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore21 = zentaDiagramModel18
				.eStore();
		org.eclipse.emf.common.notify.Notification notification22 = null;
		zentaDiagramModel18.eNotify(notification22);
		java.lang.String str24 = zentaDiagramModel18.getId();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicSet(10, zentaDiagramModel18);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'viewpoint' is not a valid changeable feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertNotNull(iDiagramModel16);
		org.junit.Assert.assertNull(eStore21);
		org.junit.Assert.assertNull(str24);
	}

	@Test
	public void test0795() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0795"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		java.lang.String str8 = zentaDiagramModel0.toString();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj11 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature9, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
	}

	@Test
	public void test0796() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0796"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		boolean boolean8 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		boolean boolean10 = zentaDiagramModel0.isDeleted();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(4);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + true + "'", boolean10 == true
		);
	}

	@Test
	public void test0797() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0797"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList6 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.common.util.URI uRI7 = null;
		zentaDiagramModel0.eSetProxyURI(uRI7);
		// The following exception was thrown during execution in test
		// generation
		try {
			org.rulez.magwas.zenta.model.IZentaModel iZentaModel9 = zentaDiagramModel0
					.getZentaModel();
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNotNull(eObjectList6);
	}

	@Test
	public void test0798() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0798"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel3.eClass();
		zentaDiagramModel0.eSetClass(eClass6);
		org.eclipse.emf.ecore.EOperation eOperation8 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		java.lang.Object obj13 = zentaDiagramModel9.getAdapter(0L);
		int int14 = zentaDiagramModel9.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList15 = zentaDiagramModel9
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj16 = zentaDiagramModel0
					.eInvoke(eOperation8, adapterList15);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert
				.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
		org.junit.Assert.assertNotNull(adapterList15);
	}

	@Test
	public void test0799() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0799"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		java.lang.Object obj9 = zentaDiagramModel5.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject10 = zentaDiagramModel5
				.eInternalContainer();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList11 = zentaDiagramModel5
				.eContents();
		java.lang.Object obj12 = zentaDiagramModel0.getAdapter(eObjectList11);
		java.lang.String str13 = zentaDiagramModel0.getDocumentation();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset((short) -1);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature ID-1 is not a valid feature ID"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(obj9);
		org.junit.Assert.assertNull(internalEObject10);
		org.junit.Assert.assertNotNull(eObjectList11);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert.assertEquals(
				"'" + str13 + "' != '" + "hi!" + "'", str13, "hi!"
		);
	}

	@Test
	public void test0800() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0800"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineColor("");
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.eDeliver();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList7 = zentaDiagramModel0
				.getProperties();
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + true + "'", boolean6 == true
		);
		org.junit.Assert.assertNotNull(iPropertyList7);
	}

	@Test
	public void test0801() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0801"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean14 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel0
				.eSetResource(internal15, notificationChain16);
		int int18 = zentaDiagramModel0.getViewpoint();
		int int19 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.EOperation eOperation20 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setDocumentation("hi!");
		java.lang.Object obj25 = zentaDiagramModel21.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject26 = zentaDiagramModel21
				.eInternalContainer();
		boolean boolean27 = zentaDiagramModel21.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor28 = zentaDiagramModel21
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel30 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel30.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore33 = zentaDiagramModel30
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList34 = zentaDiagramModel30
				.eAdapters();
		java.lang.Object obj35 = zentaDiagramModel21
				.eInvoke((short) 0, adapterList34);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj36 = zentaDiagramModel0
					.eInvoke(eOperation20, adapterList34);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
		org.junit.Assert.assertNull(obj25);
		org.junit.Assert.assertNull(internalEObject26);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + false + "'", boolean27 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor28);
		org.junit.Assert.assertNull(eStore33);
		org.junit.Assert.assertNotNull(adapterList34);
		org.junit.Assert.assertNotNull(obj35);
	}

	@Test
	public void test0802() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0802"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList11 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.common.util.URI uRI12 = null;
		zentaDiagramModel0.eSetProxyURI(uRI12);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj15 = zentaDiagramModel0.eVirtualUnset('a');
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(eObjectList11);
	}

	@Test
	public void test0803() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0803"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		java.lang.String str14 = zentaDiagramModel5.getName();
		zentaDiagramModel5.setDocumentation("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel17 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel17.setDocumentation("hi!");
		java.lang.Object obj21 = zentaDiagramModel17.getAdapter(0L);
		int int22 = zentaDiagramModel17.getLineWidth();
		java.lang.String str23 = zentaDiagramModel17.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = zentaDiagramModel17
				.eSetResource(internal24, notificationChain25);
		org.rulez.magwas.zenta.model.UndoState undoState27 = zentaDiagramModel17
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel28 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel28.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel28
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass32 = zentaDiagramModel28.eClass();
		zentaDiagramModel17.eSetClass(eClass32);
		zentaDiagramModel5.eSetClass(eClass32);
		zentaDiagramModel5.setLineWidth(97);
		zentaDiagramModel5.setChecked(false);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj42 = null; // flaky:
											// zentaDiagramModel5.eGet((int)
											// (short) -1, false, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert
				.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
		org.junit.Assert.assertNull(obj21);
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
		org.junit.Assert.assertEquals(
				"'" + str23 + "' != '" + "hi!" + "'", str23, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain26);
		org.junit.Assert.assertNotNull(undoState27);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNotNull(eClass32);
	}

	@Test
	public void test0804() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0804"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList4 = zentaDiagramModel0
				.eAdapters();
		boolean boolean5 = zentaDiagramModel0.isTemplate();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		java.lang.Object obj17 = zentaDiagramModel13.getAdapter(0L);
		int int18 = zentaDiagramModel13.getLineWidth();
		java.lang.String str19 = zentaDiagramModel13.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList20 = zentaDiagramModel13
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass24 = zentaDiagramModel21.eClass();
		zentaDiagramModel13.eSetClass(eClass24);
		zentaDiagramModel6.eSetClass(eClass24);
		zentaDiagramModel0.eSetClass(eClass24);
		int int28 = zentaDiagramModel0.getViewpoint();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNotNull(adapterList4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(obj17);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
		org.junit.Assert.assertEquals(
				"'" + str19 + "' != '" + "hi!" + "'", str19, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList20);
		org.junit.Assert.assertNotNull(eClass24);
		org.junit.Assert
				.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
	}

	@Test
	public void test0805() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0805"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.initId();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = zentaDiagramModel0
				.eContainingFeature();
		java.lang.String str16 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.UndoState undoState17 = zentaDiagramModel0
				.delete();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertNull(eStructuralFeature15);
		org.junit.Assert.assertEquals(
				"'" + str16 + "' != '" + "hi!" + "'", str16, "hi!"
		);
	}

	@Test
	public void test0806() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0806"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.notify.Notification notification13 = null;
		zentaDiagramModel9.eNotify(notification13);
		zentaDiagramModel9.setName("hi!");
		int int17 = zentaDiagramModel9.getViewpoint();
		zentaDiagramModel9.setName("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList20 = zentaDiagramModel9
				.eContents();
		org.eclipse.emf.common.util.URI uRI21 = null;
		zentaDiagramModel9.eSetProxyURI(uRI21);
		int int23 = zentaDiagramModel9.eContainerFeatureID();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList24 = zentaDiagramModel9
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj25 = zentaDiagramModel0
					.eInvoke(97, adapterList24);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert.assertNotNull(eObjectList20);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
		org.junit.Assert.assertNotNull(adapterList24);
	}

	@Test
	public void test0807() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0807"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = zentaDiagramModel0
				.eDirectResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList9 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset(eStructuralFeature10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(internal7);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert.assertNotNull(eObjectList9);
	}

	@Test
	public void test0808() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0808"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		java.lang.String str8 = zentaDiagramModel0.toString();
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain10 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
	}

	@Test
	public void test0809() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0809"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor6 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean8 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(eObjectItor6);
	}

	@Test
	public void test0810() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0810"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean8 = zentaDiagramModel0.isDeleted();
		boolean boolean9 = zentaDiagramModel0.isTemplate();
		zentaDiagramModel0.checkDocumentation("");
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList12 = zentaDiagramModel0
					.eCrossReferences();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean9 + "' != '" + false + "'", boolean9 == false
		);
	}

	@Test
	public void test0811() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0811"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		int int17 = zentaDiagramModel12.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore21 = zentaDiagramModel18
				.eStore();
		org.eclipse.emf.common.notify.Notification notification22 = null;
		zentaDiagramModel18.eNotify(notification22);
		int int24 = zentaDiagramModel18.getViewpoint();
		int int25 = zentaDiagramModel18.eContainerFeatureID();
		java.lang.Object obj26 = zentaDiagramModel12
				.getAdapter(zentaDiagramModel18);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature27 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj30 = zentaDiagramModel18
					.eGet(eStructuralFeature27, true, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert.assertNull(eStore21);
		org.junit.Assert
				.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(obj26);
	}

	@Test
	public void test0812() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0812"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = zentaDiagramModel0
				.eDirectResource();
		org.rulez.magwas.zenta.model.UndoState undoState8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.rulez.magwas.zenta.model.UndoState undoState9 = zentaDiagramModel0
					.delete(undoState8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(internal7);
	}

	@Test
	public void test0813() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0813"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore4 = zentaDiagramModel0
				.eStore();
		zentaDiagramModel0.eSetDeliver(true);
		boolean boolean7 = zentaDiagramModel0.hasDiagramReferences();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel8 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean9 = zentaDiagramModel0.eIsProxy();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStore4);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + false + "'", boolean7 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel8);
		org.junit.Assert.assertTrue(
				"'" + boolean9 + "' != '" + false + "'", boolean9 == false
		);
	}

	@Test
	public void test0814() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0814"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("");
		int int15 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel0
				.eContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature17 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel18
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass22 = zentaDiagramModel18.eClass();
		boolean boolean24 = zentaDiagramModel18.eIsSet((short) 10);
		boolean boolean25 = zentaDiagramModel18.eDeliver();
		org.eclipse.emf.ecore.InternalEObject internalEObject26 = zentaDiagramModel18
				.eInternalContainer();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str27 = zentaDiagramModel0.eURIFragmentSegment(
					eStructuralFeature17, internalEObject26
			);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNull(eObject16);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertNotNull(eClass22);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + false + "'", boolean24 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean25 + "' != '" + true + "'", boolean25 == true
		);
		org.junit.Assert.assertNull(internalEObject26);
	}

	@Test
	public void test0815() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0815"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor7 = zentaDiagramModel0
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel9
				.eAdapters();
		java.lang.Object obj14 = zentaDiagramModel0
				.eInvoke((short) 0, adapterList13);
		org.eclipse.emf.common.notify.Notification notification15 = null;
		zentaDiagramModel0.eNotify(notification15);
		boolean boolean18 = zentaDiagramModel0.eIsSet((byte) 1);
		org.eclipse.emf.ecore.InternalEObject internalEObject19 = zentaDiagramModel0
				.eInternalContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setDocumentation("hi!");
		java.lang.Object obj25 = zentaDiagramModel21.getAdapter(0L);
		int int26 = zentaDiagramModel21.getLineWidth();
		java.lang.String str27 = zentaDiagramModel21.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList28 = zentaDiagramModel21
				.getChildren();
		zentaDiagramModel21.setId("hi!");
		int int31 = zentaDiagramModel21.getViewpoint();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel32 = zentaDiagramModel21
				.findDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel33 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel33.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource36 = zentaDiagramModel33
				.eResource();
		org.eclipse.emf.ecore.EObject eObject37 = zentaDiagramModel33
				.eContainer();
		org.eclipse.emf.ecore.InternalEObject internalEObject38 = zentaDiagramModel33
				.eInternalContainer();
		org.eclipse.emf.common.notify.NotificationChain notificationChain40 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain41 = zentaDiagramModel21
				.eBasicSetContainer(
						zentaDiagramModel33, '#', notificationChain40
				);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList42 = zentaDiagramModel21
				.getProperties();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj43 = zentaDiagramModel0
					.eVirtualSet(' ', zentaDiagramModel21);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor7);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert.assertNotNull(adapterList13);
		org.junit.Assert.assertNotNull(obj14);
		org.junit.Assert.assertTrue(
				"'" + boolean18 + "' != '" + false + "'", boolean18 == false
		);
		org.junit.Assert.assertNull(internalEObject19);
		org.junit.Assert.assertNull(obj25);
		org.junit.Assert
				.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList28);
		org.junit.Assert
				.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel32);
		org.junit.Assert.assertNull(resource36);
		org.junit.Assert.assertNull(eObject37);
		org.junit.Assert.assertNull(internalEObject38);
		org.junit.Assert.assertNull(notificationChain41);
		org.junit.Assert.assertNotNull(iPropertyList42);
	}

	@Test
	public void test0816() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0816"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList6 = zentaDiagramModel0
				.eAdapters();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EReference eReference8 = zentaDiagramModel0
				.eContainmentFeature();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.ecore.resource.Resource resource10 = zentaDiagramModel0
				.eResource();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.check();
			org.junit.Assert.fail(
					"Expected exception of type org.rulez.magwas.zenta.model.ModelConsistencyException; message: id cannot be null: org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel@24d2c4f2 (name: , id: null, lineWidth: 1, lineColor: null, documentation: hi!, connectionRouterType: 0) (viewpoint: 0)"
			);
		} catch (org.rulez.magwas.zenta.model.ModelConsistencyException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(adapterList6);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(eReference8);
		org.junit.Assert.assertNull(eStructuralFeature9);
		org.junit.Assert.assertNull(resource10);
	}

	@Test
	public void test0817() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0817"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		boolean boolean6 = zentaDiagramModel0.eIsSet((short) 10);
		boolean boolean7 = zentaDiagramModel0.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList15 = zentaDiagramModel8
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass19 = zentaDiagramModel16.eClass();
		zentaDiagramModel8.eSetClass(eClass19);
		zentaDiagramModel0.eSetClass(eClass19);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel22 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel24 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI25 = null;
		zentaDiagramModel24.eSetProxyURI(uRI25);
		zentaDiagramModel24.setLineWidth((short) -1);
		org.eclipse.emf.ecore.EObject eObject29 = zentaDiagramModel24
				.eContainer();
		java.lang.String str30 = zentaDiagramModel24.toString();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0
					.eOpenSet(eStructuralFeature23, zentaDiagramModel24);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + true + "'", boolean7 == true
		);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList15);
		org.junit.Assert.assertNotNull(eClass19);
		org.junit.Assert.assertNotNull(iDiagramModel22);
		org.junit.Assert.assertNull(eObject29);
	}

	@Test
	public void test0818() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0818"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.Object obj12 = null;
		java.lang.Object obj13 = zentaDiagramModel0.getAdapter(obj12);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset((short) 0);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(obj13);
	}

	@Test
	public void test0819() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0819"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.ecore.InternalEObject internalEObject7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain10 = zentaDiagramModel0
				.eBasicSetContainer(
						internalEObject7, (short) 1, notificationChain9
				);
		int int11 = zentaDiagramModel0.getLineWidth();
		org.rulez.magwas.zenta.model.IFolder iFolder12 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder13 = null;
		zentaDiagramModel0.move(iFolder12, iFolder13);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNull(notificationChain10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
	}

	@Test
	public void test0820() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0820"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setDocumentation("hi!");
		java.lang.Object obj7 = zentaDiagramModel3.getAdapter(0L);
		int int8 = zentaDiagramModel3.getLineWidth();
		java.lang.String str9 = zentaDiagramModel3.getId();
		java.lang.String str10 = zentaDiagramModel3.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		java.lang.Object obj15 = zentaDiagramModel11.getAdapter(0L);
		int int16 = zentaDiagramModel11.getLineWidth();
		java.lang.String str17 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = zentaDiagramModel11
				.eSetResource(internal18, notificationChain19);
		org.eclipse.emf.ecore.resource.Resource.Internal internal21 = zentaDiagramModel11
				.eInternalResource();
		zentaDiagramModel11.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel11
				.findDiagramModel();
		java.lang.String str25 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature26 = zentaDiagramModel11
				.eContainingFeature();
		boolean boolean27 = zentaDiagramModel11.isDeleted();
		org.eclipse.emf.ecore.EObject eObject28 = zentaDiagramModel3
				.eResolveProxy(zentaDiagramModel11);
		zentaDiagramModel11.setLineColor("hi!");
		org.eclipse.emf.ecore.EObject eObject31 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel11);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel32 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.checkDocumentation("");
		boolean boolean35 = zentaDiagramModel0.isDeleted();
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertNull(obj7);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
		org.junit.Assert.assertNull(str9);
		org.junit.Assert.assertEquals(
				"'" + str10 + "' != '" + "hi!" + "'", str10, "hi!"
		);
		org.junit.Assert.assertNull(obj15);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
		org.junit.Assert.assertEquals(
				"'" + str17 + "' != '" + "hi!" + "'", str17, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain20);
		org.junit.Assert.assertNull(internal21);
		org.junit.Assert.assertNotNull(iDiagramModel24);
		org.junit.Assert.assertEquals(
				"'" + str25 + "' != '" + "hi!" + "'", str25, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature26);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + true + "'", boolean27 == true
		);
		org.junit.Assert.assertNotNull(eObject28);
		org.junit.Assert.assertNotNull(eObject31);
		org.junit.Assert.assertNotNull(iDiagramModel32);
		org.junit.Assert.assertTrue(
				"'" + boolean35 + "' != '" + true + "'", boolean35 == true
		);
	}

	@Test
	public void test0821() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0821"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.rulez.magwas.zenta.model.UndoState undoState33 = zentaDiagramModel13
				.prepareDelete();
		org.eclipse.emf.ecore.resource.Resource resource34 = zentaDiagramModel13
				.eResource();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel36 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel36.setDocumentation("hi!");
		int int39 = zentaDiagramModel36.eContainerFeatureID();
		boolean boolean40 = zentaDiagramModel36.eNotificationRequired();
		boolean boolean41 = zentaDiagramModel36.isChecked();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel43 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel43.setDocumentation("hi!");
		int int46 = zentaDiagramModel43.eContainerFeatureID();
		java.lang.String str47 = zentaDiagramModel43.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList48 = zentaDiagramModel43
				.eContents();
		int int49 = zentaDiagramModel43.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel50 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel50.setDocumentation("hi!");
		java.lang.Object obj54 = zentaDiagramModel50.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject55 = zentaDiagramModel50
				.eInternalContainer();
		boolean boolean56 = zentaDiagramModel50.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor57 = zentaDiagramModel50
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel59 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel59.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore62 = zentaDiagramModel59
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList63 = zentaDiagramModel59
				.eAdapters();
		java.lang.Object obj64 = zentaDiagramModel50
				.eInvoke((short) 0, adapterList63);
		java.lang.Object obj65 = zentaDiagramModel43.getAdapter(adapterList63);
		java.lang.Object obj66 = zentaDiagramModel36
				.eInvoke((short) 1, adapterList63);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj67 = zentaDiagramModel13
					.eInvoke((byte) -1, adapterList63);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNotNull(undoState33);
		org.junit.Assert.assertNull(resource34);
		org.junit.Assert
				.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean40 + "' != '" + false + "'", boolean40 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
		org.junit.Assert
				.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
		org.junit.Assert.assertNotNull(eObjectList48);
		org.junit.Assert
				.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
		org.junit.Assert.assertNull(obj54);
		org.junit.Assert.assertNull(internalEObject55);
		org.junit.Assert.assertTrue(
				"'" + boolean56 + "' != '" + false + "'", boolean56 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor57);
		org.junit.Assert.assertNull(eStore62);
		org.junit.Assert.assertNotNull(adapterList63);
		org.junit.Assert.assertNotNull(obj64);
		org.junit.Assert.assertNull(obj65);
		org.junit.Assert.assertEquals(
				"'" + obj66 + "' != '" + false + "'", obj66, false
		);
	}

	@Test
	public void test0822() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0822"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.hasDiagramReferences();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass10 = zentaDiagramModel7.eClass();
		boolean boolean11 = zentaDiagramModel7.eDeliver();
		boolean boolean12 = zentaDiagramModel0.eContains(zentaDiagramModel7);
		org.eclipse.emf.ecore.EObject eObject13 = zentaDiagramModel0
				.eContainer();
		zentaDiagramModel0.setChecked(true);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature16 = zentaDiagramModel0
				.eContainingFeature();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eClass10);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNull(eObject13);
		org.junit.Assert.assertNull(eStructuralFeature16);
	}

	@Test
	public void test0823() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0823"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource9 = zentaDiagramModel6
				.eResource();
		org.eclipse.emf.ecore.EObject eObject10 = zentaDiagramModel6
				.eContainer();
		org.eclipse.emf.ecore.EObject eObject11 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		java.lang.Object obj17 = zentaDiagramModel13.getAdapter(0L);
		int int18 = zentaDiagramModel13.getLineWidth();
		java.lang.String str19 = zentaDiagramModel13.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal20 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain21 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = zentaDiagramModel13
				.eSetResource(internal20, notificationChain21);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList23 = zentaDiagramModel13
				.eAdapters();
		zentaDiagramModel13.setLineWidth(10);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicSet(1, 10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'name' is not a valid changeable feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertNull(resource9);
		org.junit.Assert.assertNull(eObject10);
		org.junit.Assert.assertNotNull(eObject11);
		org.junit.Assert.assertNull(obj17);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
		org.junit.Assert.assertEquals(
				"'" + str19 + "' != '" + "hi!" + "'", str19, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain22);
		org.junit.Assert.assertNotNull(adapterList23);
	}

	@Test
	public void test0824() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0824"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.URI uRI4 = null;
		zentaDiagramModel0.eSetProxyURI(uRI4);
		zentaDiagramModel0.checkDocumentation("");
		zentaDiagramModel0.setChecked(true);
		zentaDiagramModel0.setChecked(false);
		org.junit.Assert.assertNull(eStore3);
	}

	@Test
	public void test0825() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0825"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		zentaDiagramModel8.setLineColor("hi!");
		java.lang.Class<?> wildcardClass28 = zentaDiagramModel8.getClass();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertNotNull(wildcardClass28);
	}

	@Test
	public void test0826() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0826"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList4 = zentaDiagramModel0
				.eAdapters();
		boolean boolean5 = zentaDiagramModel0.eDeliver();
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel0.eClass();
		org.eclipse.emf.ecore.resource.Resource resource7 = zentaDiagramModel0
				.eResource();
		zentaDiagramModel0.setDocumentation("");
		org.eclipse.emf.ecore.InternalEObject internalEObject10 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain12 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain13 = zentaDiagramModel0
					.eInverseAdd(
							internalEObject10, (byte) 1, notificationChain12
					);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNotNull(adapterList4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + true + "'", boolean5 == true
		);
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert.assertNull(resource7);
	}

	@Test
	public void test0827() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0827"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature6 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj7 = zentaDiagramModel0
					.eGet(eStructuralFeature6);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
	}

	@Test
	public void test0828() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0828"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		int int12 = zentaDiagramModel0.eContainerFeatureID();
		boolean boolean13 = zentaDiagramModel0.eIsProxy();
		java.lang.String str14 = zentaDiagramModel0.getName();
		zentaDiagramModel0.setChecked(false);
		org.eclipse.emf.ecore.EObject eObject17 = zentaDiagramModel0.getCopy();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
		org.junit.Assert
				.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
		org.junit.Assert.assertNotNull(eObject17);
	}

	@Test
	public void test0829() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0829"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.getDiagramModel();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj9 = zentaDiagramModel0.eVirtualGet((short) 1);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
	}

	@Test
	public void test0830() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0830"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = zentaDiagramModel0
				.eInternalResource();
		boolean boolean6 = zentaDiagramModel0.isTemplate();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eOpenUnset(eStructuralFeature7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(internal5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
	}

	@Test
	public void test0831() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0831"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel12 = zentaDiagramModel0
				.findDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		int int17 = zentaDiagramModel14.eContainerFeatureID();
		java.lang.String str18 = zentaDiagramModel14.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		int int22 = zentaDiagramModel19.eContainerFeatureID();
		java.lang.String str23 = zentaDiagramModel19.getName();
		zentaDiagramModel14.setAdapter(zentaDiagramModel19, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject30 = zentaDiagramModel19
				.eResolveProxy(zentaDiagramModel26);
		org.eclipse.emf.common.util.URI uRI31 = null;
		zentaDiagramModel19.eSetProxyURI(uRI31);
		zentaDiagramModel0.eSet((short) 1, uRI31);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList34 = zentaDiagramModel0
				.eContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		java.lang.String str39 = zentaDiagramModel35.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel40 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel40.setDocumentation("hi!");
		int int43 = zentaDiagramModel40.eContainerFeatureID();
		java.lang.String str44 = zentaDiagramModel40.getName();
		zentaDiagramModel35.setAdapter(zentaDiagramModel40, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel47 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel47.setDocumentation("hi!");
		int int50 = zentaDiagramModel47.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject51 = zentaDiagramModel40
				.eResolveProxy(zentaDiagramModel47);
		zentaDiagramModel40.setLineWidth(0);
		zentaDiagramModel40.setLineColor("");
		boolean boolean56 = zentaDiagramModel40.hasDiagramReferences();
		java.lang.String str57 = zentaDiagramModel40.getName();
		org.eclipse.emf.ecore.EClass eClass58 = zentaDiagramModel40.eClass();
		zentaDiagramModel0.eSetClass(eClass58);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(iDiagramModel12);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
		org.junit.Assert
				.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNotNull(eObject30);
		org.junit.Assert.assertNotNull(eObjectList34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert
				.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
		org.junit.Assert
				.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
		org.junit.Assert
				.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
		org.junit.Assert
				.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
		org.junit.Assert.assertNotNull(eObject51);
		org.junit.Assert.assertTrue(
				"'" + boolean56 + "' != '" + false + "'", boolean56 == false
		);
		org.junit.Assert
				.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
		org.junit.Assert.assertNotNull(eClass58);
	}

	@Test
	public void test0832() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0832"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setLineColor("hi!");
		boolean boolean8 = zentaDiagramModel0.isDeleted();
		zentaDiagramModel0.setDocumentation("");
		org.rulez.magwas.zenta.model.UndoState undoState11 = zentaDiagramModel0
				.prepareDelete();
		java.lang.String str12 = zentaDiagramModel0.getDocumentation();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
		org.junit.Assert.assertNotNull(undoState11);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
	}

	@Test
	public void test0833() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0833"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor12 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = zentaDiagramModel0
				.eInternalResource();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + false + "'", boolean11 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor12);
		org.junit.Assert.assertNull(internal13);
	}

	@Test
	public void test0834() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0834"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		int int9 = zentaDiagramModel0.getConnectionRouterType();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject11 = zentaDiagramModel0
					.eObjectForURIFragmentSegment("");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
	}

	@Test
	public void test0835() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0835"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		boolean boolean4 = zentaDiagramModel0.eNotificationRequired();
		boolean boolean5 = zentaDiagramModel0.isChecked();
		java.lang.String str6 = zentaDiagramModel0.toString();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal16 = zentaDiagramModel12
				.eInternalResource();
		java.lang.String str17 = zentaDiagramModel12.getDocumentation();
		boolean boolean18 = zentaDiagramModel8.eContains(zentaDiagramModel12);
		boolean boolean19 = zentaDiagramModel8.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel20 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI21 = null;
		zentaDiagramModel20.eSetProxyURI(uRI21);
		zentaDiagramModel20.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList25 = zentaDiagramModel20
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		java.lang.Object obj30 = zentaDiagramModel26.getAdapter(0L);
		int int31 = zentaDiagramModel26.getLineWidth();
		java.lang.String str32 = zentaDiagramModel26.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal33 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain34 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain35 = zentaDiagramModel26
				.eSetResource(internal33, notificationChain34);
		java.lang.Object obj39 = zentaDiagramModel26.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification40 = null;
		zentaDiagramModel26.eNotify(notification40);
		org.eclipse.emf.ecore.EObject eObject42 = zentaDiagramModel20
				.eResolveProxy(zentaDiagramModel26);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel43 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel43.setDocumentation("hi!");
		int int46 = zentaDiagramModel43.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal47 = zentaDiagramModel43
				.eInternalResource();
		java.lang.String str48 = zentaDiagramModel43.getDocumentation();
		boolean boolean49 = zentaDiagramModel43.isChecked();
		zentaDiagramModel43.setName("hi!");
		int int52 = zentaDiagramModel43.getConnectionRouterType();
		zentaDiagramModel8.setAdapter(zentaDiagramModel26, zentaDiagramModel43);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj54 = zentaDiagramModel0
					.eVirtualSet((byte) 100, zentaDiagramModel8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean4 + "' != '" + false + "'", boolean4 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNull(internal16);
		org.junit.Assert.assertEquals(
				"'" + str17 + "' != '" + "hi!" + "'", str17, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean18 + "' != '" + false + "'", boolean18 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean19 + "' != '" + true + "'", boolean19 == true
		);
		org.junit.Assert.assertNotNull(adapterList25);
		org.junit.Assert.assertNull(obj30);
		org.junit.Assert
				.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
		org.junit.Assert.assertEquals(
				"'" + str32 + "' != '" + "hi!" + "'", str32, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain35);
		org.junit.Assert.assertNull(obj39);
		org.junit.Assert.assertNotNull(eObject42);
		org.junit.Assert
				.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
		org.junit.Assert.assertNull(internal47);
		org.junit.Assert.assertEquals(
				"'" + str48 + "' != '" + "hi!" + "'", str48, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean49 + "' != '" + false + "'", boolean49 == false
		);
		org.junit.Assert
				.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
	}

	@Test
	public void test0836() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0836"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		boolean boolean5 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel0.eClass();
		zentaDiagramModel0.setName("");
		int int9 = zentaDiagramModel0.eContainerFeatureID();
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
	}

	@Test
	public void test0837() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0837"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.common.util.URI uRI12 = null;
		zentaDiagramModel0.eSetProxyURI(uRI12);
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel0
					.eBasicRemoveFromContainer(notificationChain14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + false + "'", boolean11 == false
		);
	}

	@Test
	public void test0838() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0838"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel12.eSetProxyURI(uRI13);
		zentaDiagramModel12.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel12
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		java.lang.String str24 = zentaDiagramModel18.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel18
				.eSetResource(internal25, notificationChain26);
		java.lang.Object obj31 = zentaDiagramModel18.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel18.eNotify(notification32);
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel12
				.eResolveProxy(zentaDiagramModel18);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		int int44 = zentaDiagramModel35.getConnectionRouterType();
		zentaDiagramModel0.setAdapter(zentaDiagramModel18, zentaDiagramModel35);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel46 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel46.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass49 = zentaDiagramModel46.eClass();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList50 = zentaDiagramModel46
				.getProperties();
		java.lang.Object obj54 = zentaDiagramModel46
				.eGet((short) 1, false, true);
		boolean boolean55 = zentaDiagramModel35.eContains(zentaDiagramModel46);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel56 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel56.setDocumentation("hi!");
		int int59 = zentaDiagramModel56.eContainerFeatureID();
		java.lang.String str60 = zentaDiagramModel56.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList61 = zentaDiagramModel56
				.eContents();
		org.eclipse.emf.ecore.EClass eClass62 = zentaDiagramModel56.eClass();
		org.eclipse.emf.common.notify.NotificationChain notificationChain64 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain65 = zentaDiagramModel46
					.eInverseRemove(zentaDiagramModel56, 52, notificationChain64);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertEquals(
				"'" + str24 + "' != '" + "hi!" + "'", str24, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
		org.junit.Assert.assertNotNull(eClass49);
		org.junit.Assert.assertNotNull(iPropertyList50);
		org.junit.Assert
				.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
		org.junit.Assert.assertTrue(
				"'" + boolean55 + "' != '" + false + "'", boolean55 == false
		);
		org.junit.Assert
				.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
		org.junit.Assert
				.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
		org.junit.Assert.assertNotNull(eObjectList61);
		org.junit.Assert.assertNotNull(eClass62);
	}

	@Test
	public void test0839() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0839"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.notify.Notification notification11 = null;
		zentaDiagramModel7.eNotify(notification11);
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, zentaDiagramModel15);
		zentaDiagramModel0.setId("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature22 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature22);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNull(eStore18);
	}

	@Test
	public void test0840() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0840"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EReference eReference12 = zentaDiagramModel0
				.eContainmentFeature();
		int int13 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList14 = zentaDiagramModel0
				.getChildren();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNull(eReference12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList14);
	}

	@Test
	public void test0841() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0841"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.notify.Notification notification11 = null;
		zentaDiagramModel7.eNotify(notification11);
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, zentaDiagramModel15);
		java.lang.String str20 = zentaDiagramModel7.getId();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean22 = zentaDiagramModel7.eIsSet(eStructuralFeature21);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNull(eStore18);
		org.junit.Assert.assertNull(str20);
	}

	@Test
	public void test0842() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0842"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setDocumentation("hi!");
		java.lang.Object obj7 = zentaDiagramModel3.getAdapter(0L);
		int int8 = zentaDiagramModel3.getLineWidth();
		java.lang.String str9 = zentaDiagramModel3.getId();
		java.lang.String str10 = zentaDiagramModel3.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		java.lang.Object obj15 = zentaDiagramModel11.getAdapter(0L);
		int int16 = zentaDiagramModel11.getLineWidth();
		java.lang.String str17 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = zentaDiagramModel11
				.eSetResource(internal18, notificationChain19);
		org.eclipse.emf.ecore.resource.Resource.Internal internal21 = zentaDiagramModel11
				.eInternalResource();
		zentaDiagramModel11.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel11
				.findDiagramModel();
		java.lang.String str25 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature26 = zentaDiagramModel11
				.eContainingFeature();
		boolean boolean27 = zentaDiagramModel11.isDeleted();
		org.eclipse.emf.ecore.EObject eObject28 = zentaDiagramModel3
				.eResolveProxy(zentaDiagramModel11);
		zentaDiagramModel11.setLineColor("hi!");
		org.eclipse.emf.ecore.EObject eObject31 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel11);
		org.eclipse.emf.common.notify.NotificationChain notificationChain32 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain33 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain32);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertNull(obj7);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
		org.junit.Assert.assertNull(str9);
		org.junit.Assert.assertEquals(
				"'" + str10 + "' != '" + "hi!" + "'", str10, "hi!"
		);
		org.junit.Assert.assertNull(obj15);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
		org.junit.Assert.assertEquals(
				"'" + str17 + "' != '" + "hi!" + "'", str17, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain20);
		org.junit.Assert.assertNull(internal21);
		org.junit.Assert.assertNotNull(iDiagramModel24);
		org.junit.Assert.assertEquals(
				"'" + str25 + "' != '" + "hi!" + "'", str25, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature26);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + true + "'", boolean27 == true
		);
		org.junit.Assert.assertNotNull(eObject28);
		org.junit.Assert.assertNotNull(eObject31);
	}

	@Test
	public void test0843() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0843"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		java.lang.Object obj13 = zentaDiagramModel0.eGet(2, false, false);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean15 = zentaDiagramModel0
					.eDynamicIsSet(eStructuralFeature14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(obj13);
	}

	@Test
	public void test0844() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0844"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		boolean boolean5 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel0.eClass();
		java.lang.String str7 = zentaDiagramModel0.toString();
		zentaDiagramModel0.checkName("");
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNotNull(eClass6);
	}

	@Test
	public void test0845() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0845"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor6 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.eSetDeliver(false);
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.EObject eObject10 = zentaDiagramModel0.getCopy();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(eObjectItor6);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert.assertNotNull(eObject10);
	}

	@Test
	public void test0846() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0846"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		int int12 = zentaDiagramModel9.eContainerFeatureID();
		java.lang.String str13 = zentaDiagramModel9.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		int int17 = zentaDiagramModel14.eContainerFeatureID();
		java.lang.String str18 = zentaDiagramModel14.getName();
		zentaDiagramModel9.setAdapter(zentaDiagramModel14, 1L);
		int int21 = zentaDiagramModel9.eContainerFeatureID();
		int int22 = zentaDiagramModel9.getLineWidth();
		zentaDiagramModel9.checkName("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj25 = zentaDiagramModel0
					.eVirtualGet(0, zentaDiagramModel9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
		org.junit.Assert
				.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
	}

	@Test
	public void test0847() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0847"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		zentaDiagramModel8.setLineColor("hi!");
		zentaDiagramModel8.setLineWidth('a');
		org.eclipse.emf.common.util.URI uRI30 = zentaDiagramModel8.eProxyURI();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject32 = zentaDiagramModel8
					.eObjectForURIFragmentSegment("hi!");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature 'i!' is not a valid feature"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertNull(uRI30);
	}

	@Test
	public void test0848() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0848"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		int int33 = zentaDiagramModel22.getViewpoint();
		org.eclipse.emf.common.util.URI uRI34 = zentaDiagramModel22.eProxyURI();
		java.lang.String str35 = zentaDiagramModel22.getName();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
		org.junit.Assert.assertNull(uRI34);
		org.junit.Assert.assertEquals(
				"'" + str35 + "' != '" + "hi!" + "'", str35, "hi!"
		);
	}

	@Test
	public void test0849() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0849"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel3.eClass();
		zentaDiagramModel0.eSetClass(eClass6);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		boolean boolean12 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel8, (short) 0, notificationChain14
				);
		int int16 = zentaDiagramModel0.eContainerFeatureID();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean18 = zentaDiagramModel0.eDynamicIsSet((short) 100);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
	}

	@Test
	public void test0850() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0850"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.Object obj12 = null;
		java.lang.Object obj13 = zentaDiagramModel0.getAdapter(obj12);
		java.lang.String str14 = zentaDiagramModel0.getName();
		java.lang.String str15 = zentaDiagramModel0.getName();
		zentaDiagramModel0.setConnectionRouterType((short) 10);
		org.eclipse.emf.ecore.EObject eObject18 = zentaDiagramModel0
				.eContainer();
		zentaDiagramModel0.setChecked(false);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert
				.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
		org.junit.Assert
				.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
		org.junit.Assert.assertNull(eObject18);
	}

	@Test
	public void test0851() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0851"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		zentaDiagramModel0.setId("");
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = zentaDiagramModel0
				.eDirectResource();
		boolean boolean8 = zentaDiagramModel0.isTemplate();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel9 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel9.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore12 = zentaDiagramModel9
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList13 = zentaDiagramModel9
				.eAdapters();
		boolean boolean14 = zentaDiagramModel9.eDeliver();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel9.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		boolean boolean17 = zentaDiagramModel0.hasDiagramReferences();
		org.eclipse.emf.ecore.EObject eObject18 = zentaDiagramModel0
				.eContainer();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(internal7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(eStore12);
		org.junit.Assert.assertNotNull(adapterList13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertTrue(
				"'" + boolean17 + "' != '" + false + "'", boolean17 == false
		);
		org.junit.Assert.assertNull(eObject18);
	}

	@Test
	public void test0852() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0852"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		boolean boolean7 = zentaDiagramModel0.eIsSet((byte) 1);
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + false + "'", boolean7 == false
		);
	}

	@Test
	public void test0853() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0853"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		boolean boolean7 = zentaDiagramModel0.eDeliver();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel0
				.eInternalResource();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + true + "'", boolean7 == true
		);
		org.junit.Assert.assertNull(internal8);
	}

	@Test
	public void test0854() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0854"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		zentaDiagramModel0.checkName("");
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean9 = false; // flaky: zentaDiagramModel0.eIsSet((int)
										// (short) 100);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
	}

	@Test
	public void test0855() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0855"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		org.eclipse.emf.common.util.URI uRI14 = null;
		zentaDiagramModel5.eSetProxyURI(uRI14);
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel5
					.eBasicRemoveFromContainer(notificationChain16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
	}

	@Test
	public void test0856() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0856"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.ecore.resource.Resource.Internal internal23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel0
				.eSetResource(internal23, notificationChain24);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature26 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel27 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel27.setDocumentation("hi!");
		java.lang.Object obj31 = zentaDiagramModel27.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList32 = zentaDiagramModel27
				.getChildren();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0
					.eDynamicSet(eStructuralFeature26, zentaDiagramModel27);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNull(notificationChain25);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList32);
	}

	@Test
	public void test0857() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0857"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.notify.Notification notification11 = null;
		zentaDiagramModel7.eNotify(notification11);
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, zentaDiagramModel15);
		boolean boolean20 = zentaDiagramModel15.eDeliver();
		zentaDiagramModel15.setLineWidth('#');
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel24 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel24.setDocumentation("hi!");
		java.lang.Object obj28 = zentaDiagramModel24.getAdapter(0L);
		int int29 = zentaDiagramModel24.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList30 = zentaDiagramModel24
				.eAdapters();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel24
				.findDiagramModel();
		java.lang.String str32 = zentaDiagramModel24.getLineColor();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel15
					.eDynamicSet(eStructuralFeature23, zentaDiagramModel24);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNull(eStore18);
		org.junit.Assert.assertTrue(
				"'" + boolean20 + "' != '" + true + "'", boolean20 == true
		);
		org.junit.Assert.assertNull(obj28);
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
		org.junit.Assert.assertNotNull(adapterList30);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNull(str32);
	}

	@Test
	public void test0858() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0858"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setName("");
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
	}

	@Test
	public void test0859() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0859"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		int int17 = zentaDiagramModel12.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore21 = zentaDiagramModel18
				.eStore();
		org.eclipse.emf.common.notify.Notification notification22 = null;
		zentaDiagramModel18.eNotify(notification22);
		int int24 = zentaDiagramModel18.getViewpoint();
		int int25 = zentaDiagramModel18.eContainerFeatureID();
		java.lang.Object obj26 = zentaDiagramModel12
				.getAdapter(zentaDiagramModel18);
		boolean boolean27 = zentaDiagramModel12.hasDiagramReferences();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature28 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean29 = zentaDiagramModel12
					.eDynamicIsSet(eStructuralFeature28);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert.assertNull(eStore21);
		org.junit.Assert
				.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(obj26);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + false + "'", boolean27 == false
		);
	}

	@Test
	public void test0860() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0860"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int16 = zentaDiagramModel0
					.eDerivedStructuralFeatureID(eStructuralFeature15);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
	}

	@Test
	public void test0861() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0861"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.resource.Resource resource33 = zentaDiagramModel22
				.eResource();
		zentaDiagramModel22.setDocumentation("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel37 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel37.setDocumentation("hi!");
		java.lang.Object obj41 = zentaDiagramModel37.getAdapter(0L);
		int int42 = zentaDiagramModel37.getLineWidth();
		java.lang.String str43 = zentaDiagramModel37.getDocumentation();
		org.eclipse.emf.ecore.EObject eObject44 = zentaDiagramModel37.getCopy();
		int int45 = zentaDiagramModel37.eContainerFeatureID();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList46 = zentaDiagramModel37
				.eAdapters();
		java.lang.Object obj47 = zentaDiagramModel22.eInvoke(0, adapterList46);
		boolean boolean48 = zentaDiagramModel22.isTemplate();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNull(resource33);
		org.junit.Assert.assertNull(obj41);
		org.junit.Assert
				.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
		org.junit.Assert.assertEquals(
				"'" + str43 + "' != '" + "hi!" + "'", str43, "hi!"
		);
		org.junit.Assert.assertNotNull(eObject44);
		org.junit.Assert
				.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
		org.junit.Assert.assertNotNull(adapterList46);
		org.junit.Assert.assertNotNull(obj47);
		org.junit.Assert.assertTrue(
				"'" + boolean48 + "' != '" + false + "'", boolean48 == false
		);
	}

	@Test
	public void test0862() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0862"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		java.lang.String str5 = zentaDiagramModel0.getName();
		org.eclipse.emf.ecore.resource.Resource.Internal internal6 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setLineWidth(10);
		org.eclipse.emf.ecore.resource.Resource resource9 = zentaDiagramModel0
				.eResource();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
		org.junit.Assert.assertNull(internal6);
		org.junit.Assert.assertNull(resource9);
	}

	@Test
	public void test0863() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0863"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList11 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature12 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel16 = zentaDiagramModel13
				.findDiagramModel();
		java.lang.String str17 = zentaDiagramModel13.getId();
		zentaDiagramModel13.checkDocumentation("");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList20 = zentaDiagramModel13
				.eContents();
		zentaDiagramModel13.setConnectionRouterType((byte) 100);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel23 = zentaDiagramModel13
				.getDiagramModel();
		boolean boolean24 = zentaDiagramModel13.isChecked();
		boolean boolean25 = zentaDiagramModel13.isDeleted();
		int int26 = zentaDiagramModel13.getLineWidth();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0
					.eOpenSet(eStructuralFeature12, zentaDiagramModel13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(eObjectList11);
		org.junit.Assert.assertNotNull(iDiagramModel16);
		org.junit.Assert.assertNull(str17);
		org.junit.Assert.assertNotNull(eObjectList20);
		org.junit.Assert.assertNotNull(iDiagramModel23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + false + "'", boolean24 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean25 + "' != '" + true + "'", boolean25 == true
		);
		org.junit.Assert
				.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
	}

	@Test
	public void test0864() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0864"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		int int10 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(false);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj15 = zentaDiagramModel0
					.eGet(eStructuralFeature13, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
	}

	@Test
	public void test0865() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0865"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList12 = zentaDiagramModel0
				.getChildren();
		java.lang.Object obj14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj15 = zentaDiagramModel0
					.eVirtualSet((short) -1, obj14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList12);
	}

	@Test
	public void test0866() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0866"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		boolean boolean7 = zentaDiagramModel0.eDeliver();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean9 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + true + "'", boolean7 == true
		);
	}

	@Test
	public void test0867() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0867"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		java.lang.String str17 = zentaDiagramModel12.getName();
		zentaDiagramModel12.checkId("");
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList20 = zentaDiagramModel12
				.getChildren();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean22 = zentaDiagramModel12
					.eDynamicIsSet(eStructuralFeature21);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList20);
	}

	@Test
	public void test0868() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0868"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource3 = zentaDiagramModel0
				.eResource();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		org.eclipse.emf.ecore.EObject eObject6 = zentaDiagramModel0.getCopy();
		zentaDiagramModel0.checkId("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj12 = zentaDiagramModel0
					.eDynamicGet((byte) -1, true, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(resource3);
		org.junit.Assert.assertNotNull(eObject6);
	}

	@Test
	public void test0869() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0869"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList14 = zentaDiagramModel5
				.getProperties();
		java.lang.String str15 = zentaDiagramModel5.toString();
		java.lang.Class<?> wildcardClass16 = zentaDiagramModel5.getClass();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNotNull(iPropertyList14);
		org.junit.Assert.assertNotNull(wildcardClass16);
	}

	@Test
	public void test0870() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0870"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setLineColor("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting9 = zentaDiagramModel0
					.eSetting(eStructuralFeature8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
	}

	@Test
	public void test0871() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0871"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		boolean boolean8 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore13 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel10.eNotify(notification14);
		zentaDiagramModel10.setName("hi!");
		int int18 = zentaDiagramModel10.getViewpoint();
		org.eclipse.emf.ecore.EObject eObject19 = zentaDiagramModel10
				.eContainer();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore20 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain23 = zentaDiagramModel0
				.eBasicSetContainer(zentaDiagramModel10, 2, notificationChain22);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel10
				.getDiagramModel();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList25 = zentaDiagramModel10
				.getChildren();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert.assertNull(eStore13);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert.assertNull(eObject19);
		org.junit.Assert.assertNull(eStore20);
		org.junit.Assert.assertNull(notificationChain23);
		org.junit.Assert.assertNotNull(iDiagramModel24);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList25);
	}

	@Test
	public void test0872() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0872"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		boolean boolean8 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore13 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel10.eNotify(notification14);
		zentaDiagramModel10.setName("hi!");
		int int18 = zentaDiagramModel10.getViewpoint();
		org.eclipse.emf.ecore.EObject eObject19 = zentaDiagramModel10
				.eContainer();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore20 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain23 = zentaDiagramModel0
				.eBasicSetContainer(zentaDiagramModel10, 2, notificationChain22);
		zentaDiagramModel10.checkDocumentation("");
		org.eclipse.emf.ecore.EObject eObject26 = zentaDiagramModel10
				.eContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature27 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj29 = zentaDiagramModel10
					.eOpenGet(eStructuralFeature27, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert.assertNull(eStore13);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert.assertNull(eObject19);
		org.junit.Assert.assertNull(eStore20);
		org.junit.Assert.assertNull(notificationChain23);
		org.junit.Assert.assertNull(eObject26);
	}

	@Test
	public void test0873() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0873"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EReference eReference11 = zentaDiagramModel0
				.eContainmentFeature();
		org.eclipse.emf.ecore.InternalEObject internalEObject12 = zentaDiagramModel0
				.eInternalContainer();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean14 = zentaDiagramModel0.eIsSet(eStructuralFeature13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
		org.junit.Assert.assertNull(eReference11);
		org.junit.Assert.assertNull(internalEObject12);
	}

	@Test
	public void test0874() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0874"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setDocumentation("hi!");
		java.lang.Object obj7 = zentaDiagramModel3.getAdapter(0L);
		int int8 = zentaDiagramModel3.getLineWidth();
		java.lang.String str9 = zentaDiagramModel3.getId();
		java.lang.String str10 = zentaDiagramModel3.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		java.lang.Object obj15 = zentaDiagramModel11.getAdapter(0L);
		int int16 = zentaDiagramModel11.getLineWidth();
		java.lang.String str17 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = zentaDiagramModel11
				.eSetResource(internal18, notificationChain19);
		org.eclipse.emf.ecore.resource.Resource.Internal internal21 = zentaDiagramModel11
				.eInternalResource();
		zentaDiagramModel11.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel11
				.findDiagramModel();
		java.lang.String str25 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature26 = zentaDiagramModel11
				.eContainingFeature();
		boolean boolean27 = zentaDiagramModel11.isDeleted();
		org.eclipse.emf.ecore.EObject eObject28 = zentaDiagramModel3
				.eResolveProxy(zentaDiagramModel11);
		zentaDiagramModel11.setLineColor("hi!");
		org.eclipse.emf.ecore.EObject eObject31 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel11);
		java.lang.String str32 = zentaDiagramModel0.getDocumentation();
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean34 = zentaDiagramModel0.eDynamicIsSet((byte) 100);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertNull(obj7);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
		org.junit.Assert.assertNull(str9);
		org.junit.Assert.assertEquals(
				"'" + str10 + "' != '" + "hi!" + "'", str10, "hi!"
		);
		org.junit.Assert.assertNull(obj15);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
		org.junit.Assert.assertEquals(
				"'" + str17 + "' != '" + "hi!" + "'", str17, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain20);
		org.junit.Assert.assertNull(internal21);
		org.junit.Assert.assertNotNull(iDiagramModel24);
		org.junit.Assert.assertEquals(
				"'" + str25 + "' != '" + "hi!" + "'", str25, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature26);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + true + "'", boolean27 == true
		);
		org.junit.Assert.assertNotNull(eObject28);
		org.junit.Assert.assertNotNull(eObject31);
		org.junit.Assert
				.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
	}

	@Test
	public void test0875() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0875"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.initId();
		boolean boolean15 = zentaDiagramModel0.eDeliver();
		org.eclipse.emf.ecore.InternalEObject internalEObject16 = zentaDiagramModel0
				.eInternalContainer();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean15 + "' != '" + true + "'", boolean15 == true
		);
		org.junit.Assert.assertNull(internalEObject16);
	}

	@Test
	public void test0876() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0876"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel12.eSetProxyURI(uRI13);
		zentaDiagramModel12.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel12
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		java.lang.String str24 = zentaDiagramModel18.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel18
				.eSetResource(internal25, notificationChain26);
		java.lang.Object obj31 = zentaDiagramModel18.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel18.eNotify(notification32);
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel12
				.eResolveProxy(zentaDiagramModel18);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		int int44 = zentaDiagramModel35.getConnectionRouterType();
		zentaDiagramModel0.setAdapter(zentaDiagramModel18, zentaDiagramModel35);
		org.rulez.magwas.zenta.model.UndoState undoState46 = zentaDiagramModel35
				.delete();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertEquals(
				"'" + str24 + "' != '" + "hi!" + "'", str24, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
	}

	@Test
	public void test0877() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0877"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		java.lang.Object obj13 = zentaDiagramModel0.eGet(2, false, false);
		java.lang.Class<?> wildcardClass14 = zentaDiagramModel0.getClass();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert.assertNotNull(wildcardClass14);
	}

	@Test
	public void test0878() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0878"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel12 = zentaDiagramModel0
				.findDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		int int17 = zentaDiagramModel14.eContainerFeatureID();
		java.lang.String str18 = zentaDiagramModel14.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		int int22 = zentaDiagramModel19.eContainerFeatureID();
		java.lang.String str23 = zentaDiagramModel19.getName();
		zentaDiagramModel14.setAdapter(zentaDiagramModel19, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject30 = zentaDiagramModel19
				.eResolveProxy(zentaDiagramModel26);
		org.eclipse.emf.common.util.URI uRI31 = null;
		zentaDiagramModel19.eSetProxyURI(uRI31);
		zentaDiagramModel0.eSet((short) 1, uRI31);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList34 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.ecore.resource.Resource.Internal internal35 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("hi!");
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(iDiagramModel12);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert
				.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
		org.junit.Assert
				.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNotNull(eObject30);
		org.junit.Assert.assertNotNull(eObjectList34);
		org.junit.Assert.assertNull(internal35);
	}

	@Test
	public void test0879() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0879"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.EReference eReference8 = zentaDiagramModel0
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.IFolder iFolder9 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder10 = null;
		zentaDiagramModel0.move(iFolder9, iFolder10);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert.assertNull(eReference8);
	}

	@Test
	public void test0880() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0880"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		java.lang.String str3 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource7 = zentaDiagramModel4
				.eResource();
		zentaDiagramModel4.checkId("hi!");
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel4.eDeliver();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject13 = zentaDiagramModel4
					.eObjectForURIFragmentSegment("");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertNull(str3);
		org.junit.Assert.assertNull(resource7);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
	}

	@Test
	public void test0881() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0881"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineColor("");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		java.lang.Object obj9 = zentaDiagramModel5.getAdapter(0L);
		int int10 = zentaDiagramModel5.getLineWidth();
		java.lang.String str11 = zentaDiagramModel5.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal12 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = zentaDiagramModel5
				.eSetResource(internal12, notificationChain13);
		java.lang.Object obj18 = zentaDiagramModel5.eGet(2, false, false);
		java.lang.Object obj19 = zentaDiagramModel0.getAdapter(false);
		zentaDiagramModel0.eSetDeliver(false);
		zentaDiagramModel0.setChecked(true);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel24 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel24.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource27 = zentaDiagramModel24
				.eResource();
		org.eclipse.emf.common.notify.Notification notification28 = null;
		zentaDiagramModel24.eNotify(notification28);
		int int30 = zentaDiagramModel24.getViewpoint();
		org.eclipse.emf.common.notify.NotificationChain notificationChain32 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain33 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel24, (short) 0, notificationChain32
				);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature34 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		java.lang.Object obj39 = zentaDiagramModel35.getAdapter(0L);
		int int40 = zentaDiagramModel35.getLineWidth();
		zentaDiagramModel35.setConnectionRouterType('4');
		int int43 = zentaDiagramModel35.getViewpoint();
		boolean boolean44 = zentaDiagramModel35.eNotificationRequired();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel45 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI46 = null;
		zentaDiagramModel45.eSetProxyURI(uRI46);
		zentaDiagramModel45.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList50 = zentaDiagramModel45
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel51 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel51.setDocumentation("hi!");
		java.lang.Object obj55 = zentaDiagramModel51.getAdapter(0L);
		int int56 = zentaDiagramModel51.getLineWidth();
		java.lang.String str57 = zentaDiagramModel51.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal58 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain59 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain60 = zentaDiagramModel51
				.eSetResource(internal58, notificationChain59);
		java.lang.Object obj64 = zentaDiagramModel51.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification65 = null;
		zentaDiagramModel51.eNotify(notification65);
		org.eclipse.emf.ecore.EObject eObject67 = zentaDiagramModel45
				.eResolveProxy(zentaDiagramModel51);
		org.eclipse.emf.ecore.EObject eObject68 = zentaDiagramModel35
				.eResolveProxy(zentaDiagramModel51);
		zentaDiagramModel35.eSetDeliver(false);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel24
					.eOpenSet(eStructuralFeature34, zentaDiagramModel35);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertEquals(
				"'" + str11 + "' != '" + "hi!" + "'", str11, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain14);
		org.junit.Assert.assertNull(obj18);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNull(resource27);
		org.junit.Assert
				.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
		org.junit.Assert.assertNull(notificationChain33);
		org.junit.Assert.assertNull(obj39);
		org.junit.Assert
				.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
		org.junit.Assert
				.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean44 + "' != '" + false + "'", boolean44 == false
		);
		org.junit.Assert.assertNotNull(adapterList50);
		org.junit.Assert.assertNull(obj55);
		org.junit.Assert
				.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
		org.junit.Assert.assertEquals(
				"'" + str57 + "' != '" + "hi!" + "'", str57, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain60);
		org.junit.Assert.assertNull(obj64);
		org.junit.Assert.assertNotNull(eObject67);
		org.junit.Assert.assertNotNull(eObject68);
	}

	@Test
	public void test0882() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0882"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		zentaDiagramModel5.setLineWidth(0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel19 = zentaDiagramModel5
				.findDiagramModel();
		boolean boolean20 = zentaDiagramModel5.eDeliver();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertNotNull(iDiagramModel19);
		org.junit.Assert.assertTrue(
				"'" + boolean20 + "' != '" + true + "'", boolean20 == true
		);
	}

	@Test
	public void test0883() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0883"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		org.eclipse.emf.common.util.URI uRI17 = null;
		zentaDiagramModel5.eSetProxyURI(uRI17);
		org.eclipse.emf.ecore.InternalEObject.EStore eStore19 = zentaDiagramModel5
				.eStore();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore24 = zentaDiagramModel21
				.eStore();
		org.eclipse.emf.common.notify.Notification notification25 = null;
		zentaDiagramModel21.eNotify(notification25);
		int int27 = zentaDiagramModel21.getViewpoint();
		int int28 = zentaDiagramModel21.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel29 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel29.setDocumentation("hi!");
		int int32 = zentaDiagramModel29.eContainerFeatureID();
		java.lang.String str33 = zentaDiagramModel29.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel34 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel34.setDocumentation("hi!");
		int int37 = zentaDiagramModel34.eContainerFeatureID();
		java.lang.String str38 = zentaDiagramModel34.getName();
		zentaDiagramModel29.setAdapter(zentaDiagramModel34, 1L);
		java.lang.String str41 = zentaDiagramModel34.getId();
		int int42 = zentaDiagramModel34.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel43 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel43.setDocumentation("hi!");
		int int46 = zentaDiagramModel43.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal47 = zentaDiagramModel43
				.eInternalResource();
		java.lang.String str48 = zentaDiagramModel43.getDocumentation();
		boolean boolean49 = zentaDiagramModel43.isChecked();
		zentaDiagramModel43.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel52 = zentaDiagramModel43
				.findDiagramModel();
		zentaDiagramModel21
				.setAdapter(zentaDiagramModel34, zentaDiagramModel43);
		org.rulez.magwas.zenta.model.UndoState undoState54 = zentaDiagramModel34
				.prepareDelete();
		org.eclipse.emf.ecore.InternalEObject internalEObject55 = zentaDiagramModel34
				.eInternalContainer();
		java.lang.String str56 = zentaDiagramModel34.getId();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList57 = zentaDiagramModel34
				.getProperties();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel5
					.eDynamicSet(eStructuralFeature20, iPropertyList57);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertNull(eStore19);
		org.junit.Assert.assertNull(eStore24);
		org.junit.Assert
				.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
		org.junit.Assert
				.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
		org.junit.Assert
				.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
		org.junit.Assert
				.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
		org.junit.Assert
				.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
		org.junit.Assert
				.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
		org.junit.Assert.assertNull(str41);
		org.junit.Assert
				.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
		org.junit.Assert
				.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
		org.junit.Assert.assertNull(internal47);
		org.junit.Assert.assertEquals(
				"'" + str48 + "' != '" + "hi!" + "'", str48, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean49 + "' != '" + false + "'", boolean49 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel52);
		org.junit.Assert.assertNotNull(undoState54);
		org.junit.Assert.assertNull(internalEObject55);
		org.junit.Assert.assertNull(str56);
		org.junit.Assert.assertNotNull(iPropertyList57);
	}

	@Test
	public void test0884() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0884"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setDocumentation("hi!");
		java.lang.Object obj7 = zentaDiagramModel3.getAdapter(0L);
		int int8 = zentaDiagramModel3.getLineWidth();
		java.lang.String str9 = zentaDiagramModel3.getId();
		java.lang.String str10 = zentaDiagramModel3.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		java.lang.Object obj15 = zentaDiagramModel11.getAdapter(0L);
		int int16 = zentaDiagramModel11.getLineWidth();
		java.lang.String str17 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = zentaDiagramModel11
				.eSetResource(internal18, notificationChain19);
		org.eclipse.emf.ecore.resource.Resource.Internal internal21 = zentaDiagramModel11
				.eInternalResource();
		zentaDiagramModel11.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel11
				.findDiagramModel();
		java.lang.String str25 = zentaDiagramModel11.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature26 = zentaDiagramModel11
				.eContainingFeature();
		boolean boolean27 = zentaDiagramModel11.isDeleted();
		org.eclipse.emf.ecore.EObject eObject28 = zentaDiagramModel3
				.eResolveProxy(zentaDiagramModel11);
		zentaDiagramModel11.setLineColor("hi!");
		org.eclipse.emf.ecore.EObject eObject31 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel11);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel32 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.checkDocumentation("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature35 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int36 = zentaDiagramModel0
					.eDerivedStructuralFeatureID(eStructuralFeature35);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertNull(obj7);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
		org.junit.Assert.assertNull(str9);
		org.junit.Assert.assertEquals(
				"'" + str10 + "' != '" + "hi!" + "'", str10, "hi!"
		);
		org.junit.Assert.assertNull(obj15);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
		org.junit.Assert.assertEquals(
				"'" + str17 + "' != '" + "hi!" + "'", str17, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain20);
		org.junit.Assert.assertNull(internal21);
		org.junit.Assert.assertNotNull(iDiagramModel24);
		org.junit.Assert.assertEquals(
				"'" + str25 + "' != '" + "hi!" + "'", str25, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature26);
		org.junit.Assert.assertTrue(
				"'" + boolean27 + "' != '" + true + "'", boolean27 == true
		);
		org.junit.Assert.assertNotNull(eObject28);
		org.junit.Assert.assertNotNull(eObject31);
		org.junit.Assert.assertNotNull(iDiagramModel32);
	}

	@Test
	public void test0885() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0885"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		int int10 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.ecore.EObject eObject11 = null;
		boolean boolean12 = zentaDiagramModel0.eContains(eObject11);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		java.lang.Object obj17 = zentaDiagramModel13.getAdapter(0L);
		int int18 = zentaDiagramModel13.getLineWidth();
		java.lang.String str19 = zentaDiagramModel13.getId();
		java.lang.String str20 = zentaDiagramModel13.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setDocumentation("hi!");
		java.lang.Object obj25 = zentaDiagramModel21.getAdapter(0L);
		int int26 = zentaDiagramModel21.getLineWidth();
		java.lang.String str27 = zentaDiagramModel21.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal28 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain29 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain30 = zentaDiagramModel21
				.eSetResource(internal28, notificationChain29);
		org.eclipse.emf.ecore.resource.Resource.Internal internal31 = zentaDiagramModel21
				.eInternalResource();
		zentaDiagramModel21.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel34 = zentaDiagramModel21
				.findDiagramModel();
		java.lang.String str35 = zentaDiagramModel21.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature36 = zentaDiagramModel21
				.eContainingFeature();
		boolean boolean37 = zentaDiagramModel21.isDeleted();
		org.eclipse.emf.ecore.EObject eObject38 = zentaDiagramModel13
				.eResolveProxy(zentaDiagramModel21);
		zentaDiagramModel21.setLineColor("hi!");
		org.eclipse.emf.ecore.EObject eObject41 = zentaDiagramModel21.getCopy();
		org.eclipse.emf.common.notify.NotificationChain notificationChain43 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain44 = zentaDiagramModel0
					.eInverseRemove(
							zentaDiagramModel21, 'a', notificationChain43
					);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNull(obj17);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
		org.junit.Assert.assertNull(str19);
		org.junit.Assert.assertEquals(
				"'" + str20 + "' != '" + "hi!" + "'", str20, "hi!"
		);
		org.junit.Assert.assertNull(obj25);
		org.junit.Assert
				.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain30);
		org.junit.Assert.assertNull(internal31);
		org.junit.Assert.assertNotNull(iDiagramModel34);
		org.junit.Assert.assertEquals(
				"'" + str35 + "' != '" + "hi!" + "'", str35, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature36);
		org.junit.Assert.assertTrue(
				"'" + boolean37 + "' != '" + true + "'", boolean37 == true
		);
		org.junit.Assert.assertNotNull(eObject38);
		org.junit.Assert.assertNotNull(eObject41);
	}

	@Test
	public void test0886() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0886"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.URI uRI4 = null;
		zentaDiagramModel0.eSetProxyURI(uRI4);
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		zentaDiagramModel0.initId();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.rulez.magwas.zenta.model.IFolder iFolder8 = zentaDiagramModel0
					.getParentFolder();
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(uRI6);
	}

	@Test
	public void test0887() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0887"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor6 = zentaDiagramModel0
				.eAllContents();
		zentaDiagramModel0.eSetDeliver(false);
		org.rulez.magwas.zenta.model.UndoState undoState9 = zentaDiagramModel0
				.prepareDelete();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature10 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setDocumentation("hi!");
		java.lang.Object obj15 = zentaDiagramModel11.getAdapter(0L);
		int int16 = zentaDiagramModel11.getLineWidth();
		zentaDiagramModel11.setConnectionRouterType('4');
		int int19 = zentaDiagramModel11.getViewpoint();
		boolean boolean20 = zentaDiagramModel11.eNotificationRequired();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI22 = null;
		zentaDiagramModel21.eSetProxyURI(uRI22);
		zentaDiagramModel21.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList26 = zentaDiagramModel21
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel27 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel27.setDocumentation("hi!");
		java.lang.Object obj31 = zentaDiagramModel27.getAdapter(0L);
		int int32 = zentaDiagramModel27.getLineWidth();
		java.lang.String str33 = zentaDiagramModel27.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal34 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain35 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain36 = zentaDiagramModel27
				.eSetResource(internal34, notificationChain35);
		java.lang.Object obj40 = zentaDiagramModel27.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification41 = null;
		zentaDiagramModel27.eNotify(notification41);
		org.eclipse.emf.ecore.EObject eObject43 = zentaDiagramModel21
				.eResolveProxy(zentaDiagramModel27);
		org.eclipse.emf.ecore.EObject eObject44 = zentaDiagramModel11
				.eResolveProxy(zentaDiagramModel27);
		org.eclipse.emf.ecore.resource.Resource.Internal internal45 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain46 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain47 = zentaDiagramModel11
				.eSetResource(internal45, notificationChain46);
		zentaDiagramModel11.checkName("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSet(eStructuralFeature10, "hi!");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(eObjectItor6);
		org.junit.Assert.assertNotNull(undoState9);
		org.junit.Assert.assertNull(obj15);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean20 + "' != '" + false + "'", boolean20 == false
		);
		org.junit.Assert.assertNotNull(adapterList26);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert
				.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
		org.junit.Assert.assertEquals(
				"'" + str33 + "' != '" + "hi!" + "'", str33, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain36);
		org.junit.Assert.assertNull(obj40);
		org.junit.Assert.assertNotNull(eObject43);
		org.junit.Assert.assertNotNull(eObject44);
		org.junit.Assert.assertNull(notificationChain47);
	}

	@Test
	public void test0888() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0888"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		zentaDiagramModel8.setLineColor("hi!");
		zentaDiagramModel8.setLineWidth('a');
		boolean boolean30 = zentaDiagramModel8.eNotificationRequired();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList31 = zentaDiagramModel8
					.eCrossReferences();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertTrue(
				"'" + boolean30 + "' != '" + false + "'", boolean30 == false
		);
	}

	@Test
	public void test0889() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0889"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj9 = zentaDiagramModel0.eVirtualUnset(4);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
	}

	@Test
	public void test0890() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0890"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean1 = zentaDiagramModel0.isDeleted();
		org.eclipse.emf.ecore.EObject eObject2 = zentaDiagramModel0.getCopy();
		java.lang.String str3 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource7 = zentaDiagramModel4
				.eResource();
		zentaDiagramModel4.checkId("hi!");
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature11 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		java.lang.Object obj16 = zentaDiagramModel12.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList17 = zentaDiagramModel12
				.getChildren();
		zentaDiagramModel12.setDocumentation("");
		org.rulez.magwas.zenta.model.UndoState undoState20 = zentaDiagramModel12
				.prepareDelete();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel4.eOpenSet(eStructuralFeature11, undoState20);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean1 + "' != '" + true + "'", boolean1 == true
		);
		org.junit.Assert.assertNotNull(eObject2);
		org.junit.Assert.assertNull(str3);
		org.junit.Assert.assertNull(resource7);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertNull(obj16);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList17);
		org.junit.Assert.assertNotNull(undoState20);
	}

	@Test
	public void test0891() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0891"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList6 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.common.util.URI uRI7 = null;
		zentaDiagramModel0.eSetProxyURI(uRI7);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj12 = zentaDiagramModel0
					.eGet(eStructuralFeature9, false, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNotNull(eObjectList6);
	}

	@Test
	public void test0892() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0892"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean14 = zentaDiagramModel0.isDeleted();
		zentaDiagramModel0.checkName("");
		org.eclipse.emf.ecore.InternalEObject internalEObject17 = zentaDiagramModel0
				.eInternalContainer();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList18 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature19 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj21 = zentaDiagramModel0
					.eOpenGet(eStructuralFeature19, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNull(internalEObject17);
		org.junit.Assert.assertNotNull(adapterList18);
	}

	@Test
	public void test0893() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0893"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList22 = zentaDiagramModel13
				.getProperties();
		java.lang.Object obj23 = zentaDiagramModel0.getAdapter(iPropertyList22);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList24 = zentaDiagramModel0
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel25 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel25.setDocumentation("hi!");
		java.lang.Object obj29 = zentaDiagramModel25.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList30 = zentaDiagramModel25
				.getChildren();
		zentaDiagramModel25.setLineColor("hi!");
		boolean boolean33 = zentaDiagramModel25.isDeleted();
		zentaDiagramModel25.setDocumentation("");
		org.rulez.magwas.zenta.model.UndoState undoState36 = zentaDiagramModel25
				.prepareDelete();
		org.rulez.magwas.zenta.model.UndoState undoState37 = zentaDiagramModel0
				.delete(undoState36);
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert.assertNotNull(iPropertyList22);
		org.junit.Assert.assertNull(obj23);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList24);
		org.junit.Assert.assertNull(obj29);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList30);
		org.junit.Assert.assertTrue(
				"'" + boolean33 + "' != '" + true + "'", boolean33 == true
		);
		org.junit.Assert.assertNotNull(undoState36);
	}

	@Test
	public void test0894() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0894"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		zentaDiagramModel0.initId();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = zentaDiagramModel0
				.eContainingFeature();
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertNull(eStructuralFeature15);
	}

	@Test
	public void test0895() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0895"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList5 = zentaDiagramModel0
				.eContents();
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel0.eClass();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		java.lang.Object obj11 = zentaDiagramModel7.getAdapter(0L);
		int int12 = zentaDiagramModel7.getLineWidth();
		java.lang.String str13 = zentaDiagramModel7.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore17 = zentaDiagramModel14
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList18 = zentaDiagramModel14
				.eAdapters();
		boolean boolean19 = zentaDiagramModel14.eDeliver();
		java.lang.Object obj20 = zentaDiagramModel7
				.getAdapter(zentaDiagramModel14);
		org.eclipse.emf.ecore.EObject eObject21 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel14);
		org.eclipse.emf.ecore.InternalEObject.EStore eStore22 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel14.eSetStore(eStore22);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNotNull(eObjectList5);
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert.assertNull(obj11);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
		org.junit.Assert.assertNull(str13);
		org.junit.Assert.assertNull(eStore17);
		org.junit.Assert.assertNotNull(adapterList18);
		org.junit.Assert.assertTrue(
				"'" + boolean19 + "' != '" + true + "'", boolean19 == true
		);
		org.junit.Assert.assertNull(obj20);
		org.junit.Assert.assertNotNull(eObject21);
	}

	@Test
	public void test0896() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0896"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		int int9 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.ecore.resource.Resource resource10 = zentaDiagramModel0
				.eResource();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
		org.junit.Assert.assertNull(resource10);
	}

	@Test
	public void test0897() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0897"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.resource.Resource resource33 = zentaDiagramModel22
				.eResource();
		zentaDiagramModel22.setDocumentation("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean37 = false; // flaky:
										// zentaDiagramModel22.eIsSet((int)
										// '#');
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNull(resource33);
	}

	@Test
	public void test0898() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0898"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource3 = zentaDiagramModel0
				.eResource();
		org.eclipse.emf.ecore.EObject eObject4 = zentaDiagramModel0
				.eContainer();
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		int int6 = zentaDiagramModel0.getLineWidth();
		org.junit.Assert.assertNull(resource3);
		org.junit.Assert.assertNull(eObject4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
	}

	@Test
	public void test0899() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0899"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		int int10 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(false);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
	}

	@Test
	public void test0900() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0900"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		int int13 = zentaDiagramModel10.eContainerFeatureID();
		java.lang.String str14 = zentaDiagramModel10.getName();
		zentaDiagramModel5.setAdapter(zentaDiagramModel10, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel17 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel17.setDocumentation("hi!");
		int int20 = zentaDiagramModel17.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject21 = zentaDiagramModel10
				.eResolveProxy(zentaDiagramModel17);
		java.lang.String str22 = zentaDiagramModel17.getName();
		zentaDiagramModel17.checkId("");
		zentaDiagramModel17.setId("hi!");
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor27 = zentaDiagramModel17
				.eAllContents();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSet(eStructuralFeature4, eObjectItor27);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert
				.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
		org.junit.Assert
				.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
		org.junit.Assert.assertNotNull(eObject21);
		org.junit.Assert
				.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
		org.junit.Assert.assertNotNull(eObjectItor27);
	}

	@Test
	public void test0901() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0901"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList14 = zentaDiagramModel5
				.getProperties();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel5.eClass();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList16 = zentaDiagramModel5
				.getChildren();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNotNull(iPropertyList14);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList16);
	}

	@Test
	public void test0902() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0902"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList10 = zentaDiagramModel0
				.eAdapters();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore11 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.ecore.EOperation eOperation12 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		int int18 = zentaDiagramModel13.getViewpoint();
		org.eclipse.emf.common.util.URI uRI19 = zentaDiagramModel13.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setDocumentation("hi!");
		java.lang.Object obj25 = zentaDiagramModel21.getAdapter(0L);
		int int26 = zentaDiagramModel21.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList27 = zentaDiagramModel21
				.eAdapters();
		java.lang.Object obj28 = zentaDiagramModel13.eInvoke(0, adapterList27);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj29 = zentaDiagramModel0
					.eInvoke(eOperation12, adapterList27);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(adapterList10);
		org.junit.Assert.assertNull(eStore11);
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert.assertNull(uRI19);
		org.junit.Assert.assertNull(obj25);
		org.junit.Assert
				.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
		org.junit.Assert.assertNotNull(adapterList27);
		org.junit.Assert.assertNotNull(obj28);
	}

	@Test
	public void test0903() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0903"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.EClass eClass33 = zentaDiagramModel0.eClass();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature34 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(eStructuralFeature34);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNotNull(eClass33);
	}

	@Test
	public void test0904() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0904"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject5 = zentaDiagramModel0
				.eInternalContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		int int10 = zentaDiagramModel7.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature11 = zentaDiagramModel7
				.eContainingFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		java.lang.Object obj16 = zentaDiagramModel12.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject17 = zentaDiagramModel12
				.eInternalContainer();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList18 = zentaDiagramModel12
				.eContents();
		java.lang.Object obj19 = zentaDiagramModel7.getAdapter(eObjectList18);
		org.eclipse.emf.ecore.EObject eObject20 = zentaDiagramModel7.getCopy();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj21 = zentaDiagramModel0
					.eVirtualSet((byte) 10, zentaDiagramModel7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNull(internalEObject5);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
		org.junit.Assert.assertNull(eStructuralFeature11);
		org.junit.Assert.assertNull(obj16);
		org.junit.Assert.assertNull(internalEObject17);
		org.junit.Assert.assertNotNull(eObjectList18);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject20);
	}

	@Test
	public void test0905() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0905"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.resource.Resource.Internal internal6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = zentaDiagramModel0
				.eSetResource(internal6, notificationChain7);
		zentaDiagramModel0.setLineWidth((-1));
		int int11 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.notify.NotificationChain notificationChain12 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain13 = zentaDiagramModel0
					.eBasicRemoveFromContainer(notificationChain12);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertNull(notificationChain8);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
	}

	@Test
	public void test0906() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0906"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList14 = zentaDiagramModel5
				.getProperties();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setDocumentation("hi!");
		java.lang.Object obj20 = zentaDiagramModel16.getAdapter(0L);
		int int21 = zentaDiagramModel16.getLineWidth();
		java.lang.String str22 = zentaDiagramModel16.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList23 = zentaDiagramModel16
				.getChildren();
		zentaDiagramModel16.setId("hi!");
		zentaDiagramModel16.setName("hi!");
		zentaDiagramModel16.checkId("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel5.eSet((byte) -1, zentaDiagramModel16);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: The feature ID-1 is not a valid feature ID"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNotNull(iPropertyList14);
		org.junit.Assert.assertNull(obj20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList23);
	}

	@Test
	public void test0907() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0907"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Class<?> wildcardClass5 = internal4.getClass();
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.NullPointerException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
	}

	@Test
	public void test0908() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0908"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		zentaDiagramModel0.checkId("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting10 = zentaDiagramModel0
					.eSetting(eStructuralFeature9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
	}

	@Test
	public void test0909() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0909"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.notify.Notification notification11 = null;
		zentaDiagramModel7.eNotify(notification11);
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, zentaDiagramModel15);
		boolean boolean20 = zentaDiagramModel15.eDeliver();
		zentaDiagramModel15.setLineWidth('#');
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean24 = false; // flaky:
										// zentaDiagramModel15.eIsSet((int)
										// (short) 100);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNull(eStore18);
		org.junit.Assert.assertTrue(
				"'" + boolean20 + "' != '" + true + "'", boolean20 == true
		);
	}

	@Test
	public void test0910() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0910"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		int int10 = zentaDiagramModel0.getLineWidth();
		boolean boolean11 = zentaDiagramModel0.eNotificationRequired();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj15 = zentaDiagramModel0
					.eDynamicGet((byte) 100, true, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + false + "'", boolean11 == false
		);
	}

	@Test
	public void test0911() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0911"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setDocumentation("hi!");
		java.lang.Object obj10 = zentaDiagramModel6.getAdapter(0L);
		int int11 = zentaDiagramModel6.getLineWidth();
		java.lang.String str12 = zentaDiagramModel6.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel6
				.eSetResource(internal13, notificationChain14);
		java.lang.Object obj19 = zentaDiagramModel6.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification20 = null;
		zentaDiagramModel6.eNotify(notification20);
		org.eclipse.emf.ecore.EObject eObject22 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel6);
		org.eclipse.emf.ecore.resource.Resource.Internal internal23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel0
				.eSetResource(internal23, notificationChain24);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		int int29 = zentaDiagramModel26.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal30 = zentaDiagramModel26
				.eInternalResource();
		java.lang.Object obj31 = zentaDiagramModel0
				.getAdapter(zentaDiagramModel26);
		org.eclipse.emf.common.notify.NotificationChain notificationChain32 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain33 = zentaDiagramModel26
					.eBasicRemoveFromContainerFeature(notificationChain32);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(obj10);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert.assertNotNull(eObject22);
		org.junit.Assert.assertNull(notificationChain25);
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
		org.junit.Assert.assertNull(internal30);
		org.junit.Assert.assertNull(obj31);
	}

	@Test
	public void test0912() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0912"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		int int5 = zentaDiagramModel0.getConnectionRouterType();
		zentaDiagramModel0.checkName("");
		java.lang.Class<?> wildcardClass8 = zentaDiagramModel0.getClass();
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNotNull(wildcardClass8);
	}

	@Test
	public void test0913() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0913"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.URI uRI4 = null;
		zentaDiagramModel0.eSetProxyURI(uRI4);
		zentaDiagramModel0.checkDocumentation("");
		zentaDiagramModel0.setChecked(true);
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean11 = zentaDiagramModel0.eDynamicIsSet((byte) 10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
	}

	@Test
	public void test0914() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0914"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		zentaDiagramModel8.setLineColor("hi!");
		zentaDiagramModel8.setLineWidth('a');
		boolean boolean30 = zentaDiagramModel8.eNotificationRequired();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel8.check();
			org.junit.Assert.fail(
					"Expected exception of type org.rulez.magwas.zenta.model.ModelConsistencyException; message: id cannot be null: org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel@627d4cf4 (name: , id: null, lineWidth: 97, lineColor: hi!, documentation: hi!, connectionRouterType: 0) (viewpoint: 0)"
			);
		} catch (org.rulez.magwas.zenta.model.ModelConsistencyException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertTrue(
				"'" + boolean30 + "' != '" + false + "'", boolean30 == false
		);
	}

	@Test
	public void test0915() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0915"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		zentaDiagramModel8.setLineColor("hi!");
		org.eclipse.emf.ecore.EObject eObject28 = zentaDiagramModel8.getCopy();
		org.rulez.magwas.zenta.model.IFolder iFolder29 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder30 = null;
		zentaDiagramModel8.move(iFolder29, iFolder30);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertNotNull(eObject28);
	}

	@Test
	public void test0916() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0916"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList5 = zentaDiagramModel0
				.eContents();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel6 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.InternalEObject internalEObject7 = zentaDiagramModel0
				.eInternalContainer();
		java.lang.String str8 = zentaDiagramModel0.getDocumentation();
		int int9 = zentaDiagramModel0.getConnectionRouterType();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNotNull(eObjectList5);
		org.junit.Assert.assertNotNull(iDiagramModel6);
		org.junit.Assert.assertNull(internalEObject7);
		org.junit.Assert
				.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
	}

	@Test
	public void test0917() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0917"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		boolean boolean8 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		java.lang.Object obj13 = zentaDiagramModel0.eGet(4, true, false);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		java.lang.Object obj18 = zentaDiagramModel14.getAdapter(0L);
		int int19 = zentaDiagramModel14.getLineWidth();
		java.lang.String str20 = zentaDiagramModel14.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal21 = zentaDiagramModel14
				.eDirectResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal22 = zentaDiagramModel14
				.eInternalResource();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList23 = zentaDiagramModel14
				.eContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel24 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel24.setDocumentation("hi!");
		java.lang.Object obj28 = zentaDiagramModel24.getAdapter(0L);
		int int29 = zentaDiagramModel24.getLineWidth();
		java.lang.String str30 = zentaDiagramModel24.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal31 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain32 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain33 = zentaDiagramModel24
				.eSetResource(internal31, notificationChain32);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor34 = zentaDiagramModel24
				.eAllContents();
		org.eclipse.emf.ecore.EClass eClass35 = zentaDiagramModel24.eClass();
		zentaDiagramModel14.eSetClass(eClass35);
		org.eclipse.emf.common.notify.NotificationChain notificationChain38 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain39 = zentaDiagramModel0
					.eInverseRemove(zentaDiagramModel14, 0, notificationChain38);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -11 out of bounds for length 0"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert
				.assertEquals("'" + obj13 + "' != '" + 1 + "'", obj13, 1);
		org.junit.Assert.assertNull(obj18);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
		org.junit.Assert.assertEquals(
				"'" + str20 + "' != '" + "hi!" + "'", str20, "hi!"
		);
		org.junit.Assert.assertNull(internal21);
		org.junit.Assert.assertNull(internal22);
		org.junit.Assert.assertNotNull(eObjectList23);
		org.junit.Assert.assertNull(obj28);
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
		org.junit.Assert.assertEquals(
				"'" + str30 + "' != '" + "hi!" + "'", str30, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain33);
		org.junit.Assert.assertNotNull(eObjectItor34);
		org.junit.Assert.assertNotNull(eClass35);
	}

	@Test
	public void test0918() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0918"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList14 = zentaDiagramModel8
				.eAdapters();
		java.lang.Object obj15 = zentaDiagramModel0.eInvoke(0, adapterList14);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel19 = zentaDiagramModel16
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass20 = zentaDiagramModel16.eClass();
		zentaDiagramModel0.eSetClass(eClass20);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI23 = null;
		zentaDiagramModel22.eSetProxyURI(uRI23);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel25 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel25.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass28 = zentaDiagramModel25.eClass();
		zentaDiagramModel22.eSetClass(eClass28);
		boolean boolean30 = zentaDiagramModel0.eContains(zentaDiagramModel22);
		java.lang.Object obj34 = zentaDiagramModel22.eGet(10, false, false);
		zentaDiagramModel22.setConnectionRouterType(4);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(uRI6);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertNotNull(adapterList14);
		org.junit.Assert.assertNotNull(obj15);
		org.junit.Assert.assertNotNull(iDiagramModel19);
		org.junit.Assert.assertNotNull(eClass20);
		org.junit.Assert.assertNotNull(eClass28);
		org.junit.Assert.assertTrue(
				"'" + boolean30 + "' != '" + false + "'", boolean30 == false
		);
		org.junit.Assert
				.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
	}

	@Test
	public void test0919() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0919"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		boolean boolean5 = zentaDiagramModel0.eIsProxy();
		zentaDiagramModel0.setConnectionRouterType((short) 100);
		org.eclipse.emf.common.util.URI uRI8 = null;
		zentaDiagramModel0.eSetProxyURI(uRI8);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
	}

	@Test
	public void test0920() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0920"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource3 = zentaDiagramModel0
				.eResource();
		zentaDiagramModel0.checkId("hi!");
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.common.util.URI uRI8 = zentaDiagramModel0.eProxyURI();
		org.junit.Assert.assertNull(resource3);
		org.junit.Assert.assertNull(uRI8);
	}

	@Test
	public void test0921() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0921"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.Object obj12 = null;
		java.lang.Object obj13 = zentaDiagramModel0.getAdapter(obj12);
		org.eclipse.emf.ecore.InternalEObject internalEObject14 = zentaDiagramModel0
				.eInternalContainer();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert.assertNull(internalEObject14);
	}

	@Test
	public void test0922() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0922"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.ecore.EObject eObject5 = zentaDiagramModel0
				.eContainer();
		boolean boolean6 = zentaDiagramModel0.isTemplate();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj9 = zentaDiagramModel0
					.eGet(eStructuralFeature7, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eObject5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
	}

	@Test
	public void test0923() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0923"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel3 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore4 = zentaDiagramModel0
				.eStore();
		zentaDiagramModel0.eSetDeliver(false);
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject8 = zentaDiagramModel0
					.eObjectForURIFragmentSegment("");
			org.junit.Assert.fail(
					"Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(iDiagramModel3);
		org.junit.Assert.assertNull(eStore4);
	}

	@Test
	public void test0924() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0924"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.rulez.magwas.zenta.model.UndoState undoState10 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel11 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel11.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel11
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass15 = zentaDiagramModel11.eClass();
		zentaDiagramModel0.eSetClass(eClass15);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor17 = zentaDiagramModel0
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		int int21 = zentaDiagramModel18.eContainerFeatureID();
		java.lang.String str22 = zentaDiagramModel18.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel23 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel23.setDocumentation("hi!");
		int int26 = zentaDiagramModel23.eContainerFeatureID();
		java.lang.String str27 = zentaDiagramModel23.getName();
		zentaDiagramModel18.setAdapter(zentaDiagramModel23, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel30 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel30.setDocumentation("hi!");
		int int33 = zentaDiagramModel30.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel23
				.eResolveProxy(zentaDiagramModel30);
		java.lang.String str35 = zentaDiagramModel30.getName();
		org.eclipse.emf.ecore.EObject eObject36 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel30);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel37 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel37.setDocumentation("hi!");
		java.lang.Object obj41 = zentaDiagramModel37.getAdapter(0L);
		java.lang.String str42 = zentaDiagramModel37.getName();
		org.eclipse.emf.ecore.resource.Resource.Internal internal43 = zentaDiagramModel37
				.eInternalResource();
		zentaDiagramModel37.setLineWidth(10);
		org.eclipse.emf.common.notify.NotificationChain notificationChain47 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain48 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel37, (-1), notificationChain47
				);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList49 = zentaDiagramModel37
				.getProperties();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(undoState10);
		org.junit.Assert.assertNotNull(iDiagramModel14);
		org.junit.Assert.assertNotNull(eClass15);
		org.junit.Assert.assertNotNull(eObjectItor17);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
		org.junit.Assert
				.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
		org.junit.Assert
				.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
		org.junit.Assert.assertNotNull(eObject36);
		org.junit.Assert.assertNull(obj41);
		org.junit.Assert
				.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
		org.junit.Assert.assertNull(internal43);
		org.junit.Assert.assertNull(notificationChain48);
		org.junit.Assert.assertNotNull(iPropertyList49);
	}

	@Test
	public void test0925() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0925"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		int int9 = zentaDiagramModel0.getConnectionRouterType();
		boolean boolean10 = zentaDiagramModel0.isTemplate();
		org.eclipse.emf.common.notify.NotificationChain notificationChain11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain12 = zentaDiagramModel0
					.eBasicRemoveFromContainerFeature(notificationChain11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
	}

	@Test
	public void test0926() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0926"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setId("hi!");
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList13 = zentaDiagramModel0
				.eContents();
		zentaDiagramModel0.setConnectionRouterType(0);
		org.eclipse.emf.ecore.resource.Resource.Internal internal16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain18 = zentaDiagramModel0
				.eSetResource(internal16, notificationChain17);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj20 = zentaDiagramModel0.eVirtualUnset(0);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNotNull(eObjectList13);
		org.junit.Assert.assertNull(notificationChain18);
	}

	@Test
	public void test0927() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0927"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		int int10 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature11 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean12 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature11);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
	}

	@Test
	public void test0928() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0928"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		boolean boolean5 = zentaDiagramModel0.eDeliver();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature6 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset(eStructuralFeature6);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + true + "'", boolean5 == true
		);
	}

	@Test
	public void test0929() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0929"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList14 = zentaDiagramModel8
				.eAdapters();
		java.lang.Object obj15 = zentaDiagramModel0.eInvoke(0, adapterList14);
		org.eclipse.emf.common.util.URI uRI16 = zentaDiagramModel0.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel17 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		boolean boolean18 = zentaDiagramModel17.isDeleted();
		org.eclipse.emf.ecore.EObject eObject19 = zentaDiagramModel17.getCopy();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel20 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel20.setDocumentation("hi!");
		java.lang.Object obj24 = zentaDiagramModel20.getAdapter(0L);
		int int25 = zentaDiagramModel20.getLineWidth();
		java.lang.String str26 = zentaDiagramModel20.getId();
		java.lang.String str27 = zentaDiagramModel20.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel28 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel28.setDocumentation("hi!");
		java.lang.Object obj32 = zentaDiagramModel28.getAdapter(0L);
		int int33 = zentaDiagramModel28.getLineWidth();
		java.lang.String str34 = zentaDiagramModel28.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal35 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain36 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain37 = zentaDiagramModel28
				.eSetResource(internal35, notificationChain36);
		org.eclipse.emf.ecore.resource.Resource.Internal internal38 = zentaDiagramModel28
				.eInternalResource();
		zentaDiagramModel28.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel41 = zentaDiagramModel28
				.findDiagramModel();
		java.lang.String str42 = zentaDiagramModel28.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature43 = zentaDiagramModel28
				.eContainingFeature();
		boolean boolean44 = zentaDiagramModel28.isDeleted();
		org.eclipse.emf.ecore.EObject eObject45 = zentaDiagramModel20
				.eResolveProxy(zentaDiagramModel28);
		zentaDiagramModel28.setLineColor("hi!");
		org.eclipse.emf.ecore.EObject eObject48 = zentaDiagramModel17
				.eResolveProxy(zentaDiagramModel28);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel49 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel49.setDocumentation("hi!");
		int int52 = zentaDiagramModel49.eContainerFeatureID();
		java.lang.String str53 = zentaDiagramModel49.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel54 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel54.setDocumentation("hi!");
		int int57 = zentaDiagramModel54.eContainerFeatureID();
		java.lang.String str58 = zentaDiagramModel54.getName();
		zentaDiagramModel49.setAdapter(zentaDiagramModel54, 1L);
		boolean boolean61 = zentaDiagramModel28.eContains(zentaDiagramModel49);
		org.eclipse.emf.common.notify.NotificationChain notificationChain63 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain64 = zentaDiagramModel0
					.eInverseRemove(
							zentaDiagramModel28, (byte) 10, notificationChain63
					);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(uRI6);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertNotNull(adapterList14);
		org.junit.Assert.assertNotNull(obj15);
		org.junit.Assert.assertNull(uRI16);
		org.junit.Assert.assertTrue(
				"'" + boolean18 + "' != '" + true + "'", boolean18 == true
		);
		org.junit.Assert.assertNotNull(eObject19);
		org.junit.Assert.assertNull(obj24);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
		org.junit.Assert.assertNull(str26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertNull(obj32);
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
		org.junit.Assert.assertEquals(
				"'" + str34 + "' != '" + "hi!" + "'", str34, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain37);
		org.junit.Assert.assertNull(internal38);
		org.junit.Assert.assertNotNull(iDiagramModel41);
		org.junit.Assert.assertEquals(
				"'" + str42 + "' != '" + "hi!" + "'", str42, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature43);
		org.junit.Assert.assertTrue(
				"'" + boolean44 + "' != '" + true + "'", boolean44 == true
		);
		org.junit.Assert.assertNotNull(eObject45);
		org.junit.Assert.assertNotNull(eObject48);
		org.junit.Assert
				.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
		org.junit.Assert
				.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
		org.junit.Assert
				.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
		org.junit.Assert
				.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
		org.junit.Assert.assertTrue(
				"'" + boolean61 + "' != '" + false + "'", boolean61 == false
		);
	}

	@Test
	public void test0930() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0930"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		java.lang.String str14 = zentaDiagramModel5.getName();
		zentaDiagramModel5.setDocumentation("hi!");
		org.eclipse.emf.ecore.EReference eReference17 = zentaDiagramModel5
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList23 = zentaDiagramModel18
				.getChildren();
		org.eclipse.emf.ecore.resource.Resource.Internal internal24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = zentaDiagramModel18
				.eSetResource(internal24, notificationChain25);
		zentaDiagramModel18.setLineWidth((-1));
		int int29 = zentaDiagramModel18.getLineWidth();
		org.eclipse.emf.common.util.URI uRI30 = null;
		zentaDiagramModel18.eSetProxyURI(uRI30);
		java.lang.Object obj32 = zentaDiagramModel5.getAdapter(uRI30);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature33 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel34 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel34.setDocumentation("hi!");
		int int37 = zentaDiagramModel34.eContainerFeatureID();
		java.lang.String str38 = zentaDiagramModel34.getName();
		int int39 = zentaDiagramModel34.getViewpoint();
		zentaDiagramModel34.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification42 = null;
		zentaDiagramModel34.eNotify(notification42);
		org.rulez.magwas.zenta.model.UndoState undoState44 = zentaDiagramModel34
				.prepareDelete();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel5.eDynamicSet(eStructuralFeature33, undoState44);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert
				.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
		org.junit.Assert.assertNull(eReference17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList23);
		org.junit.Assert.assertNull(notificationChain26);
		org.junit.Assert
				.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
		org.junit.Assert.assertNull(obj32);
		org.junit.Assert
				.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
		org.junit.Assert
				.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
		org.junit.Assert
				.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
		org.junit.Assert.assertNotNull(undoState44);
	}

	@Test
	public void test0931() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0931"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass3 = zentaDiagramModel0.eClass();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList4 = zentaDiagramModel0
				.getProperties();
		zentaDiagramModel0.setName("");
		org.junit.Assert.assertNotNull(eClass3);
		org.junit.Assert.assertNotNull(iPropertyList4);
	}

	@Test
	public void test0932() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0932"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		zentaDiagramModel0.checkDocumentation("hi!");
		zentaDiagramModel0.checkDocumentation("hi!");
		zentaDiagramModel0.setChecked(false);
		org.eclipse.emf.common.notify.NotificationChain notificationChain10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain11 = zentaDiagramModel0
					.eDynamicBasicRemoveFromContainer(notificationChain10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
	}

	@Test
	public void test0933() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0933"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getName();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean9 = zentaDiagramModel0
					.eDynamicIsSet(eStructuralFeature8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
	}

	@Test
	public void test0934() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0934"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSetStore(eStore8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
	}

	@Test
	public void test0935() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0935"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.EOperation eOperation12 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int13 = zentaDiagramModel0.eDerivedOperationID(eOperation12);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + false + "'", boolean11 == false
		);
	}

	@Test
	public void test0936() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0936"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		int int17 = zentaDiagramModel12.eContainerFeatureID();
		zentaDiagramModel12.setLineWidth(0);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel12.eOpenUnset(eStructuralFeature20);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
	}

	@Test
	public void test0937() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0937"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore10 = zentaDiagramModel7
				.eStore();
		org.eclipse.emf.common.notify.Notification notification11 = null;
		zentaDiagramModel7.eNotify(notification11);
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore18 = zentaDiagramModel15
				.eStore();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, zentaDiagramModel15);
		boolean boolean20 = zentaDiagramModel15.eDeliver();
		zentaDiagramModel15.setLineWidth('#');
		zentaDiagramModel15.checkId("");
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNull(eStore10);
		org.junit.Assert.assertNull(eStore18);
		org.junit.Assert.assertTrue(
				"'" + boolean20 + "' != '" + true + "'", boolean20 == true
		);
	}

	@Test
	public void test0938() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0938"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource3 = zentaDiagramModel0
				.eResource();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.checkId("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj10 = zentaDiagramModel0
					.eGet(eStructuralFeature8, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(resource3);
	}

	@Test
	public void test0939() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0939"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setLineColor("hi!");
		boolean boolean8 = zentaDiagramModel0.isDeleted();
		zentaDiagramModel0.setDocumentation("");
		org.rulez.magwas.zenta.model.UndoState undoState11 = zentaDiagramModel0
				.prepareDelete();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		java.lang.String str16 = zentaDiagramModel12.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel17 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel17.setDocumentation("hi!");
		int int20 = zentaDiagramModel17.eContainerFeatureID();
		java.lang.String str21 = zentaDiagramModel17.getName();
		zentaDiagramModel12.setAdapter(zentaDiagramModel17, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel24 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel24.setDocumentation("hi!");
		int int27 = zentaDiagramModel24.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject28 = zentaDiagramModel17
				.eResolveProxy(zentaDiagramModel24);
		zentaDiagramModel17.setLineWidth(0);
		zentaDiagramModel17.setLineColor("");
		boolean boolean33 = zentaDiagramModel17.hasDiagramReferences();
		java.lang.String str34 = zentaDiagramModel17.getName();
		org.eclipse.emf.ecore.EObject eObject35 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel17);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + true + "'", boolean8 == true
		);
		org.junit.Assert.assertNotNull(undoState11);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert
				.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
		org.junit.Assert
				.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
		org.junit.Assert
				.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
		org.junit.Assert
				.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
		org.junit.Assert.assertNotNull(eObject28);
		org.junit.Assert.assertTrue(
				"'" + boolean33 + "' != '" + false + "'", boolean33 == false
		);
		org.junit.Assert
				.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
		org.junit.Assert.assertNotNull(eObject35);
	}

	@Test
	public void test0940() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0940"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		zentaDiagramModel0.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel9 = zentaDiagramModel0
				.getDiagramModel();
		boolean boolean10 = zentaDiagramModel0.eNotificationRequired();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj12 = zentaDiagramModel0.eVirtualGet((short) 10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel9);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
	}

	@Test
	public void test0941() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0941"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.util.URI uRI4 = null;
		zentaDiagramModel0.eSetProxyURI(uRI4);
		zentaDiagramModel0.checkDocumentation("");
		zentaDiagramModel0.setLineColor("");
		java.lang.String str10 = zentaDiagramModel0.toString();
		org.rulez.magwas.zenta.model.IFolder iFolder11 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder12 = null;
		zentaDiagramModel0.move(iFolder11, iFolder12);
		org.junit.Assert.assertNull(eStore3);
	}

	@Test
	public void test0942() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0942"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		boolean boolean8 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		java.lang.Object obj13 = zentaDiagramModel0.eGet(4, true, false);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj16 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature14, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert
				.assertEquals("'" + obj13 + "' != '" + 1 + "'", obj13, 1);
	}

	@Test
	public void test0943() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0943"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel3.eClass();
		zentaDiagramModel0.eSetClass(eClass6);
		org.eclipse.emf.ecore.resource.Resource resource8 = zentaDiagramModel0
				.eResource();
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert.assertNull(resource8);
	}

	@Test
	public void test0944() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0944"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		java.lang.Object obj9 = zentaDiagramModel5.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject10 = zentaDiagramModel5
				.eInternalContainer();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList11 = zentaDiagramModel5
				.eContents();
		java.lang.Object obj12 = zentaDiagramModel0.getAdapter(eObjectList11);
		org.eclipse.emf.ecore.EObject eObject13 = zentaDiagramModel0.getCopy();
		zentaDiagramModel0.setName("");
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertNull(obj9);
		org.junit.Assert.assertNull(internalEObject10);
		org.junit.Assert.assertNotNull(eObjectList11);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert.assertNotNull(eObject13);
	}

	@Test
	public void test0945() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0945"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		zentaDiagramModel0.setName("");
		java.lang.String str15 = zentaDiagramModel0.toString();
		zentaDiagramModel0.eSetDeliver(false);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList23 = zentaDiagramModel18
				.getChildren();
		zentaDiagramModel18.setLineColor("hi!");
		boolean boolean26 = zentaDiagramModel18.isDeleted();
		zentaDiagramModel18.setDocumentation("");
		org.rulez.magwas.zenta.model.UndoState undoState29 = zentaDiagramModel18
				.prepareDelete();
		org.rulez.magwas.zenta.model.UndoState undoState30 = zentaDiagramModel0
				.delete(undoState29);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList23);
		org.junit.Assert.assertTrue(
				"'" + boolean26 + "' != '" + true + "'", boolean26 == true
		);
		org.junit.Assert.assertNotNull(undoState29);
	}

	@Test
	public void test0946() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0946"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		zentaDiagramModel5.setLineWidth(0);
		zentaDiagramModel5.setConnectionRouterType(100);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj23 = zentaDiagramModel5
					.eOpenGet(eStructuralFeature21, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
	}

	@Test
	public void test0947() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0947"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel5
				.eSetResource(internal13, notificationChain14);
		org.eclipse.emf.common.util.URI uRI16 = zentaDiagramModel5.eProxyURI();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature17 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj18 = zentaDiagramModel5
					.eGet(eStructuralFeature17);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertNull(uRI16);
	}

	@Test
	public void test0948() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0948"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		int int10 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel11 = zentaDiagramModel0
				.findDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource15 = zentaDiagramModel12
				.eResource();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel12
				.eContainer();
		org.eclipse.emf.ecore.InternalEObject internalEObject17 = zentaDiagramModel12
				.eInternalContainer();
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain20 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel12, '#', notificationChain19
				);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList21 = zentaDiagramModel0
				.getProperties();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eDynamicUnset(' ');
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel11);
		org.junit.Assert.assertNull(resource15);
		org.junit.Assert.assertNull(eObject16);
		org.junit.Assert.assertNull(internalEObject17);
		org.junit.Assert.assertNull(notificationChain20);
		org.junit.Assert.assertNotNull(iPropertyList21);
	}

	@Test
	public void test0949() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0949"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.eclipse.emf.ecore.EOperation eOperation12 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int13 = zentaDiagramModel0.eDerivedOperationID(eOperation12);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
	}

	@Test
	public void test0950() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0950"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		int int13 = zentaDiagramModel5.getViewpoint();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList14 = zentaDiagramModel5
				.getProperties();
		zentaDiagramModel5.setId("");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature17 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj19 = zentaDiagramModel5
					.eOpenGet(eStructuralFeature17, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNotNull(iPropertyList14);
	}

	@Test
	public void test0951() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0951"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		boolean boolean5 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.EObject eObject6 = zentaDiagramModel0
				.eContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		int int10 = zentaDiagramModel7.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal11 = zentaDiagramModel7
				.eInternalResource();
		java.lang.String str12 = zentaDiagramModel7.getDocumentation();
		boolean boolean13 = zentaDiagramModel7.isChecked();
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel16 = zentaDiagramModel7
				.getDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel17 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel17.setDocumentation("hi!");
		java.lang.Object obj21 = zentaDiagramModel17.getAdapter(0L);
		int int22 = zentaDiagramModel17.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor23 = zentaDiagramModel17
				.eAllContents();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, eObjectItor23);
		org.eclipse.emf.ecore.InternalEObject internalEObject25 = zentaDiagramModel7
				.eInternalContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel26 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel26.setDocumentation("hi!");
		java.lang.Object obj30 = zentaDiagramModel26.getAdapter(0L);
		int int31 = zentaDiagramModel26.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList32 = zentaDiagramModel26
				.eAdapters();
		int int33 = zentaDiagramModel26.getViewpoint();
		org.eclipse.emf.ecore.EReference eReference34 = zentaDiagramModel26
				.eContainmentFeature();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature35 = zentaDiagramModel26
				.eContainingFeature();
		org.eclipse.emf.ecore.resource.Resource resource36 = zentaDiagramModel26
				.eResource();
		org.eclipse.emf.ecore.EObject eObject37 = zentaDiagramModel26
				.eContainer();
		org.eclipse.emf.common.notify.NotificationChain notificationChain39 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain40 = zentaDiagramModel7
					.eInverseAdd(
							zentaDiagramModel26, (short) 10, notificationChain39
					);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNull(eObject6);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
		org.junit.Assert.assertNull(internal11);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel16);
		org.junit.Assert.assertNull(obj21);
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
		org.junit.Assert.assertNotNull(eObjectItor23);
		org.junit.Assert.assertNull(internalEObject25);
		org.junit.Assert.assertNull(obj30);
		org.junit.Assert
				.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
		org.junit.Assert.assertNotNull(adapterList32);
		org.junit.Assert
				.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
		org.junit.Assert.assertNull(eReference34);
		org.junit.Assert.assertNull(eStructuralFeature35);
		org.junit.Assert.assertNull(resource36);
		org.junit.Assert.assertNull(eObject37);
	}

	@Test
	public void test0952() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0952"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		boolean boolean5 = zentaDiagramModel0.eDeliver();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + true + "'", boolean5 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
	}

	@Test
	public void test0953() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0953"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList5 = zentaDiagramModel0
				.eAdapters();
		java.lang.String str6 = zentaDiagramModel0.getLineColor();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj9 = zentaDiagramModel0
					.eDynamicGet(eStructuralFeature7, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(adapterList5);
		org.junit.Assert.assertNull(str6);
	}

	@Test
	public void test0954() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0954"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = zentaDiagramModel0
				.eDirectResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList9 = zentaDiagramModel0
				.eContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		java.lang.Object obj14 = zentaDiagramModel10.getAdapter(0L);
		int int15 = zentaDiagramModel10.getLineWidth();
		java.lang.String str16 = zentaDiagramModel10.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal17 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain18 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain19 = zentaDiagramModel10
				.eSetResource(internal17, notificationChain18);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor20 = zentaDiagramModel10
				.eAllContents();
		org.eclipse.emf.ecore.EClass eClass21 = zentaDiagramModel10.eClass();
		zentaDiagramModel0.eSetClass(eClass21);
		org.eclipse.emf.ecore.EOperation eOperation23 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int24 = zentaDiagramModel0.eDerivedOperationID(eOperation23);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(internal7);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert.assertNotNull(eObjectList9);
		org.junit.Assert.assertNull(obj14);
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
		org.junit.Assert.assertEquals(
				"'" + str16 + "' != '" + "hi!" + "'", str16, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain19);
		org.junit.Assert.assertNotNull(eObjectItor20);
		org.junit.Assert.assertNotNull(eClass21);
	}

	@Test
	public void test0955() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0955"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.hasDiagramReferences();
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting10 = zentaDiagramModel0
					.eSetting(eStructuralFeature9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
	}

	@Test
	public void test0956() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0956"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.getDiagramModel();
		java.lang.Class<?> wildcardClass8 = iDiagramModel7.getClass();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
		org.junit.Assert.assertNotNull(wildcardClass8);
	}

	@Test
	public void test0957() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0957"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		zentaDiagramModel5.eUnset((byte) 10);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList14 = zentaDiagramModel5
				.getProperties();
		zentaDiagramModel5.setLineWidth(10);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj18 = zentaDiagramModel5.eVirtualUnset(1);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNotNull(iPropertyList14);
	}

	@Test
	public void test0958() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0958"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		int int10 = zentaDiagramModel0.getLineWidth();
		zentaDiagramModel0.initId();
		zentaDiagramModel0.setConnectionRouterType(0);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setDocumentation("hi!");
		java.lang.Object obj18 = zentaDiagramModel14.getAdapter(0L);
		int int19 = zentaDiagramModel14.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor20 = zentaDiagramModel14
				.eAllContents();
		zentaDiagramModel14.eSetDeliver(false);
		org.rulez.magwas.zenta.model.UndoState undoState23 = zentaDiagramModel14
				.prepareDelete();
		org.rulez.magwas.zenta.model.UndoState undoState24 = zentaDiagramModel0
				.delete(undoState23);
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
		org.junit.Assert.assertNull(obj18);
		org.junit.Assert
				.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
		org.junit.Assert.assertNotNull(eObjectItor20);
		org.junit.Assert.assertNotNull(undoState23);
	}

	@Test
	public void test0959() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0959"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource3 = zentaDiagramModel0
				.eResource();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		org.eclipse.emf.ecore.EObject eObject6 = zentaDiagramModel0.getCopy();
		boolean boolean7 = zentaDiagramModel0.isDeleted();
		org.junit.Assert.assertNull(resource3);
		org.junit.Assert.assertNotNull(eObject6);
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + true + "'", boolean7 == true
		);
	}

	@Test
	public void test0960() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0960"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		org.eclipse.emf.ecore.InternalEObject internalEObject13 = zentaDiagramModel5
				.eInternalContainer();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel14 = zentaDiagramModel5
				.getDiagramModel();
		zentaDiagramModel5.checkDocumentation("");
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert.assertNull(internalEObject13);
		org.junit.Assert.assertNotNull(iDiagramModel14);
	}

	@Test
	public void test0961() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0961"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		zentaDiagramModel5.setLineWidth(0);
		zentaDiagramModel5.eSetDeliver(true);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature21 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		java.lang.Object obj26 = zentaDiagramModel22.getAdapter(0L);
		int int27 = zentaDiagramModel22.getLineWidth();
		java.lang.String str28 = zentaDiagramModel22.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal29 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain30 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain31 = zentaDiagramModel22
				.eSetResource(internal29, notificationChain30);
		org.eclipse.emf.ecore.resource.Resource.Internal internal32 = zentaDiagramModel22
				.eInternalResource();
		zentaDiagramModel22.setName("");
		zentaDiagramModel22.setName("");
		int int37 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject38 = zentaDiagramModel22
				.eContainer();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList39 = zentaDiagramModel22
				.eContents();
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel5
					.eDynamicSet(eStructuralFeature21, zentaDiagramModel22);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert.assertNull(obj26);
		org.junit.Assert
				.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
		org.junit.Assert.assertEquals(
				"'" + str28 + "' != '" + "hi!" + "'", str28, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain31);
		org.junit.Assert.assertNull(internal32);
		org.junit.Assert
				.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
		org.junit.Assert.assertNull(eObject38);
		org.junit.Assert.assertNotNull(eObjectList39);
	}

	@Test
	public void test0962() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0962"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		boolean boolean8 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.resource.Resource.Internal internal9 = zentaDiagramModel0
				.eInternalResource();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel10.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore13 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel10.eNotify(notification14);
		zentaDiagramModel10.setName("hi!");
		int int18 = zentaDiagramModel10.getViewpoint();
		org.eclipse.emf.ecore.EObject eObject19 = zentaDiagramModel10
				.eContainer();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore20 = zentaDiagramModel10
				.eStore();
		org.eclipse.emf.common.notify.NotificationChain notificationChain22 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain23 = zentaDiagramModel0
				.eBasicSetContainer(zentaDiagramModel10, 2, notificationChain22);
		zentaDiagramModel10.checkDocumentation("");
		org.eclipse.emf.ecore.EObject eObject26 = zentaDiagramModel10
				.eContainer();
		zentaDiagramModel10.setViewpoint('a');
		org.eclipse.emf.ecore.EReference eReference29 = zentaDiagramModel10
				.eContainmentFeature();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertTrue(
				"'" + boolean8 + "' != '" + false + "'", boolean8 == false
		);
		org.junit.Assert.assertNull(internal9);
		org.junit.Assert.assertNull(eStore13);
		org.junit.Assert
				.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
		org.junit.Assert.assertNull(eObject19);
		org.junit.Assert.assertNull(eStore20);
		org.junit.Assert.assertNull(notificationChain23);
		org.junit.Assert.assertNull(eObject26);
		org.junit.Assert.assertNull(eReference29);
	}

	@Test
	public void test0963() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0963"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel10 = zentaDiagramModel7
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass11 = zentaDiagramModel7.eClass();
		boolean boolean13 = zentaDiagramModel7.eIsSet((short) 10);
		boolean boolean14 = zentaDiagramModel7.eDeliver();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		java.lang.Object obj19 = zentaDiagramModel15.getAdapter(0L);
		int int20 = zentaDiagramModel15.getLineWidth();
		java.lang.String str21 = zentaDiagramModel15.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList22 = zentaDiagramModel15
				.getChildren();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel23 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel23.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass26 = zentaDiagramModel23.eClass();
		zentaDiagramModel15.eSetClass(eClass26);
		zentaDiagramModel7.eSetClass(eClass26);
		zentaDiagramModel0.eSetClass(eClass26);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature30 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean31 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature30);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel10);
		org.junit.Assert.assertNotNull(eClass11);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert
				.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
		org.junit.Assert.assertEquals(
				"'" + str21 + "' != '" + "hi!" + "'", str21, "hi!"
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList22);
		org.junit.Assert.assertNotNull(eClass26);
	}

	@Test
	public void test0964() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0964"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor11 = zentaDiagramModel4
				.eAllContents();
		org.eclipse.emf.ecore.EClass eClass12 = zentaDiagramModel4.eClass();
		org.rulez.magwas.zenta.model.IFolder iFolder13 = null;
		org.rulez.magwas.zenta.model.IFolder iFolder14 = null;
		zentaDiagramModel4.move(iFolder13, iFolder14);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor11);
		org.junit.Assert.assertNotNull(eClass12);
	}

	@Test
	public void test0965() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0965"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		int int7 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI9 = null;
		zentaDiagramModel8.eSetProxyURI(uRI9);
		zentaDiagramModel8.setLineWidth((short) -1);
		boolean boolean13 = zentaDiagramModel8.eNotificationRequired();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel14 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel14.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel17 = zentaDiagramModel14
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass18 = zentaDiagramModel14.eClass();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI20 = null;
		zentaDiagramModel19.eSetProxyURI(uRI20);
		zentaDiagramModel19.setLineWidth((short) -1);
		org.eclipse.emf.ecore.EObject eObject24 = zentaDiagramModel19
				.eContainer();
		zentaDiagramModel8.setAdapter(eClass18, eObject24);
		zentaDiagramModel8.eSetDeliver(false);
		org.eclipse.emf.common.notify.NotificationChain notificationChain29 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain30 = zentaDiagramModel0
					.eInverseRemove(zentaDiagramModel8, '#', notificationChain29);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel17);
		org.junit.Assert.assertNotNull(eClass18);
		org.junit.Assert.assertNull(eObject24);
	}

	@Test
	public void test0966() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0966"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting9 = zentaDiagramModel0
					.eSetting(eStructuralFeature8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
	}

	@Test
	public void test0967() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0967"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		int int15 = zentaDiagramModel12.eContainerFeatureID();
		org.eclipse.emf.ecore.EObject eObject16 = zentaDiagramModel5
				.eResolveProxy(zentaDiagramModel12);
		int int17 = zentaDiagramModel12.eContainerFeatureID();
		zentaDiagramModel12.setLineWidth(0);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel21 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel21.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore24 = zentaDiagramModel21
				.eStore();
		org.eclipse.emf.common.notify.Notification notification25 = null;
		zentaDiagramModel21.eNotify(notification25);
		int int27 = zentaDiagramModel21.getViewpoint();
		int int28 = zentaDiagramModel21.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel29 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel29.setDocumentation("hi!");
		int int32 = zentaDiagramModel29.eContainerFeatureID();
		java.lang.String str33 = zentaDiagramModel29.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel34 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel34.setDocumentation("hi!");
		int int37 = zentaDiagramModel34.eContainerFeatureID();
		java.lang.String str38 = zentaDiagramModel34.getName();
		zentaDiagramModel29.setAdapter(zentaDiagramModel34, 1L);
		java.lang.String str41 = zentaDiagramModel34.getId();
		int int42 = zentaDiagramModel34.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel43 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel43.setDocumentation("hi!");
		int int46 = zentaDiagramModel43.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal47 = zentaDiagramModel43
				.eInternalResource();
		java.lang.String str48 = zentaDiagramModel43.getDocumentation();
		boolean boolean49 = zentaDiagramModel43.isChecked();
		zentaDiagramModel43.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel52 = zentaDiagramModel43
				.findDiagramModel();
		zentaDiagramModel21
				.setAdapter(zentaDiagramModel34, zentaDiagramModel43);
		org.eclipse.emf.ecore.resource.Resource resource54 = zentaDiagramModel43
				.eResource();
		zentaDiagramModel43.setDocumentation("hi!");
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel58 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel58.setDocumentation("hi!");
		java.lang.Object obj62 = zentaDiagramModel58.getAdapter(0L);
		int int63 = zentaDiagramModel58.getLineWidth();
		java.lang.String str64 = zentaDiagramModel58.getDocumentation();
		org.eclipse.emf.ecore.EObject eObject65 = zentaDiagramModel58.getCopy();
		int int66 = zentaDiagramModel58.eContainerFeatureID();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList67 = zentaDiagramModel58
				.eAdapters();
		java.lang.Object obj68 = zentaDiagramModel43.eInvoke(0, adapterList67);
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel12
					.eDynamicSet(eStructuralFeature20, zentaDiagramModel43);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert
				.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
		org.junit.Assert.assertNotNull(eObject16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
		org.junit.Assert.assertNull(eStore24);
		org.junit.Assert
				.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
		org.junit.Assert
				.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
		org.junit.Assert
				.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
		org.junit.Assert
				.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
		org.junit.Assert
				.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
		org.junit.Assert
				.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
		org.junit.Assert.assertNull(str41);
		org.junit.Assert
				.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
		org.junit.Assert
				.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
		org.junit.Assert.assertNull(internal47);
		org.junit.Assert.assertEquals(
				"'" + str48 + "' != '" + "hi!" + "'", str48, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean49 + "' != '" + false + "'", boolean49 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel52);
		org.junit.Assert.assertNull(resource54);
		org.junit.Assert.assertNull(obj62);
		org.junit.Assert
				.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
		org.junit.Assert.assertEquals(
				"'" + str64 + "' != '" + "hi!" + "'", str64, "hi!"
		);
		org.junit.Assert.assertNotNull(eObject65);
		org.junit.Assert
				.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
		org.junit.Assert.assertNotNull(adapterList67);
		org.junit.Assert.assertNotNull(obj68);
	}

	@Test
	public void test0968() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0968"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EReference eReference11 = zentaDiagramModel0
				.eContainmentFeature();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj13 = zentaDiagramModel0
					.eVirtualUnset((short) 10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
		org.junit.Assert.assertNull(eReference11);
	}

	@Test
	public void test0969() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0969"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		java.lang.String str14 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal15 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain16 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain17 = zentaDiagramModel8
				.eSetResource(internal15, notificationChain16);
		org.eclipse.emf.ecore.resource.Resource.Internal internal18 = zentaDiagramModel8
				.eInternalResource();
		zentaDiagramModel8.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel21 = zentaDiagramModel8
				.findDiagramModel();
		java.lang.String str22 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature23 = zentaDiagramModel8
				.eContainingFeature();
		boolean boolean24 = zentaDiagramModel8.isDeleted();
		org.eclipse.emf.ecore.EObject eObject25 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel8);
		java.lang.String str26 = zentaDiagramModel8.getDocumentation();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore27 = zentaDiagramModel8
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList28 = zentaDiagramModel8
				.eContents();
		// The following exception was thrown during execution in test
		// generation
		try {
			org.rulez.magwas.zenta.model.IFolder iFolder29 = zentaDiagramModel8
					.getParentFolder();
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertEquals(
				"'" + str14 + "' != '" + "hi!" + "'", str14, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain17);
		org.junit.Assert.assertNull(internal18);
		org.junit.Assert.assertNotNull(iDiagramModel21);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(eStructuralFeature23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNotNull(eObject25);
		org.junit.Assert.assertEquals(
				"'" + str26 + "' != '" + "hi!" + "'", str26, "hi!"
		);
		org.junit.Assert.assertNull(eStore27);
		org.junit.Assert.assertNotNull(eObjectList28);
	}

	@Test
	public void test0970() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0970"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList6 = zentaDiagramModel0
				.eAdapters();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel7 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.InternalEObject internalEObject8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain10 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain11 = zentaDiagramModel0
					.eInverseAdd(internalEObject8, 0, notificationChain10);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -11 out of bounds for length 0"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNotNull(adapterList6);
		org.junit.Assert.assertNotNull(iDiagramModel7);
	}

	@Test
	public void test0971() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0971"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel3 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel3.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass6 = zentaDiagramModel3.eClass();
		zentaDiagramModel0.eSetClass(eClass6);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		boolean boolean12 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel0
				.eBasicSetContainer(
						zentaDiagramModel8, (short) 0, notificationChain14
				);
		boolean boolean16 = zentaDiagramModel8.eNotificationRequired();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList17 = zentaDiagramModel8
				.getChildren();
		org.eclipse.emf.ecore.EReference eReference18 = zentaDiagramModel8
				.eContainmentFeature();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj22 = zentaDiagramModel8
					.eDynamicGet(0, false, true);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNotNull(eClass6);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert.assertNull(notificationChain15);
		org.junit.Assert.assertTrue(
				"'" + boolean16 + "' != '" + false + "'", boolean16 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList17);
		org.junit.Assert.assertNull(eReference18);
	}

	@Test
	public void test0972() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0972"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification8 = null;
		zentaDiagramModel0.eNotify(notification8);
		zentaDiagramModel0.setName("hi!");
		java.lang.String str12 = zentaDiagramModel0.getName();
		zentaDiagramModel0.setId("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean16 = false; // flaky: zentaDiagramModel0.eIsSet((int)
										// (short) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
	}

	@Test
	public void test0973() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0973"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		java.lang.Object obj13 = zentaDiagramModel0.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification14 = null;
		zentaDiagramModel0.eNotify(notification14);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel16 = zentaDiagramModel0
				.findDiagramModel();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature17 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			int int18 = zentaDiagramModel0
					.eDerivedStructuralFeatureID(eStructuralFeature17);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert.assertNotNull(iDiagramModel16);
	}

	@Test
	public void test0974() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0974"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.Object obj12 = null;
		java.lang.Object obj13 = zentaDiagramModel0.getAdapter(obj12);
		java.lang.String str14 = zentaDiagramModel0.getName();
		java.lang.String str15 = zentaDiagramModel0.getName();
		zentaDiagramModel0.setConnectionRouterType((short) 10);
		boolean boolean18 = zentaDiagramModel0.isDeleted();
		java.lang.String str19 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature20 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset(eStructuralFeature20);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(obj13);
		org.junit.Assert
				.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
		org.junit.Assert
				.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
		org.junit.Assert.assertTrue(
				"'" + boolean18 + "' != '" + true + "'", boolean18 == true
		);
		org.junit.Assert.assertEquals(
				"'" + str19 + "' != '" + "hi!" + "'", str19, "hi!"
		);
	}

	@Test
	public void test0975() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0975"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList5 = zentaDiagramModel0
				.eContents();
		int int6 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		java.lang.Object obj11 = zentaDiagramModel7.getAdapter(0L);
		org.eclipse.emf.ecore.InternalEObject internalEObject12 = zentaDiagramModel7
				.eInternalContainer();
		boolean boolean13 = zentaDiagramModel7.isChecked();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor14 = zentaDiagramModel7
				.eAllContents();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore19 = zentaDiagramModel16
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList20 = zentaDiagramModel16
				.eAdapters();
		java.lang.Object obj21 = zentaDiagramModel7
				.eInvoke((short) 0, adapterList20);
		java.lang.Object obj22 = zentaDiagramModel0.getAdapter(adapterList20);
		int int23 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel24 = zentaDiagramModel0
				.getDiagramModel();
		iDiagramModel24.checkDocumentation("hi!");
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertNotNull(eObjectList5);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertNull(obj11);
		org.junit.Assert.assertNull(internalEObject12);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
		org.junit.Assert.assertNotNull(eObjectItor14);
		org.junit.Assert.assertNull(eStore19);
		org.junit.Assert.assertNotNull(adapterList20);
		org.junit.Assert.assertNotNull(obj21);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
		org.junit.Assert.assertNotNull(iDiagramModel24);
	}

	@Test
	public void test0976() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0976"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.resource.Resource resource3 = zentaDiagramModel0
				.eResource();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		org.eclipse.emf.ecore.EObject eObject6 = zentaDiagramModel0.getCopy();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature7 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj8 = zentaDiagramModel0
					.eGet(eStructuralFeature7);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(resource3);
		org.junit.Assert.assertNotNull(eObject6);
	}

	@Test
	public void test0977() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0977"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getId();
		java.lang.String str7 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.InternalEObject internalEObject8 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EObject eObject9 = zentaDiagramModel0
					.eResolveProxy(internalEObject8);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertNull(str6);
		org.junit.Assert
				.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
	}

	@Test
	public void test0978() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0978"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.eSetDeliver(true);
		org.eclipse.emf.common.notify.Notification notification8 = null;
		zentaDiagramModel0.eNotify(notification8);
		zentaDiagramModel0.setName("hi!");
		int int12 = zentaDiagramModel0.eContainerFeatureID();
		int int13 = zentaDiagramModel0.getConnectionRouterType();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList14 = zentaDiagramModel0
				.eContents();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert
				.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNotNull(eObjectList14);
	}

	@Test
	public void test0979() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0979"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature4 = zentaDiagramModel0
				.eContainingFeature();
		int int5 = zentaDiagramModel0.getConnectionRouterType();
		zentaDiagramModel0.setLineWidth((short) 1);
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel0
				.eDirectResource();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(eStructuralFeature4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(internal8);
	}

	@Test
	public void test0980() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0980"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setName("");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel13 = zentaDiagramModel0
				.findDiagramModel();
		boolean boolean14 = zentaDiagramModel0.isDeleted();
		zentaDiagramModel0.checkName("");
		org.eclipse.emf.ecore.EOperation eOperation17 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI19 = null;
		zentaDiagramModel18.eSetProxyURI(uRI19);
		zentaDiagramModel18.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList23 = zentaDiagramModel18
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj24 = zentaDiagramModel0
					.eInvoke(eOperation17, adapterList23);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertNotNull(iDiagramModel13);
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + true + "'", boolean14 == true
		);
		org.junit.Assert.assertNotNull(adapterList23);
	}

	@Test
	public void test0981() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0981"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		zentaDiagramModel0.setConnectionRouterType('4');
		int int8 = zentaDiagramModel0.getViewpoint();
		boolean boolean9 = zentaDiagramModel0.eNotificationRequired();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel10 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI11 = null;
		zentaDiagramModel10.eSetProxyURI(uRI11);
		zentaDiagramModel10.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList15 = zentaDiagramModel10
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setDocumentation("hi!");
		java.lang.Object obj20 = zentaDiagramModel16.getAdapter(0L);
		int int21 = zentaDiagramModel16.getLineWidth();
		java.lang.String str22 = zentaDiagramModel16.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain25 = zentaDiagramModel16
				.eSetResource(internal23, notificationChain24);
		java.lang.Object obj29 = zentaDiagramModel16.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification30 = null;
		zentaDiagramModel16.eNotify(notification30);
		org.eclipse.emf.ecore.EObject eObject32 = zentaDiagramModel10
				.eResolveProxy(zentaDiagramModel16);
		org.eclipse.emf.ecore.EObject eObject33 = zentaDiagramModel0
				.eResolveProxy(zentaDiagramModel16);
		java.lang.String str34 = zentaDiagramModel0.getName();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean9 + "' != '" + false + "'", boolean9 == false
		);
		org.junit.Assert.assertNotNull(adapterList15);
		org.junit.Assert.assertNull(obj20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
		org.junit.Assert.assertEquals(
				"'" + str22 + "' != '" + "hi!" + "'", str22, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain25);
		org.junit.Assert.assertNull(obj29);
		org.junit.Assert.assertNotNull(eObject32);
		org.junit.Assert.assertNotNull(eObject33);
		org.junit.Assert
				.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
	}

	@Test
	public void test0982() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0982"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		java.lang.String str5 = zentaDiagramModel0.getDocumentation();
		boolean boolean6 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EObject> eObjectList7 = zentaDiagramModel0
				.eContents();
		zentaDiagramModel0.initId();
		org.eclipse.emf.ecore.InternalEObject.EStore eStore9 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eSetStore(eStore9);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert
				.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eObjectList7);
	}

	@Test
	public void test0983() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0983"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		org.eclipse.emf.ecore.EObject eObject5 = zentaDiagramModel0
				.eContainer();
		boolean boolean6 = zentaDiagramModel0.isTemplate();
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList9 = zentaDiagramModel0
				.getChildren();
		org.junit.Assert.assertNull(eObject5);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList9);
	}

	@Test
	public void test0984() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0984"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel5 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel5.setDocumentation("hi!");
		int int8 = zentaDiagramModel5.eContainerFeatureID();
		java.lang.String str9 = zentaDiagramModel5.getName();
		zentaDiagramModel0.setAdapter(zentaDiagramModel5, 1L);
		java.lang.String str12 = zentaDiagramModel5.getId();
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain14 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain15 = zentaDiagramModel5
				.eSetResource(internal13, notificationChain14);
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean17 = zentaDiagramModel5.eVirtualIsSet(0);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.UnsupportedOperationException; message: null"
			);
		} catch (java.lang.UnsupportedOperationException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
		org.junit.Assert.assertNull(str12);
		org.junit.Assert.assertNull(notificationChain15);
	}

	@Test
	public void test0985() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0985"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		zentaDiagramModel0.setName("hi!");
		int int8 = zentaDiagramModel0.getViewpoint();
		zentaDiagramModel0.setName("hi!");
		zentaDiagramModel0.setId("hi!");
		org.eclipse.emf.ecore.resource.Resource.Internal internal13 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.checkId("hi!");
		org.rulez.magwas.zenta.model.UndoState undoState16 = zentaDiagramModel0
				.delete();
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
		org.junit.Assert.assertNull(internal13);
	}

	@Test
	public void test0986() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0986"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel4 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel4.setDocumentation("hi!");
		int int7 = zentaDiagramModel4.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal8 = zentaDiagramModel4
				.eInternalResource();
		java.lang.String str9 = zentaDiagramModel4.getDocumentation();
		boolean boolean10 = zentaDiagramModel0.eContains(zentaDiagramModel4);
		boolean boolean11 = zentaDiagramModel0.isDeleted();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI13 = null;
		zentaDiagramModel12.eSetProxyURI(uRI13);
		zentaDiagramModel12.setLineWidth((short) -1);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList17 = zentaDiagramModel12
				.eAdapters();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel18 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel18.setDocumentation("hi!");
		java.lang.Object obj22 = zentaDiagramModel18.getAdapter(0L);
		int int23 = zentaDiagramModel18.getLineWidth();
		java.lang.String str24 = zentaDiagramModel18.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal25 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain26 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain27 = zentaDiagramModel18
				.eSetResource(internal25, notificationChain26);
		java.lang.Object obj31 = zentaDiagramModel18.eGet(2, false, false);
		org.eclipse.emf.common.notify.Notification notification32 = null;
		zentaDiagramModel18.eNotify(notification32);
		org.eclipse.emf.ecore.EObject eObject34 = zentaDiagramModel12
				.eResolveProxy(zentaDiagramModel18);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal39 = zentaDiagramModel35
				.eInternalResource();
		java.lang.String str40 = zentaDiagramModel35.getDocumentation();
		boolean boolean41 = zentaDiagramModel35.isChecked();
		zentaDiagramModel35.setName("hi!");
		int int44 = zentaDiagramModel35.getConnectionRouterType();
		zentaDiagramModel0.setAdapter(zentaDiagramModel18, zentaDiagramModel35);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel46 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel46.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass49 = zentaDiagramModel46.eClass();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IProperty> iPropertyList50 = zentaDiagramModel46
				.getProperties();
		java.lang.Object obj54 = zentaDiagramModel46
				.eGet((short) 1, false, true);
		boolean boolean55 = zentaDiagramModel35.eContains(zentaDiagramModel46);
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean57 = zentaDiagramModel46.eDynamicIsSet(97);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert.assertNull(internal8);
		org.junit.Assert
				.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + false + "'", boolean10 == false
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertNotNull(adapterList17);
		org.junit.Assert.assertNull(obj22);
		org.junit.Assert
				.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
		org.junit.Assert.assertEquals(
				"'" + str24 + "' != '" + "hi!" + "'", str24, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain27);
		org.junit.Assert.assertNull(obj31);
		org.junit.Assert.assertNotNull(eObject34);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert.assertNull(internal39);
		org.junit.Assert.assertEquals(
				"'" + str40 + "' != '" + "hi!" + "'", str40, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean41 + "' != '" + false + "'", boolean41 == false
		);
		org.junit.Assert
				.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
		org.junit.Assert.assertNotNull(eClass49);
		org.junit.Assert.assertNotNull(iPropertyList50);
		org.junit.Assert
				.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
		org.junit.Assert.assertTrue(
				"'" + boolean55 + "' != '" + false + "'", boolean55 == false
		);
	}

	@Test
	public void test0987() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0987"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.ecore.resource.Resource.Internal internal10 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.common.util.URI uRI11 = null;
		zentaDiagramModel0.eSetProxyURI(uRI11);
		zentaDiagramModel0.checkDocumentation("");
		boolean boolean15 = zentaDiagramModel0.hasDiagramReferences();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNull(internal10);
		org.junit.Assert.assertTrue(
				"'" + boolean15 + "' != '" + false + "'", boolean15 == false
		);
	}

	@Test
	public void test0988() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0988"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain9 = zentaDiagramModel0
				.eSetResource(internal7, notificationChain8);
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor10 = zentaDiagramModel0
				.eAllContents();
		org.eclipse.emf.ecore.EReference eReference11 = zentaDiagramModel0
				.eContainmentFeature();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel12 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel12.setDocumentation("hi!");
		java.lang.Object obj16 = zentaDiagramModel12.getAdapter(0L);
		int int17 = zentaDiagramModel12.getLineWidth();
		java.lang.String str18 = zentaDiagramModel12.getId();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel19 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel19.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore22 = zentaDiagramModel19
				.eStore();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList23 = zentaDiagramModel19
				.eAdapters();
		boolean boolean24 = zentaDiagramModel19.eDeliver();
		java.lang.Object obj25 = zentaDiagramModel12
				.getAdapter(zentaDiagramModel19);
		org.eclipse.emf.ecore.EClass eClass26 = zentaDiagramModel19.eClass();
		zentaDiagramModel0.eSetClass(eClass26);
		int int28 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature29 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			zentaDiagramModel0.eUnset(eStructuralFeature29);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNull(notificationChain9);
		org.junit.Assert.assertNotNull(eObjectItor10);
		org.junit.Assert.assertNull(eReference11);
		org.junit.Assert.assertNull(obj16);
		org.junit.Assert
				.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
		org.junit.Assert.assertNull(str18);
		org.junit.Assert.assertNull(eStore22);
		org.junit.Assert.assertNotNull(adapterList23);
		org.junit.Assert.assertTrue(
				"'" + boolean24 + "' != '" + true + "'", boolean24 == true
		);
		org.junit.Assert.assertNull(obj25);
		org.junit.Assert.assertNotNull(eClass26);
		org.junit.Assert
				.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
	}

	@Test
	public void test0989() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0989"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList7 = zentaDiagramModel0
				.getChildren();
		zentaDiagramModel0.setId("hi!");
		zentaDiagramModel0.setName("hi!");
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList12 = zentaDiagramModel0
				.getChildren();
		boolean boolean13 = zentaDiagramModel0.eIsProxy();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature14 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			boolean boolean15 = zentaDiagramModel0
					.eOpenIsSet(eStructuralFeature14);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertNotNull(iDiagramModelObjectList7);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList12);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
	}

	@Test
	public void test0990() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0990"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		org.eclipse.emf.common.util.EList<org.rulez.magwas.zenta.model.IDiagramModelObject> iDiagramModelObjectList5 = zentaDiagramModel0
				.getChildren();
		org.eclipse.emf.ecore.resource.Resource.Internal internal6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain8 = zentaDiagramModel0
				.eSetResource(internal6, notificationChain7);
		zentaDiagramModel0.setLineWidth((-1));
		int int11 = zentaDiagramModel0.getLineWidth();
		org.eclipse.emf.common.util.URI uRI12 = null;
		zentaDiagramModel0.eSetProxyURI(uRI12);
		boolean boolean14 = zentaDiagramModel0.isChecked();
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature15 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.ecore.EStructuralFeature.Setting setting16 = zentaDiagramModel0
					.eSetting(eStructuralFeature15);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertNotNull(iDiagramModelObjectList5);
		org.junit.Assert.assertNull(notificationChain8);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
		org.junit.Assert.assertTrue(
				"'" + boolean14 + "' != '" + false + "'", boolean14 == false
		);
	}

	@Test
	public void test0991() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0991"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineColor("");
		org.eclipse.emf.ecore.resource.Resource resource5 = zentaDiagramModel0
				.eResource();
		org.junit.Assert.assertNull(resource5);
	}

	@Test
	public void test0992() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0992"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EClass eClass4 = zentaDiagramModel0.eClass();
		int int5 = zentaDiagramModel0.getConnectionRouterType();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel6 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel6.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass9 = zentaDiagramModel6.eClass();
		boolean boolean10 = zentaDiagramModel6.eDeliver();
		boolean boolean11 = zentaDiagramModel0.eContains(zentaDiagramModel6);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNotNull(eClass4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNotNull(eClass9);
		org.junit.Assert.assertTrue(
				"'" + boolean10 + "' != '" + true + "'", boolean10 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + false + "'", boolean11 == false
		);
	}

	@Test
	public void test0993() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0993"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal4 = zentaDiagramModel0
				.eInternalResource();
		org.eclipse.emf.ecore.resource.Resource.Internal internal5 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain6 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain7 = zentaDiagramModel0
				.eSetResource(internal5, notificationChain6);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel8 = zentaDiagramModel0
				.findDiagramModel();
		int int9 = zentaDiagramModel0.eContainerFeatureID();
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert.assertNull(internal4);
		org.junit.Assert.assertNull(notificationChain7);
		org.junit.Assert.assertNotNull(iDiagramModel8);
		org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
	}

	@Test
	public void test0994() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0994"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		org.eclipse.emf.ecore.resource.Resource resource33 = zentaDiagramModel22
				.eResource();
		zentaDiagramModel22.setDocumentation("hi!");
		org.eclipse.emf.common.notify.NotificationChain notificationChain36 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			org.eclipse.emf.common.notify.NotificationChain notificationChain37 = zentaDiagramModel22
					.eDynamicBasicRemoveFromContainer(notificationChain36);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertNull(resource33);
	}

	@Test
	public void test0995() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0995"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		org.eclipse.emf.ecore.InternalEObject.EStore eStore3 = zentaDiagramModel0
				.eStore();
		org.eclipse.emf.common.notify.Notification notification4 = null;
		zentaDiagramModel0.eNotify(notification4);
		int int6 = zentaDiagramModel0.getViewpoint();
		int int7 = zentaDiagramModel0.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		int int11 = zentaDiagramModel8.eContainerFeatureID();
		java.lang.String str12 = zentaDiagramModel8.getName();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel13 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel13.setDocumentation("hi!");
		int int16 = zentaDiagramModel13.eContainerFeatureID();
		java.lang.String str17 = zentaDiagramModel13.getName();
		zentaDiagramModel8.setAdapter(zentaDiagramModel13, 1L);
		java.lang.String str20 = zentaDiagramModel13.getId();
		int int21 = zentaDiagramModel13.getViewpoint();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel22 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel22.setDocumentation("hi!");
		int int25 = zentaDiagramModel22.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal26 = zentaDiagramModel22
				.eInternalResource();
		java.lang.String str27 = zentaDiagramModel22.getDocumentation();
		boolean boolean28 = zentaDiagramModel22.isChecked();
		zentaDiagramModel22.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel31 = zentaDiagramModel22
				.findDiagramModel();
		zentaDiagramModel0.setAdapter(zentaDiagramModel13, zentaDiagramModel22);
		boolean boolean33 = zentaDiagramModel13.isTemplate();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel35 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel35.setDocumentation("hi!");
		int int38 = zentaDiagramModel35.eContainerFeatureID();
		java.lang.String str39 = zentaDiagramModel35.getName();
		int int40 = zentaDiagramModel35.getViewpoint();
		org.eclipse.emf.common.util.URI uRI41 = zentaDiagramModel35.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel43 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel43.setDocumentation("hi!");
		java.lang.Object obj47 = zentaDiagramModel43.getAdapter(0L);
		int int48 = zentaDiagramModel43.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList49 = zentaDiagramModel43
				.eAdapters();
		java.lang.Object obj50 = zentaDiagramModel35.eInvoke(0, adapterList49);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj51 = zentaDiagramModel13
					.eDynamicInvoke((short) 10, adapterList49);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertNull(eStore3);
		org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
		org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
		org.junit.Assert
				.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
		org.junit.Assert
				.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
		org.junit.Assert
				.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
		org.junit.Assert
				.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
		org.junit.Assert.assertNull(str20);
		org.junit.Assert
				.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
		org.junit.Assert
				.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
		org.junit.Assert.assertNull(internal26);
		org.junit.Assert.assertEquals(
				"'" + str27 + "' != '" + "hi!" + "'", str27, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean28 + "' != '" + false + "'", boolean28 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel31);
		org.junit.Assert.assertTrue(
				"'" + boolean33 + "' != '" + false + "'", boolean33 == false
		);
		org.junit.Assert
				.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
		org.junit.Assert
				.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
		org.junit.Assert
				.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
		org.junit.Assert.assertNull(uRI41);
		org.junit.Assert.assertNull(obj47);
		org.junit.Assert
				.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
		org.junit.Assert.assertNotNull(adapterList49);
		org.junit.Assert.assertNotNull(obj50);
	}

	@Test
	public void test0996() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0996"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		java.lang.Object obj4 = zentaDiagramModel0.getAdapter(0L);
		int int5 = zentaDiagramModel0.getLineWidth();
		java.lang.String str6 = zentaDiagramModel0.getDocumentation();
		boolean boolean7 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.resource.Resource resource8 = zentaDiagramModel0
				.eResource();
		org.junit.Assert.assertNull(obj4);
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
		org.junit.Assert
				.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
		org.junit.Assert.assertTrue(
				"'" + boolean7 + "' != '" + false + "'", boolean7 == false
		);
		org.junit.Assert.assertNull(resource8);
	}

	@Test
	public void test0997() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0997"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		org.eclipse.emf.common.util.URI uRI6 = zentaDiagramModel0.eProxyURI();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel8 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel8.setDocumentation("hi!");
		java.lang.Object obj12 = zentaDiagramModel8.getAdapter(0L);
		int int13 = zentaDiagramModel8.getLineWidth();
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList14 = zentaDiagramModel8
				.eAdapters();
		java.lang.Object obj15 = zentaDiagramModel0.eInvoke(0, adapterList14);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel16 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel16.setLineWidth((short) 0);
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel19 = zentaDiagramModel16
				.findDiagramModel();
		org.eclipse.emf.ecore.EClass eClass20 = zentaDiagramModel16.eClass();
		zentaDiagramModel0.eSetClass(eClass20);
		org.eclipse.emf.ecore.resource.Resource.Internal internal22 = zentaDiagramModel0
				.eInternalResource();
		zentaDiagramModel0.setConnectionRouterType((byte) 1);
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertNull(uRI6);
		org.junit.Assert.assertNull(obj12);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
		org.junit.Assert.assertNotNull(adapterList14);
		org.junit.Assert.assertNotNull(obj15);
		org.junit.Assert.assertNotNull(iDiagramModel19);
		org.junit.Assert.assertNotNull(eClass20);
		org.junit.Assert.assertNull(internal22);
	}

	@Test
	public void test0998() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0998"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		org.eclipse.emf.common.util.URI uRI1 = null;
		zentaDiagramModel0.eSetProxyURI(uRI1);
		zentaDiagramModel0.setLineWidth((short) -1);
		boolean boolean5 = zentaDiagramModel0.eNotificationRequired();
		org.eclipse.emf.ecore.EObject eObject6 = zentaDiagramModel0
				.eContainer();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setDocumentation("hi!");
		int int10 = zentaDiagramModel7.eContainerFeatureID();
		org.eclipse.emf.ecore.resource.Resource.Internal internal11 = zentaDiagramModel7
				.eInternalResource();
		java.lang.String str12 = zentaDiagramModel7.getDocumentation();
		boolean boolean13 = zentaDiagramModel7.isChecked();
		zentaDiagramModel7.setName("hi!");
		org.rulez.magwas.zenta.model.IDiagramModel iDiagramModel16 = zentaDiagramModel7
				.getDiagramModel();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel17 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel17.setDocumentation("hi!");
		java.lang.Object obj21 = zentaDiagramModel17.getAdapter(0L);
		int int22 = zentaDiagramModel17.getLineWidth();
		org.eclipse.emf.common.util.TreeIterator<org.eclipse.emf.ecore.EObject> eObjectItor23 = zentaDiagramModel17
				.eAllContents();
		zentaDiagramModel0.setAdapter(zentaDiagramModel7, eObjectItor23);
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj28 = zentaDiagramModel0
					.eDynamicGet((byte) -1, true, false);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue(
				"'" + boolean5 + "' != '" + false + "'", boolean5 == false
		);
		org.junit.Assert.assertNull(eObject6);
		org.junit.Assert
				.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
		org.junit.Assert.assertNull(internal11);
		org.junit.Assert.assertEquals(
				"'" + str12 + "' != '" + "hi!" + "'", str12, "hi!"
		);
		org.junit.Assert.assertTrue(
				"'" + boolean13 + "' != '" + false + "'", boolean13 == false
		);
		org.junit.Assert.assertNotNull(iDiagramModel16);
		org.junit.Assert.assertNull(obj21);
		org.junit.Assert
				.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
		org.junit.Assert.assertNotNull(eObjectItor23);
	}

	@Test
	public void test0999() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test0999"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.hasDiagramReferences();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass10 = zentaDiagramModel7.eClass();
		boolean boolean11 = zentaDiagramModel7.eDeliver();
		boolean boolean12 = zentaDiagramModel0.eContains(zentaDiagramModel7);
		int int13 = zentaDiagramModel0.eContainerFeatureID();
		org.eclipse.emf.ecore.EOperation eOperation14 = null;
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel15 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel15.setDocumentation("hi!");
		java.lang.Object obj19 = zentaDiagramModel15.getAdapter(0L);
		int int20 = zentaDiagramModel15.getLineWidth();
		java.lang.String str21 = zentaDiagramModel15.getDocumentation();
		org.eclipse.emf.ecore.resource.Resource.Internal internal22 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain23 = null;
		org.eclipse.emf.common.notify.NotificationChain notificationChain24 = zentaDiagramModel15
				.eSetResource(internal22, notificationChain23);
		org.eclipse.emf.common.util.EList<org.eclipse.emf.common.notify.Adapter> adapterList25 = zentaDiagramModel15
				.eAdapters();
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj26 = zentaDiagramModel0
					.eInvoke(eOperation14, adapterList25);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eClass10);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
		org.junit.Assert
				.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
		org.junit.Assert.assertNull(obj19);
		org.junit.Assert
				.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
		org.junit.Assert.assertEquals(
				"'" + str21 + "' != '" + "hi!" + "'", str21, "hi!"
		);
		org.junit.Assert.assertNull(notificationChain24);
		org.junit.Assert.assertNotNull(adapterList25);
	}

	@Test
	public void test1000() throws Throwable {
		if (debug)
			System.out.format(
					"%n%s%n", "ZentaDiagramModelRegressionTest1.test1000"
			);
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel0 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel0.setDocumentation("hi!");
		int int3 = zentaDiagramModel0.eContainerFeatureID();
		java.lang.String str4 = zentaDiagramModel0.getName();
		int int5 = zentaDiagramModel0.getViewpoint();
		boolean boolean6 = zentaDiagramModel0.hasDiagramReferences();
		org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel zentaDiagramModel7 = new org.rulez.magwas.zenta.model.handmade.ZentaDiagramModel();
		zentaDiagramModel7.setLineWidth((short) 0);
		org.eclipse.emf.ecore.EClass eClass10 = zentaDiagramModel7.eClass();
		boolean boolean11 = zentaDiagramModel7.eDeliver();
		boolean boolean12 = zentaDiagramModel0.eContains(zentaDiagramModel7);
		org.eclipse.emf.ecore.EStructuralFeature eStructuralFeature13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.Object obj14 = zentaDiagramModel7
					.eGet(eStructuralFeature13);
			org.junit.Assert.fail(
					"Expected exception of type java.lang.IllegalArgumentException; message: null"
			);
		} catch (java.lang.IllegalArgumentException e) {
			// Expected exception.
		}
		org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
		org.junit.Assert
				.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
		org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
		org.junit.Assert.assertTrue(
				"'" + boolean6 + "' != '" + false + "'", boolean6 == false
		);
		org.junit.Assert.assertNotNull(eClass10);
		org.junit.Assert.assertTrue(
				"'" + boolean11 + "' != '" + true + "'", boolean11 == true
		);
		org.junit.Assert.assertTrue(
				"'" + boolean12 + "' != '" + false + "'", boolean12 == false
		);
	}
}
